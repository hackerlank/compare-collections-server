// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerMessage.proto

package com.randioo.compare_collections_server.protocol;

public final class ServerMessage {
  private ServerMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class SC extends
      com.google.protobuf.GeneratedMessage {
    // Use SC.newBuilder() to construct.
    private SC() {
      initFields();
    }
    private SC(boolean noInit) {}
    
    private static final SC defaultInstance;
    public static SC getDefaultInstance() {
      return defaultInstance;
    }
    
    public SC getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.ServerMessage.internal_static_com_randioo_compare_collections_server_protocol_SC_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.ServerMessage.internal_static_com_randioo_compare_collections_server_protocol_SC_fieldAccessorTable;
    }
    
    // optional .com.randioo.compare_collections_server.protocol.HeartResponse HeartResponse = 1;
    public static final int HEARTRESPONSE_FIELD_NUMBER = 1;
    private boolean hasHeartResponse;
    private com.randioo.compare_collections_server.protocol.Heart.HeartResponse heartResponse_;
    public boolean hasHeartResponse() { return hasHeartResponse; }
    public com.randioo.compare_collections_server.protocol.Heart.HeartResponse getHeartResponse() { return heartResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCHeart SCHeart = 2;
    public static final int SCHEART_FIELD_NUMBER = 2;
    private boolean hasSCHeart;
    private com.randioo.compare_collections_server.protocol.Heart.SCHeart sCHeart_;
    public boolean hasSCHeart() { return hasSCHeart; }
    public com.randioo.compare_collections_server.protocol.Heart.SCHeart getSCHeart() { return sCHeart_; }
    
    // optional .com.randioo.compare_collections_server.protocol.LoginGetRoleDataResponse LoginGetRoleDataResponse = 3;
    public static final int LOGINGETROLEDATARESPONSE_FIELD_NUMBER = 3;
    private boolean hasLoginGetRoleDataResponse;
    private com.randioo.compare_collections_server.protocol.Login.LoginGetRoleDataResponse loginGetRoleDataResponse_;
    public boolean hasLoginGetRoleDataResponse() { return hasLoginGetRoleDataResponse; }
    public com.randioo.compare_collections_server.protocol.Login.LoginGetRoleDataResponse getLoginGetRoleDataResponse() { return loginGetRoleDataResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCLoginOtherSide SCLoginOtherSide = 4;
    public static final int SCLOGINOTHERSIDE_FIELD_NUMBER = 4;
    private boolean hasSCLoginOtherSide;
    private com.randioo.compare_collections_server.protocol.Login.SCLoginOtherSide sCLoginOtherSide_;
    public boolean hasSCLoginOtherSide() { return hasSCLoginOtherSide; }
    public com.randioo.compare_collections_server.protocol.Login.SCLoginOtherSide getSCLoginOtherSide() { return sCLoginOtherSide_; }
    
    // optional .com.randioo.compare_collections_server.protocol.RoleRenameResponse RoleRenameResponse = 5;
    public static final int ROLERENAMERESPONSE_FIELD_NUMBER = 5;
    private boolean hasRoleRenameResponse;
    private com.randioo.compare_collections_server.protocol.Role.RoleRenameResponse roleRenameResponse_;
    public boolean hasRoleRenameResponse() { return hasRoleRenameResponse; }
    public com.randioo.compare_collections_server.protocol.Role.RoleRenameResponse getRoleRenameResponse() { return roleRenameResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.RoleGetRoleDataResponse RoleGetRoleDataResponse = 6;
    public static final int ROLEGETROLEDATARESPONSE_FIELD_NUMBER = 6;
    private boolean hasRoleGetRoleDataResponse;
    private com.randioo.compare_collections_server.protocol.Role.RoleGetRoleDataResponse roleGetRoleDataResponse_;
    public boolean hasRoleGetRoleDataResponse() { return hasRoleGetRoleDataResponse; }
    public com.randioo.compare_collections_server.protocol.Role.RoleGetRoleDataResponse getRoleGetRoleDataResponse() { return roleGetRoleDataResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCRoleRandiooCoinChange SCRoleRandiooCoinChange = 7;
    public static final int SCROLERANDIOOCOINCHANGE_FIELD_NUMBER = 7;
    private boolean hasSCRoleRandiooCoinChange;
    private com.randioo.compare_collections_server.protocol.Role.SCRoleRandiooCoinChange sCRoleRandiooCoinChange_;
    public boolean hasSCRoleRandiooCoinChange() { return hasSCRoleRandiooCoinChange; }
    public com.randioo.compare_collections_server.protocol.Role.SCRoleRandiooCoinChange getSCRoleRandiooCoinChange() { return sCRoleRandiooCoinChange_; }
    
    // optional .com.randioo.compare_collections_server.protocol.MatchCreateGameResponse MatchCreateGameResponse = 8;
    public static final int MATCHCREATEGAMERESPONSE_FIELD_NUMBER = 8;
    private boolean hasMatchCreateGameResponse;
    private com.randioo.compare_collections_server.protocol.Match.MatchCreateGameResponse matchCreateGameResponse_;
    public boolean hasMatchCreateGameResponse() { return hasMatchCreateGameResponse; }
    public com.randioo.compare_collections_server.protocol.Match.MatchCreateGameResponse getMatchCreateGameResponse() { return matchCreateGameResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.MatchJoinGameResponse MatchJoinGameResponse = 9;
    public static final int MATCHJOINGAMERESPONSE_FIELD_NUMBER = 9;
    private boolean hasMatchJoinGameResponse;
    private com.randioo.compare_collections_server.protocol.Match.MatchJoinGameResponse matchJoinGameResponse_;
    public boolean hasMatchJoinGameResponse() { return hasMatchJoinGameResponse; }
    public com.randioo.compare_collections_server.protocol.Match.MatchJoinGameResponse getMatchJoinGameResponse() { return matchJoinGameResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCMatchJoinGame SCMatchJoinGame = 10;
    public static final int SCMATCHJOINGAME_FIELD_NUMBER = 10;
    private boolean hasSCMatchJoinGame;
    private com.randioo.compare_collections_server.protocol.Match.SCMatchJoinGame sCMatchJoinGame_;
    public boolean hasSCMatchJoinGame() { return hasSCMatchJoinGame; }
    public com.randioo.compare_collections_server.protocol.Match.SCMatchJoinGame getSCMatchJoinGame() { return sCMatchJoinGame_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCMatchMineInfo SCMatchMineInfo = 11;
    public static final int SCMATCHMINEINFO_FIELD_NUMBER = 11;
    private boolean hasSCMatchMineInfo;
    private com.randioo.compare_collections_server.protocol.Match.SCMatchMineInfo sCMatchMineInfo_;
    public boolean hasSCMatchMineInfo() { return hasSCMatchMineInfo; }
    public com.randioo.compare_collections_server.protocol.Match.SCMatchMineInfo getSCMatchMineInfo() { return sCMatchMineInfo_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCMatchCreateGame SCMatchCreateGame = 12;
    public static final int SCMATCHCREATEGAME_FIELD_NUMBER = 12;
    private boolean hasSCMatchCreateGame;
    private com.randioo.compare_collections_server.protocol.Match.SCMatchCreateGame sCMatchCreateGame_;
    public boolean hasSCMatchCreateGame() { return hasSCMatchCreateGame; }
    public com.randioo.compare_collections_server.protocol.Match.SCMatchCreateGame getSCMatchCreateGame() { return sCMatchCreateGame_; }
    
    // optional .com.randioo.compare_collections_server.protocol.MatchPreJoinResponse MatchPreJoinResponse = 13;
    public static final int MATCHPREJOINRESPONSE_FIELD_NUMBER = 13;
    private boolean hasMatchPreJoinResponse;
    private com.randioo.compare_collections_server.protocol.Match.MatchPreJoinResponse matchPreJoinResponse_;
    public boolean hasMatchPreJoinResponse() { return hasMatchPreJoinResponse; }
    public com.randioo.compare_collections_server.protocol.Match.MatchPreJoinResponse getMatchPreJoinResponse() { return matchPreJoinResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightNoticeReady SCFightNoticeReady = 14;
    public static final int SCFIGHTNOTICEREADY_FIELD_NUMBER = 14;
    private boolean hasSCFightNoticeReady;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeReady sCFightNoticeReady_;
    public boolean hasSCFightNoticeReady() { return hasSCFightNoticeReady; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeReady getSCFightNoticeReady() { return sCFightNoticeReady_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightReadyResponse FightReadyResponse = 15;
    public static final int FIGHTREADYRESPONSE_FIELD_NUMBER = 15;
    private boolean hasFightReadyResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightReadyResponse fightReadyResponse_;
    public boolean hasFightReadyResponse() { return hasFightReadyResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightReadyResponse getFightReadyResponse() { return fightReadyResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightReady SCFightReady = 16;
    public static final int SCFIGHTREADY_FIELD_NUMBER = 16;
    private boolean hasSCFightReady;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightReady sCFightReady_;
    public boolean hasSCFightReady() { return hasSCFightReady; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightReady getSCFightReady() { return sCFightReady_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightStart SCFightStart = 17;
    public static final int SCFIGHTSTART_FIELD_NUMBER = 17;
    private boolean hasSCFightStart;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightStart sCFightStart_;
    public boolean hasSCFightStart() { return hasSCFightStart; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightStart getSCFightStart() { return sCFightStart_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightExitGameResponse FightExitGameResponse = 18;
    public static final int FIGHTEXITGAMERESPONSE_FIELD_NUMBER = 18;
    private boolean hasFightExitGameResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightExitGameResponse fightExitGameResponse_;
    public boolean hasFightExitGameResponse() { return hasFightExitGameResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightExitGameResponse getFightExitGameResponse() { return fightExitGameResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightExitGame SCFightExitGame = 19;
    public static final int SCFIGHTEXITGAME_FIELD_NUMBER = 19;
    private boolean hasSCFightExitGame;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightExitGame sCFightExitGame_;
    public boolean hasSCFightExitGame() { return hasSCFightExitGame; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightExitGame getSCFightExitGame() { return sCFightExitGame_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightClearRoomId SCFightClearRoomId = 20;
    public static final int SCFIGHTCLEARROOMID_FIELD_NUMBER = 20;
    private boolean hasSCFightClearRoomId;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightClearRoomId sCFightClearRoomId_;
    public boolean hasSCFightClearRoomId() { return hasSCFightClearRoomId; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightClearRoomId getSCFightClearRoomId() { return sCFightClearRoomId_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightLoadResource SCFightLoadResource = 21;
    public static final int SCFIGHTLOADRESOURCE_FIELD_NUMBER = 21;
    private boolean hasSCFightLoadResource;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightLoadResource sCFightLoadResource_;
    public boolean hasSCFightLoadResource() { return hasSCFightLoadResource; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightLoadResource getSCFightLoadResource() { return sCFightLoadResource_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightNoticeSendCard SCFightNoticeSendCard = 22;
    public static final int SCFIGHTNOTICESENDCARD_FIELD_NUMBER = 22;
    private boolean hasSCFightNoticeSendCard;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeSendCard sCFightNoticeSendCard_;
    public boolean hasSCFightNoticeSendCard() { return hasSCFightNoticeSendCard; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeSendCard getSCFightNoticeSendCard() { return sCFightNoticeSendCard_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightSendCardResponse FightSendCardResponse = 23;
    public static final int FIGHTSENDCARDRESPONSE_FIELD_NUMBER = 23;
    private boolean hasFightSendCardResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightSendCardResponse fightSendCardResponse_;
    public boolean hasFightSendCardResponse() { return hasFightSendCardResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightSendCardResponse getFightSendCardResponse() { return fightSendCardResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightApplyExitGameResponse FightApplyExitGameResponse = 24;
    public static final int FIGHTAPPLYEXITGAMERESPONSE_FIELD_NUMBER = 24;
    private boolean hasFightApplyExitGameResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightApplyExitGameResponse fightApplyExitGameResponse_;
    public boolean hasFightApplyExitGameResponse() { return hasFightApplyExitGameResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightApplyExitGameResponse getFightApplyExitGameResponse() { return fightApplyExitGameResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightApplyExitGame SCFightApplyExitGame = 25;
    public static final int SCFIGHTAPPLYEXITGAME_FIELD_NUMBER = 25;
    private boolean hasSCFightApplyExitGame;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitGame sCFightApplyExitGame_;
    public boolean hasSCFightApplyExitGame() { return hasSCFightApplyExitGame; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitGame getSCFightApplyExitGame() { return sCFightApplyExitGame_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightAgreeExitGameResponse FightAgreeExitGameResponse = 26;
    public static final int FIGHTAGREEEXITGAMERESPONSE_FIELD_NUMBER = 26;
    private boolean hasFightAgreeExitGameResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightAgreeExitGameResponse fightAgreeExitGameResponse_;
    public boolean hasFightAgreeExitGameResponse() { return hasFightAgreeExitGameResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightAgreeExitGameResponse getFightAgreeExitGameResponse() { return fightAgreeExitGameResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightNoticeAgreeExit SCFightNoticeAgreeExit = 27;
    public static final int SCFIGHTNOTICEAGREEEXIT_FIELD_NUMBER = 27;
    private boolean hasSCFightNoticeAgreeExit;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeAgreeExit sCFightNoticeAgreeExit_;
    public boolean hasSCFightNoticeAgreeExit() { return hasSCFightNoticeAgreeExit; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeAgreeExit getSCFightNoticeAgreeExit() { return sCFightNoticeAgreeExit_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightApplyExitResult SCFightApplyExitResult = 28;
    public static final int SCFIGHTAPPLYEXITRESULT_FIELD_NUMBER = 28;
    private boolean hasSCFightApplyExitResult;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitResult sCFightApplyExitResult_;
    public boolean hasSCFightApplyExitResult() { return hasSCFightApplyExitResult; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitResult getSCFightApplyExitResult() { return sCFightApplyExitResult_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightSendCard SCFightSendCard = 29;
    public static final int SCFIGHTSENDCARD_FIELD_NUMBER = 29;
    private boolean hasSCFightSendCard;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightSendCard sCFightSendCard_;
    public boolean hasSCFightSendCard() { return hasSCFightSendCard; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightSendCard getSCFightSendCard() { return sCFightSendCard_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightRoundOver SCFightRoundOver = 30;
    public static final int SCFIGHTROUNDOVER_FIELD_NUMBER = 30;
    private boolean hasSCFightRoundOver;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOver sCFightRoundOver_;
    public boolean hasSCFightRoundOver() { return hasSCFightRoundOver; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOver getSCFightRoundOver() { return sCFightRoundOver_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightGameOver SCFightGameOver = 31;
    public static final int SCFIGHTGAMEOVER_FIELD_NUMBER = 31;
    private boolean hasSCFightGameOver;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightGameOver sCFightGameOver_;
    public boolean hasSCFightGameOver() { return hasSCFightGameOver; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightGameOver getSCFightGameOver() { return sCFightGameOver_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightGetlastRoundResponse FightGetlastRoundResponse = 32;
    public static final int FIGHTGETLASTROUNDRESPONSE_FIELD_NUMBER = 32;
    private boolean hasFightGetlastRoundResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightGetlastRoundResponse fightGetlastRoundResponse_;
    public boolean hasFightGetlastRoundResponse() { return hasFightGetlastRoundResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightGetlastRoundResponse getFightGetlastRoundResponse() { return fightGetlastRoundResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightTouchCard SCFightTouchCard = 33;
    public static final int SCFIGHTTOUCHCARD_FIELD_NUMBER = 33;
    private boolean hasSCFightTouchCard;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightTouchCard sCFightTouchCard_;
    public boolean hasSCFightTouchCard() { return hasSCFightTouchCard; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightTouchCard getSCFightTouchCard() { return sCFightTouchCard_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightGuoResponse FightGuoResponse = 34;
    public static final int FIGHTGUORESPONSE_FIELD_NUMBER = 34;
    private boolean hasFightGuoResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightGuoResponse fightGuoResponse_;
    public boolean hasFightGuoResponse() { return hasFightGuoResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightGuoResponse getFightGuoResponse() { return fightGuoResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightGuo SCFightGuo = 35;
    public static final int SCFIGHTGUO_FIELD_NUMBER = 35;
    private boolean hasSCFightGuo;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightGuo sCFightGuo_;
    public boolean hasSCFightGuo() { return hasSCFightGuo; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightGuo getSCFightGuo() { return sCFightGuo_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightCountdown SCFightCountdown = 36;
    public static final int SCFIGHTCOUNTDOWN_FIELD_NUMBER = 36;
    private boolean hasSCFightCountdown;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightCountdown sCFightCountdown_;
    public boolean hasSCFightCountdown() { return hasSCFightCountdown; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightCountdown getSCFightCountdown() { return sCFightCountdown_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightPointSeat SCFightPointSeat = 37;
    public static final int SCFIGHTPOINTSEAT_FIELD_NUMBER = 37;
    private boolean hasSCFightPointSeat;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightPointSeat sCFightPointSeat_;
    public boolean hasSCFightPointSeat() { return hasSCFightPointSeat; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightPointSeat getSCFightPointSeat() { return sCFightPointSeat_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightDisconnect SCFightDisconnect = 38;
    public static final int SCFIGHTDISCONNECT_FIELD_NUMBER = 38;
    private boolean hasSCFightDisconnect;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightDisconnect sCFightDisconnect_;
    public boolean hasSCFightDisconnect() { return hasSCFightDisconnect; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightDisconnect getSCFightDisconnect() { return sCFightDisconnect_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightPublicScore SCFightPublicScore = 39;
    public static final int SCFIGHTPUBLICSCORE_FIELD_NUMBER = 39;
    private boolean hasSCFightPublicScore;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightPublicScore sCFightPublicScore_;
    public boolean hasSCFightPublicScore() { return hasSCFightPublicScore; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightPublicScore getSCFightPublicScore() { return sCFightPublicScore_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightScore SCFightScore = 40;
    public static final int SCFIGHTSCORE_FIELD_NUMBER = 40;
    private boolean hasSCFightScore;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightScore sCFightScore_;
    public boolean hasSCFightScore() { return hasSCFightScore; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightScore getSCFightScore() { return sCFightScore_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightQueryGameConfigResponse FightQueryGameConfigResponse = 41;
    public static final int FIGHTQUERYGAMECONFIGRESPONSE_FIELD_NUMBER = 41;
    private boolean hasFightQueryGameConfigResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightQueryGameConfigResponse fightQueryGameConfigResponse_;
    public boolean hasFightQueryGameConfigResponse() { return hasFightQueryGameConfigResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightQueryGameConfigResponse getFightQueryGameConfigResponse() { return fightQueryGameConfigResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightClientDispatchResponse FightClientDispatchResponse = 42;
    public static final int FIGHTCLIENTDISPATCHRESPONSE_FIELD_NUMBER = 42;
    private boolean hasFightClientDispatchResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightClientDispatchResponse fightClientDispatchResponse_;
    public boolean hasFightClientDispatchResponse() { return hasFightClientDispatchResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightClientDispatchResponse getFightClientDispatchResponse() { return fightClientDispatchResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightClientTouchCardResponse FightClientTouchCardResponse = 43;
    public static final int FIGHTCLIENTTOUCHCARDRESPONSE_FIELD_NUMBER = 43;
    private boolean hasFightClientTouchCardResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightClientTouchCardResponse fightClientTouchCardResponse_;
    public boolean hasFightClientTouchCardResponse() { return hasFightClientTouchCardResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightClientTouchCardResponse getFightClientTouchCardResponse() { return fightClientTouchCardResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightRoomDismiss SCFightRoomDismiss = 44;
    public static final int SCFIGHTROOMDISMISS_FIELD_NUMBER = 44;
    private boolean hasSCFightRoomDismiss;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightRoomDismiss sCFightRoomDismiss_;
    public boolean hasSCFightRoomDismiss() { return hasSCFightRoomDismiss; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightRoomDismiss getSCFightRoomDismiss() { return sCFightRoomDismiss_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightConfirmGameOverResponse FightConfirmGameOverResponse = 45;
    public static final int FIGHTCONFIRMGAMEOVERRESPONSE_FIELD_NUMBER = 45;
    private boolean hasFightConfirmGameOverResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightConfirmGameOverResponse fightConfirmGameOverResponse_;
    public boolean hasFightConfirmGameOverResponse() { return hasFightConfirmGameOverResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightConfirmGameOverResponse getFightConfirmGameOverResponse() { return fightConfirmGameOverResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightGetRoomDataResponse FightGetRoomDataResponse = 46;
    public static final int FIGHTGETROOMDATARESPONSE_FIELD_NUMBER = 46;
    private boolean hasFightGetRoomDataResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightGetRoomDataResponse fightGetRoomDataResponse_;
    public boolean hasFightGetRoomDataResponse() { return hasFightGetRoomDataResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightGetRoomDataResponse getFightGetRoomDataResponse() { return fightGetRoomDataResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SettingsResponse SettingsResponse = 47;
    public static final int SETTINGSRESPONSE_FIELD_NUMBER = 47;
    private boolean hasSettingsResponse;
    private com.randioo.compare_collections_server.protocol.Settings.SettingsResponse settingsResponse_;
    public boolean hasSettingsResponse() { return hasSettingsResponse; }
    public com.randioo.compare_collections_server.protocol.Settings.SettingsResponse getSettingsResponse() { return settingsResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SettingsShowResponse SettingsShowResponse = 48;
    public static final int SETTINGSSHOWRESPONSE_FIELD_NUMBER = 48;
    private boolean hasSettingsShowResponse;
    private com.randioo.compare_collections_server.protocol.Settings.SettingsShowResponse settingsShowResponse_;
    public boolean hasSettingsShowResponse() { return hasSettingsShowResponse; }
    public com.randioo.compare_collections_server.protocol.Settings.SettingsShowResponse getSettingsShowResponse() { return settingsShowResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.RaceJoinRaceResponse RaceJoinRaceResponse = 49;
    public static final int RACEJOINRACERESPONSE_FIELD_NUMBER = 49;
    private boolean hasRaceJoinRaceResponse;
    private com.randioo.compare_collections_server.protocol.Race.RaceJoinRaceResponse raceJoinRaceResponse_;
    public boolean hasRaceJoinRaceResponse() { return hasRaceJoinRaceResponse; }
    public com.randioo.compare_collections_server.protocol.Race.RaceJoinRaceResponse getRaceJoinRaceResponse() { return raceJoinRaceResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCRaceJoinRace SCRaceJoinRace = 50;
    public static final int SCRACEJOINRACE_FIELD_NUMBER = 50;
    private boolean hasSCRaceJoinRace;
    private com.randioo.compare_collections_server.protocol.Race.SCRaceJoinRace sCRaceJoinRace_;
    public boolean hasSCRaceJoinRace() { return hasSCRaceJoinRace; }
    public com.randioo.compare_collections_server.protocol.Race.SCRaceJoinRace getSCRaceJoinRace() { return sCRaceJoinRace_; }
    
    // optional .com.randioo.compare_collections_server.protocol.RaceShowQueueResponse RaceShowQueueResponse = 51;
    public static final int RACESHOWQUEUERESPONSE_FIELD_NUMBER = 51;
    private boolean hasRaceShowQueueResponse;
    private com.randioo.compare_collections_server.protocol.Race.RaceShowQueueResponse raceShowQueueResponse_;
    public boolean hasRaceShowQueueResponse() { return hasRaceShowQueueResponse; }
    public com.randioo.compare_collections_server.protocol.Race.RaceShowQueueResponse getRaceShowQueueResponse() { return raceShowQueueResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCRaceQueueChange SCRaceQueueChange = 52;
    public static final int SCRACEQUEUECHANGE_FIELD_NUMBER = 52;
    private boolean hasSCRaceQueueChange;
    private com.randioo.compare_collections_server.protocol.Race.SCRaceQueueChange sCRaceQueueChange_;
    public boolean hasSCRaceQueueChange() { return hasSCRaceQueueChange; }
    public com.randioo.compare_collections_server.protocol.Race.SCRaceQueueChange getSCRaceQueueChange() { return sCRaceQueueChange_; }
    
    // optional .com.randioo.compare_collections_server.protocol.MatchCheckRoomResponse MatchCheckRoomResponse = 53;
    public static final int MATCHCHECKROOMRESPONSE_FIELD_NUMBER = 53;
    private boolean hasMatchCheckRoomResponse;
    private com.randioo.compare_collections_server.protocol.Match.MatchCheckRoomResponse matchCheckRoomResponse_;
    public boolean hasMatchCheckRoomResponse() { return hasMatchCheckRoomResponse; }
    public com.randioo.compare_collections_server.protocol.Match.MatchCheckRoomResponse getMatchCheckRoomResponse() { return matchCheckRoomResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightNoticeBet SCFightNoticeBet = 54;
    public static final int SCFIGHTNOTICEBET_FIELD_NUMBER = 54;
    private boolean hasSCFightNoticeBet;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBet sCFightNoticeBet_;
    public boolean hasSCFightNoticeBet() { return hasSCFightNoticeBet; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBet getSCFightNoticeBet() { return sCFightNoticeBet_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightBetResponse FightBetResponse = 55;
    public static final int FIGHTBETRESPONSE_FIELD_NUMBER = 55;
    private boolean hasFightBetResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightBetResponse fightBetResponse_;
    public boolean hasFightBetResponse() { return hasFightBetResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightBetResponse getFightBetResponse() { return fightBetResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightBetScore SCFightBetScore = 56;
    public static final int SCFIGHTBETSCORE_FIELD_NUMBER = 56;
    private boolean hasSCFightBetScore;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightBetScore sCFightBetScore_;
    public boolean hasSCFightBetScore() { return hasSCFightBetScore; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightBetScore getSCFightBetScore() { return sCFightBetScore_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightDispatch SCFightDispatch = 57;
    public static final int SCFIGHTDISPATCH_FIELD_NUMBER = 57;
    private boolean hasSCFightDispatch;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightDispatch sCFightDispatch_;
    public boolean hasSCFightDispatch() { return hasSCFightDispatch; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightDispatch getSCFightDispatch() { return sCFightDispatch_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightAddCard SCFightAddCard = 58;
    public static final int SCFIGHTADDCARD_FIELD_NUMBER = 58;
    private boolean hasSCFightAddCard;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightAddCard sCFightAddCard_;
    public boolean hasSCFightAddCard() { return hasSCFightAddCard; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightAddCard getSCFightAddCard() { return sCFightAddCard_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightChooseAddCard SCFightChooseAddCard = 59;
    public static final int SCFIGHTCHOOSEADDCARD_FIELD_NUMBER = 59;
    private boolean hasSCFightChooseAddCard;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightChooseAddCard sCFightChooseAddCard_;
    public boolean hasSCFightChooseAddCard() { return hasSCFightChooseAddCard; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightChooseAddCard getSCFightChooseAddCard() { return sCFightChooseAddCard_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightChooseAddCardResponse FightChooseAddCardResponse = 60;
    public static final int FIGHTCHOOSEADDCARDRESPONSE_FIELD_NUMBER = 60;
    private boolean hasFightChooseAddCardResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightChooseAddCardResponse fightChooseAddCardResponse_;
    public boolean hasFightChooseAddCardResponse() { return hasFightChooseAddCardResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightChooseAddCardResponse getFightChooseAddCardResponse() { return fightChooseAddCardResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightCardType SCFightCardType = 61;
    public static final int SCFIGHTCARDTYPE_FIELD_NUMBER = 61;
    private boolean hasSCFightCardType;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightCardType sCFightCardType_;
    public boolean hasSCFightCardType() { return hasSCFightCardType; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightCardType getSCFightCardType() { return sCFightCardType_; }
    
    // optional .com.randioo.compare_collections_server.protocol.GmEnvVarsResponse GmEnvVarsResponse = 62;
    public static final int GMENVVARSRESPONSE_FIELD_NUMBER = 62;
    private boolean hasGmEnvVarsResponse;
    private com.randioo.compare_collections_server.protocol.Gm.GmEnvVarsResponse gmEnvVarsResponse_;
    public boolean hasGmEnvVarsResponse() { return hasGmEnvVarsResponse; }
    public com.randioo.compare_collections_server.protocol.Gm.GmEnvVarsResponse getGmEnvVarsResponse() { return gmEnvVarsResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.GmGameInfoResponse GmGameInfoResponse = 63;
    public static final int GMGAMEINFORESPONSE_FIELD_NUMBER = 63;
    private boolean hasGmGameInfoResponse;
    private com.randioo.compare_collections_server.protocol.Gm.GmGameInfoResponse gmGameInfoResponse_;
    public boolean hasGmGameInfoResponse() { return hasGmGameInfoResponse; }
    public com.randioo.compare_collections_server.protocol.Gm.GmGameInfoResponse getGmGameInfoResponse() { return gmGameInfoResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.GmDispatchCardResponse GmDispatchCardResponse = 64;
    public static final int GMDISPATCHCARDRESPONSE_FIELD_NUMBER = 64;
    private boolean hasGmDispatchCardResponse;
    private com.randioo.compare_collections_server.protocol.Gm.GmDispatchCardResponse gmDispatchCardResponse_;
    public boolean hasGmDispatchCardResponse() { return hasGmDispatchCardResponse; }
    public com.randioo.compare_collections_server.protocol.Gm.GmDispatchCardResponse getGmDispatchCardResponse() { return gmDispatchCardResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.GmRoundResponse GmRoundResponse = 65;
    public static final int GMROUNDRESPONSE_FIELD_NUMBER = 65;
    private boolean hasGmRoundResponse;
    private com.randioo.compare_collections_server.protocol.Gm.GmRoundResponse gmRoundResponse_;
    public boolean hasGmRoundResponse() { return hasGmRoundResponse; }
    public com.randioo.compare_collections_server.protocol.Gm.GmRoundResponse getGmRoundResponse() { return gmRoundResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightWatchCards SCFightWatchCards = 66;
    public static final int SCFIGHTWATCHCARDS_FIELD_NUMBER = 66;
    private boolean hasSCFightWatchCards;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightWatchCards sCFightWatchCards_;
    public boolean hasSCFightWatchCards() { return hasSCFightWatchCards; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightWatchCards getSCFightWatchCards() { return sCFightWatchCards_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightLookPaiResponse FightLookPaiResponse = 67;
    public static final int FIGHTLOOKPAIRESPONSE_FIELD_NUMBER = 67;
    private boolean hasFightLookPaiResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightLookPaiResponse fightLookPaiResponse_;
    public boolean hasFightLookPaiResponse() { return hasFightLookPaiResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightLookPaiResponse getFightLookPaiResponse() { return fightLookPaiResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightGenResponse FightGenResponse = 68;
    public static final int FIGHTGENRESPONSE_FIELD_NUMBER = 68;
    private boolean hasFightGenResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightGenResponse fightGenResponse_;
    public boolean hasFightGenResponse() { return hasFightGenResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightGenResponse getFightGenResponse() { return fightGenResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightAutoBet SCFightAutoBet = 69;
    public static final int SCFIGHTAUTOBET_FIELD_NUMBER = 69;
    private boolean hasSCFightAutoBet;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightAutoBet sCFightAutoBet_;
    public boolean hasSCFightAutoBet() { return hasSCFightAutoBet; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightAutoBet getSCFightAutoBet() { return sCFightAutoBet_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightBigger SCFightBigger = 70;
    public static final int SCFIGHTBIGGER_FIELD_NUMBER = 70;
    private boolean hasSCFightBigger;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightBigger sCFightBigger_;
    public boolean hasSCFightBigger() { return hasSCFightBigger; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightBigger getSCFightBigger() { return sCFightBigger_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightBiggerResponse FightBiggerResponse = 71;
    public static final int FIGHTBIGGERRESPONSE_FIELD_NUMBER = 71;
    private boolean hasFightBiggerResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightBiggerResponse fightBiggerResponse_;
    public boolean hasFightBiggerResponse() { return hasFightBiggerResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightBiggerResponse getFightBiggerResponse() { return fightBiggerResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightGiveUpResponse FightGiveUpResponse = 72;
    public static final int FIGHTGIVEUPRESPONSE_FIELD_NUMBER = 72;
    private boolean hasFightGiveUpResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightGiveUpResponse fightGiveUpResponse_;
    public boolean hasFightGiveUpResponse() { return hasFightGiveUpResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightGiveUpResponse getFightGiveUpResponse() { return fightGiveUpResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightTwoResponse FightTwoResponse = 73;
    public static final int FIGHTTWORESPONSE_FIELD_NUMBER = 73;
    private boolean hasFightTwoResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightTwoResponse fightTwoResponse_;
    public boolean hasFightTwoResponse() { return hasFightTwoResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightTwoResponse getFightTwoResponse() { return fightTwoResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightTwo SCFightTwo = 74;
    public static final int SCFIGHTTWO_FIELD_NUMBER = 74;
    private boolean hasSCFightTwo;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightTwo sCFightTwo_;
    public boolean hasSCFightTwo() { return hasSCFightTwo; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightTwo getSCFightTwo() { return sCFightTwo_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightGiveUp SCFightGiveUp = 75;
    public static final int SCFIGHTGIVEUP_FIELD_NUMBER = 75;
    private boolean hasSCFightGiveUp;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightGiveUp sCFightGiveUp_;
    public boolean hasSCFightGiveUp() { return hasSCFightGiveUp; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightGiveUp getSCFightGiveUp() { return sCFightGiveUp_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightGen SCFightGen = 76;
    public static final int SCFIGHTGEN_FIELD_NUMBER = 76;
    private boolean hasSCFightGen;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightGen sCFightGen_;
    public boolean hasSCFightGen() { return hasSCFightGen; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightGen getSCFightGen() { return sCFightGen_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightButtonDisappear SCFightButtonDisappear = 77;
    public static final int SCFIGHTBUTTONDISAPPEAR_FIELD_NUMBER = 77;
    private boolean hasSCFightButtonDisappear;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightButtonDisappear sCFightButtonDisappear_;
    public boolean hasSCFightButtonDisappear() { return hasSCFightButtonDisappear; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightButtonDisappear getSCFightButtonDisappear() { return sCFightButtonDisappear_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightMingPai SCFightMingPai = 78;
    public static final int SCFIGHTMINGPAI_FIELD_NUMBER = 78;
    private boolean hasSCFightMingPai;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightMingPai sCFightMingPai_;
    public boolean hasSCFightMingPai() { return hasSCFightMingPai; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightMingPai getSCFightMingPai() { return sCFightMingPai_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightAllSeat SCFightAllSeat = 79;
    public static final int SCFIGHTALLSEAT_FIELD_NUMBER = 79;
    private boolean hasSCFightAllSeat;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightAllSeat sCFightAllSeat_;
    public boolean hasSCFightAllSeat() { return hasSCFightAllSeat; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightAllSeat getSCFightAllSeat() { return sCFightAllSeat_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightBiggerButton SCFightBiggerButton = 80;
    public static final int SCFIGHTBIGGERBUTTON_FIELD_NUMBER = 80;
    private boolean hasSCFightBiggerButton;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightBiggerButton sCFightBiggerButton_;
    public boolean hasSCFightBiggerButton() { return hasSCFightBiggerButton; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightBiggerButton getSCFightBiggerButton() { return sCFightBiggerButton_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightRoundCount SCFightRoundCount = 81;
    public static final int SCFIGHTROUNDCOUNT_FIELD_NUMBER = 81;
    private boolean hasSCFightRoundCount;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightRoundCount sCFightRoundCount_;
    public boolean hasSCFightRoundCount() { return hasSCFightRoundCount; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightRoundCount getSCFightRoundCount() { return sCFightRoundCount_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCMatchExitGame SCMatchExitGame = 82;
    public static final int SCMATCHEXITGAME_FIELD_NUMBER = 82;
    private boolean hasSCMatchExitGame;
    private com.randioo.compare_collections_server.protocol.Match.SCMatchExitGame sCMatchExitGame_;
    public boolean hasSCMatchExitGame() { return hasSCMatchExitGame; }
    public com.randioo.compare_collections_server.protocol.Match.SCMatchExitGame getSCMatchExitGame() { return sCMatchExitGame_; }
    
    // optional .com.randioo.compare_collections_server.protocol.MatchExitGameResponse MatchExitGameResponse = 83;
    public static final int MATCHEXITGAMERESPONSE_FIELD_NUMBER = 83;
    private boolean hasMatchExitGameResponse;
    private com.randioo.compare_collections_server.protocol.Match.MatchExitGameResponse matchExitGameResponse_;
    public boolean hasMatchExitGameResponse() { return hasMatchExitGameResponse; }
    public com.randioo.compare_collections_server.protocol.Match.MatchExitGameResponse getMatchExitGameResponse() { return matchExitGameResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCMatchJoinInGame SCMatchJoinInGame = 84;
    public static final int SCMATCHJOININGAME_FIELD_NUMBER = 84;
    private boolean hasSCMatchJoinInGame;
    private com.randioo.compare_collections_server.protocol.Match.SCMatchJoinInGame sCMatchJoinInGame_;
    public boolean hasSCMatchJoinInGame() { return hasSCMatchJoinInGame; }
    public com.randioo.compare_collections_server.protocol.Match.SCMatchJoinInGame getSCMatchJoinInGame() { return sCMatchJoinInGame_; }
    
    // optional .com.randioo.compare_collections_server.protocol.MatchJoinInGameResponse MatchJoinInGameResponse = 85;
    public static final int MATCHJOININGAMERESPONSE_FIELD_NUMBER = 85;
    private boolean hasMatchJoinInGameResponse;
    private com.randioo.compare_collections_server.protocol.Match.MatchJoinInGameResponse matchJoinInGameResponse_;
    public boolean hasMatchJoinInGameResponse() { return hasMatchJoinInGameResponse; }
    public com.randioo.compare_collections_server.protocol.Match.MatchJoinInGameResponse getMatchJoinInGameResponse() { return matchJoinInGameResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightBetAll SCFightBetAll = 86;
    public static final int SCFIGHTBETALL_FIELD_NUMBER = 86;
    private boolean hasSCFightBetAll;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightBetAll sCFightBetAll_;
    public boolean hasSCFightBetAll() { return hasSCFightBetAll; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightBetAll getSCFightBetAll() { return sCFightBetAll_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightBetAllResponse FightBetAllResponse = 87;
    public static final int FIGHTBETALLRESPONSE_FIELD_NUMBER = 87;
    private boolean hasFightBetAllResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightBetAllResponse fightBetAllResponse_;
    public boolean hasFightBetAllResponse() { return hasFightBetAllResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightBetAllResponse getFightBetAllResponse() { return fightBetAllResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightGameStartResponse FightGameStartResponse = 88;
    public static final int FIGHTGAMESTARTRESPONSE_FIELD_NUMBER = 88;
    private boolean hasFightGameStartResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightGameStartResponse fightGameStartResponse_;
    public boolean hasFightGameStartResponse() { return hasFightGameStartResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightGameStartResponse getFightGameStartResponse() { return fightGameStartResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightPlayTalk SCFightPlayTalk = 89;
    public static final int SCFIGHTPLAYTALK_FIELD_NUMBER = 89;
    private boolean hasSCFightPlayTalk;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightPlayTalk sCFightPlayTalk_;
    public boolean hasSCFightPlayTalk() { return hasSCFightPlayTalk; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightPlayTalk getSCFightPlayTalk() { return sCFightPlayTalk_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightNoticeCallType SCFightNoticeCallType = 90;
    public static final int SCFIGHTNOTICECALLTYPE_FIELD_NUMBER = 90;
    private boolean hasSCFightNoticeCallType;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeCallType sCFightNoticeCallType_;
    public boolean hasSCFightNoticeCallType() { return hasSCFightNoticeCallType; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeCallType getSCFightNoticeCallType() { return sCFightNoticeCallType_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightCutCardsResponse FightCutCardsResponse = 91;
    public static final int FIGHTCUTCARDSRESPONSE_FIELD_NUMBER = 91;
    private boolean hasFightCutCardsResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightCutCardsResponse fightCutCardsResponse_;
    public boolean hasFightCutCardsResponse() { return hasFightCutCardsResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightCutCardsResponse getFightCutCardsResponse() { return fightCutCardsResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightCutCards SCFightCutCards = 92;
    public static final int SCFIGHTCUTCARDS_FIELD_NUMBER = 92;
    private boolean hasSCFightCutCards;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightCutCards sCFightCutCards_;
    public boolean hasSCFightCutCards() { return hasSCFightCutCards; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightCutCards getSCFightCutCards() { return sCFightCutCards_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightOpenCardsResult SCFightOpenCardsResult = 93;
    public static final int SCFIGHTOPENCARDSRESULT_FIELD_NUMBER = 93;
    private boolean hasSCFightOpenCardsResult;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightOpenCardsResult sCFightOpenCardsResult_;
    public boolean hasSCFightOpenCardsResult() { return hasSCFightOpenCardsResult; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightOpenCardsResult getSCFightOpenCardsResult() { return sCFightOpenCardsResult_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightRoundOverScore SCFightRoundOverScore = 94;
    public static final int SCFIGHTROUNDOVERSCORE_FIELD_NUMBER = 94;
    private boolean hasSCFightRoundOverScore;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOverScore sCFightRoundOverScore_;
    public boolean hasSCFightRoundOverScore() { return hasSCFightRoundOverScore; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOverScore getSCFightRoundOverScore() { return sCFightRoundOverScore_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightNoticeBattle SCFightNoticeBattle = 95;
    public static final int SCFIGHTNOTICEBATTLE_FIELD_NUMBER = 95;
    private boolean hasSCFightNoticeBattle;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBattle sCFightNoticeBattle_;
    public boolean hasSCFightNoticeBattle() { return hasSCFightNoticeBattle; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBattle getSCFightNoticeBattle() { return sCFightNoticeBattle_; }
    
    // optional .com.randioo.compare_collections_server.protocol.FightReconnectDataResponse FightReconnectDataResponse = 96;
    public static final int FIGHTRECONNECTDATARESPONSE_FIELD_NUMBER = 96;
    private boolean hasFightReconnectDataResponse;
    private com.randioo.compare_collections_server.protocol.Fight.FightReconnectDataResponse fightReconnectDataResponse_;
    public boolean hasFightReconnectDataResponse() { return hasFightReconnectDataResponse; }
    public com.randioo.compare_collections_server.protocol.Fight.FightReconnectDataResponse getFightReconnectDataResponse() { return fightReconnectDataResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightMaxBet SCFightMaxBet = 97;
    public static final int SCFIGHTMAXBET_FIELD_NUMBER = 97;
    private boolean hasSCFightMaxBet;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightMaxBet sCFightMaxBet_;
    public boolean hasSCFightMaxBet() { return hasSCFightMaxBet; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightMaxBet getSCFightMaxBet() { return sCFightMaxBet_; }
    
    // optional .com.randioo.compare_collections_server.protocol.MatchResponse MatchResponse = 98;
    public static final int MATCHRESPONSE_FIELD_NUMBER = 98;
    private boolean hasMatchResponse;
    private com.randioo.compare_collections_server.protocol.Match.MatchResponse matchResponse_;
    public boolean hasMatchResponse() { return hasMatchResponse; }
    public com.randioo.compare_collections_server.protocol.Match.MatchResponse getMatchResponse() { return matchResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.MatchCancelResponse MatchCancelResponse = 99;
    public static final int MATCHCANCELRESPONSE_FIELD_NUMBER = 99;
    private boolean hasMatchCancelResponse;
    private com.randioo.compare_collections_server.protocol.Match.MatchCancelResponse matchCancelResponse_;
    public boolean hasMatchCancelResponse() { return hasMatchCancelResponse; }
    public com.randioo.compare_collections_server.protocol.Match.MatchCancelResponse getMatchCancelResponse() { return matchCancelResponse_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightGameRoleData SCFightGameRoleData = 100;
    public static final int SCFIGHTGAMEROLEDATA_FIELD_NUMBER = 100;
    private boolean hasSCFightGameRoleData;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightGameRoleData sCFightGameRoleData_;
    public boolean hasSCFightGameRoleData() { return hasSCFightGameRoleData; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightGameRoleData getSCFightGameRoleData() { return sCFightGameRoleData_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCMatchResult SCMatchResult = 101;
    public static final int SCMATCHRESULT_FIELD_NUMBER = 101;
    private boolean hasSCMatchResult;
    private com.randioo.compare_collections_server.protocol.Match.SCMatchResult sCMatchResult_;
    public boolean hasSCMatchResult() { return hasSCMatchResult; }
    public com.randioo.compare_collections_server.protocol.Match.SCMatchResult getSCMatchResult() { return sCMatchResult_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCMatchKickGame SCMatchKickGame = 102;
    public static final int SCMATCHKICKGAME_FIELD_NUMBER = 102;
    private boolean hasSCMatchKickGame;
    private com.randioo.compare_collections_server.protocol.Match.SCMatchKickGame sCMatchKickGame_;
    public boolean hasSCMatchKickGame() { return hasSCMatchKickGame; }
    public com.randioo.compare_collections_server.protocol.Match.SCMatchKickGame getSCMatchKickGame() { return sCMatchKickGame_; }
    
    // optional .com.randioo.compare_collections_server.protocol.SCFightBattleOutCards SCFightBattleOutCards = 103;
    public static final int SCFIGHTBATTLEOUTCARDS_FIELD_NUMBER = 103;
    private boolean hasSCFightBattleOutCards;
    private com.randioo.compare_collections_server.protocol.Fight.SCFightBattleOutCards sCFightBattleOutCards_;
    public boolean hasSCFightBattleOutCards() { return hasSCFightBattleOutCards; }
    public com.randioo.compare_collections_server.protocol.Fight.SCFightBattleOutCards getSCFightBattleOutCards() { return sCFightBattleOutCards_; }
    
    private void initFields() {
      heartResponse_ = com.randioo.compare_collections_server.protocol.Heart.HeartResponse.getDefaultInstance();
      sCHeart_ = com.randioo.compare_collections_server.protocol.Heart.SCHeart.getDefaultInstance();
      loginGetRoleDataResponse_ = com.randioo.compare_collections_server.protocol.Login.LoginGetRoleDataResponse.getDefaultInstance();
      sCLoginOtherSide_ = com.randioo.compare_collections_server.protocol.Login.SCLoginOtherSide.getDefaultInstance();
      roleRenameResponse_ = com.randioo.compare_collections_server.protocol.Role.RoleRenameResponse.getDefaultInstance();
      roleGetRoleDataResponse_ = com.randioo.compare_collections_server.protocol.Role.RoleGetRoleDataResponse.getDefaultInstance();
      sCRoleRandiooCoinChange_ = com.randioo.compare_collections_server.protocol.Role.SCRoleRandiooCoinChange.getDefaultInstance();
      matchCreateGameResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchCreateGameResponse.getDefaultInstance();
      matchJoinGameResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchJoinGameResponse.getDefaultInstance();
      sCMatchJoinGame_ = com.randioo.compare_collections_server.protocol.Match.SCMatchJoinGame.getDefaultInstance();
      sCMatchMineInfo_ = com.randioo.compare_collections_server.protocol.Match.SCMatchMineInfo.getDefaultInstance();
      sCMatchCreateGame_ = com.randioo.compare_collections_server.protocol.Match.SCMatchCreateGame.getDefaultInstance();
      matchPreJoinResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchPreJoinResponse.getDefaultInstance();
      sCFightNoticeReady_ = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeReady.getDefaultInstance();
      fightReadyResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightReadyResponse.getDefaultInstance();
      sCFightReady_ = com.randioo.compare_collections_server.protocol.Fight.SCFightReady.getDefaultInstance();
      sCFightStart_ = com.randioo.compare_collections_server.protocol.Fight.SCFightStart.getDefaultInstance();
      fightExitGameResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightExitGameResponse.getDefaultInstance();
      sCFightExitGame_ = com.randioo.compare_collections_server.protocol.Fight.SCFightExitGame.getDefaultInstance();
      sCFightClearRoomId_ = com.randioo.compare_collections_server.protocol.Fight.SCFightClearRoomId.getDefaultInstance();
      sCFightLoadResource_ = com.randioo.compare_collections_server.protocol.Fight.SCFightLoadResource.getDefaultInstance();
      sCFightNoticeSendCard_ = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeSendCard.getDefaultInstance();
      fightSendCardResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightSendCardResponse.getDefaultInstance();
      fightApplyExitGameResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightApplyExitGameResponse.getDefaultInstance();
      sCFightApplyExitGame_ = com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitGame.getDefaultInstance();
      fightAgreeExitGameResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightAgreeExitGameResponse.getDefaultInstance();
      sCFightNoticeAgreeExit_ = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeAgreeExit.getDefaultInstance();
      sCFightApplyExitResult_ = com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitResult.getDefaultInstance();
      sCFightSendCard_ = com.randioo.compare_collections_server.protocol.Fight.SCFightSendCard.getDefaultInstance();
      sCFightRoundOver_ = com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOver.getDefaultInstance();
      sCFightGameOver_ = com.randioo.compare_collections_server.protocol.Fight.SCFightGameOver.getDefaultInstance();
      fightGetlastRoundResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightGetlastRoundResponse.getDefaultInstance();
      sCFightTouchCard_ = com.randioo.compare_collections_server.protocol.Fight.SCFightTouchCard.getDefaultInstance();
      fightGuoResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightGuoResponse.getDefaultInstance();
      sCFightGuo_ = com.randioo.compare_collections_server.protocol.Fight.SCFightGuo.getDefaultInstance();
      sCFightCountdown_ = com.randioo.compare_collections_server.protocol.Fight.SCFightCountdown.getDefaultInstance();
      sCFightPointSeat_ = com.randioo.compare_collections_server.protocol.Fight.SCFightPointSeat.getDefaultInstance();
      sCFightDisconnect_ = com.randioo.compare_collections_server.protocol.Fight.SCFightDisconnect.getDefaultInstance();
      sCFightPublicScore_ = com.randioo.compare_collections_server.protocol.Fight.SCFightPublicScore.getDefaultInstance();
      sCFightScore_ = com.randioo.compare_collections_server.protocol.Fight.SCFightScore.getDefaultInstance();
      fightQueryGameConfigResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightQueryGameConfigResponse.getDefaultInstance();
      fightClientDispatchResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightClientDispatchResponse.getDefaultInstance();
      fightClientTouchCardResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightClientTouchCardResponse.getDefaultInstance();
      sCFightRoomDismiss_ = com.randioo.compare_collections_server.protocol.Fight.SCFightRoomDismiss.getDefaultInstance();
      fightConfirmGameOverResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightConfirmGameOverResponse.getDefaultInstance();
      fightGetRoomDataResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightGetRoomDataResponse.getDefaultInstance();
      settingsResponse_ = com.randioo.compare_collections_server.protocol.Settings.SettingsResponse.getDefaultInstance();
      settingsShowResponse_ = com.randioo.compare_collections_server.protocol.Settings.SettingsShowResponse.getDefaultInstance();
      raceJoinRaceResponse_ = com.randioo.compare_collections_server.protocol.Race.RaceJoinRaceResponse.getDefaultInstance();
      sCRaceJoinRace_ = com.randioo.compare_collections_server.protocol.Race.SCRaceJoinRace.getDefaultInstance();
      raceShowQueueResponse_ = com.randioo.compare_collections_server.protocol.Race.RaceShowQueueResponse.getDefaultInstance();
      sCRaceQueueChange_ = com.randioo.compare_collections_server.protocol.Race.SCRaceQueueChange.getDefaultInstance();
      matchCheckRoomResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchCheckRoomResponse.getDefaultInstance();
      sCFightNoticeBet_ = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBet.getDefaultInstance();
      fightBetResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightBetResponse.getDefaultInstance();
      sCFightBetScore_ = com.randioo.compare_collections_server.protocol.Fight.SCFightBetScore.getDefaultInstance();
      sCFightDispatch_ = com.randioo.compare_collections_server.protocol.Fight.SCFightDispatch.getDefaultInstance();
      sCFightAddCard_ = com.randioo.compare_collections_server.protocol.Fight.SCFightAddCard.getDefaultInstance();
      sCFightChooseAddCard_ = com.randioo.compare_collections_server.protocol.Fight.SCFightChooseAddCard.getDefaultInstance();
      fightChooseAddCardResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightChooseAddCardResponse.getDefaultInstance();
      sCFightCardType_ = com.randioo.compare_collections_server.protocol.Fight.SCFightCardType.getDefaultInstance();
      gmEnvVarsResponse_ = com.randioo.compare_collections_server.protocol.Gm.GmEnvVarsResponse.getDefaultInstance();
      gmGameInfoResponse_ = com.randioo.compare_collections_server.protocol.Gm.GmGameInfoResponse.getDefaultInstance();
      gmDispatchCardResponse_ = com.randioo.compare_collections_server.protocol.Gm.GmDispatchCardResponse.getDefaultInstance();
      gmRoundResponse_ = com.randioo.compare_collections_server.protocol.Gm.GmRoundResponse.getDefaultInstance();
      sCFightWatchCards_ = com.randioo.compare_collections_server.protocol.Fight.SCFightWatchCards.getDefaultInstance();
      fightLookPaiResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightLookPaiResponse.getDefaultInstance();
      fightGenResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightGenResponse.getDefaultInstance();
      sCFightAutoBet_ = com.randioo.compare_collections_server.protocol.Fight.SCFightAutoBet.getDefaultInstance();
      sCFightBigger_ = com.randioo.compare_collections_server.protocol.Fight.SCFightBigger.getDefaultInstance();
      fightBiggerResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightBiggerResponse.getDefaultInstance();
      fightGiveUpResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightGiveUpResponse.getDefaultInstance();
      fightTwoResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightTwoResponse.getDefaultInstance();
      sCFightTwo_ = com.randioo.compare_collections_server.protocol.Fight.SCFightTwo.getDefaultInstance();
      sCFightGiveUp_ = com.randioo.compare_collections_server.protocol.Fight.SCFightGiveUp.getDefaultInstance();
      sCFightGen_ = com.randioo.compare_collections_server.protocol.Fight.SCFightGen.getDefaultInstance();
      sCFightButtonDisappear_ = com.randioo.compare_collections_server.protocol.Fight.SCFightButtonDisappear.getDefaultInstance();
      sCFightMingPai_ = com.randioo.compare_collections_server.protocol.Fight.SCFightMingPai.getDefaultInstance();
      sCFightAllSeat_ = com.randioo.compare_collections_server.protocol.Fight.SCFightAllSeat.getDefaultInstance();
      sCFightBiggerButton_ = com.randioo.compare_collections_server.protocol.Fight.SCFightBiggerButton.getDefaultInstance();
      sCFightRoundCount_ = com.randioo.compare_collections_server.protocol.Fight.SCFightRoundCount.getDefaultInstance();
      sCMatchExitGame_ = com.randioo.compare_collections_server.protocol.Match.SCMatchExitGame.getDefaultInstance();
      matchExitGameResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchExitGameResponse.getDefaultInstance();
      sCMatchJoinInGame_ = com.randioo.compare_collections_server.protocol.Match.SCMatchJoinInGame.getDefaultInstance();
      matchJoinInGameResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchJoinInGameResponse.getDefaultInstance();
      sCFightBetAll_ = com.randioo.compare_collections_server.protocol.Fight.SCFightBetAll.getDefaultInstance();
      fightBetAllResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightBetAllResponse.getDefaultInstance();
      fightGameStartResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightGameStartResponse.getDefaultInstance();
      sCFightPlayTalk_ = com.randioo.compare_collections_server.protocol.Fight.SCFightPlayTalk.getDefaultInstance();
      sCFightNoticeCallType_ = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeCallType.getDefaultInstance();
      fightCutCardsResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightCutCardsResponse.getDefaultInstance();
      sCFightCutCards_ = com.randioo.compare_collections_server.protocol.Fight.SCFightCutCards.getDefaultInstance();
      sCFightOpenCardsResult_ = com.randioo.compare_collections_server.protocol.Fight.SCFightOpenCardsResult.getDefaultInstance();
      sCFightRoundOverScore_ = com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOverScore.getDefaultInstance();
      sCFightNoticeBattle_ = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBattle.getDefaultInstance();
      fightReconnectDataResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightReconnectDataResponse.getDefaultInstance();
      sCFightMaxBet_ = com.randioo.compare_collections_server.protocol.Fight.SCFightMaxBet.getDefaultInstance();
      matchResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchResponse.getDefaultInstance();
      matchCancelResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchCancelResponse.getDefaultInstance();
      sCFightGameRoleData_ = com.randioo.compare_collections_server.protocol.Fight.SCFightGameRoleData.getDefaultInstance();
      sCMatchResult_ = com.randioo.compare_collections_server.protocol.Match.SCMatchResult.getDefaultInstance();
      sCMatchKickGame_ = com.randioo.compare_collections_server.protocol.Match.SCMatchKickGame.getDefaultInstance();
      sCFightBattleOutCards_ = com.randioo.compare_collections_server.protocol.Fight.SCFightBattleOutCards.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHeartResponse()) {
        output.writeMessage(1, getHeartResponse());
      }
      if (hasSCHeart()) {
        output.writeMessage(2, getSCHeart());
      }
      if (hasLoginGetRoleDataResponse()) {
        output.writeMessage(3, getLoginGetRoleDataResponse());
      }
      if (hasSCLoginOtherSide()) {
        output.writeMessage(4, getSCLoginOtherSide());
      }
      if (hasRoleRenameResponse()) {
        output.writeMessage(5, getRoleRenameResponse());
      }
      if (hasRoleGetRoleDataResponse()) {
        output.writeMessage(6, getRoleGetRoleDataResponse());
      }
      if (hasSCRoleRandiooCoinChange()) {
        output.writeMessage(7, getSCRoleRandiooCoinChange());
      }
      if (hasMatchCreateGameResponse()) {
        output.writeMessage(8, getMatchCreateGameResponse());
      }
      if (hasMatchJoinGameResponse()) {
        output.writeMessage(9, getMatchJoinGameResponse());
      }
      if (hasSCMatchJoinGame()) {
        output.writeMessage(10, getSCMatchJoinGame());
      }
      if (hasSCMatchMineInfo()) {
        output.writeMessage(11, getSCMatchMineInfo());
      }
      if (hasSCMatchCreateGame()) {
        output.writeMessage(12, getSCMatchCreateGame());
      }
      if (hasMatchPreJoinResponse()) {
        output.writeMessage(13, getMatchPreJoinResponse());
      }
      if (hasSCFightNoticeReady()) {
        output.writeMessage(14, getSCFightNoticeReady());
      }
      if (hasFightReadyResponse()) {
        output.writeMessage(15, getFightReadyResponse());
      }
      if (hasSCFightReady()) {
        output.writeMessage(16, getSCFightReady());
      }
      if (hasSCFightStart()) {
        output.writeMessage(17, getSCFightStart());
      }
      if (hasFightExitGameResponse()) {
        output.writeMessage(18, getFightExitGameResponse());
      }
      if (hasSCFightExitGame()) {
        output.writeMessage(19, getSCFightExitGame());
      }
      if (hasSCFightClearRoomId()) {
        output.writeMessage(20, getSCFightClearRoomId());
      }
      if (hasSCFightLoadResource()) {
        output.writeMessage(21, getSCFightLoadResource());
      }
      if (hasSCFightNoticeSendCard()) {
        output.writeMessage(22, getSCFightNoticeSendCard());
      }
      if (hasFightSendCardResponse()) {
        output.writeMessage(23, getFightSendCardResponse());
      }
      if (hasFightApplyExitGameResponse()) {
        output.writeMessage(24, getFightApplyExitGameResponse());
      }
      if (hasSCFightApplyExitGame()) {
        output.writeMessage(25, getSCFightApplyExitGame());
      }
      if (hasFightAgreeExitGameResponse()) {
        output.writeMessage(26, getFightAgreeExitGameResponse());
      }
      if (hasSCFightNoticeAgreeExit()) {
        output.writeMessage(27, getSCFightNoticeAgreeExit());
      }
      if (hasSCFightApplyExitResult()) {
        output.writeMessage(28, getSCFightApplyExitResult());
      }
      if (hasSCFightSendCard()) {
        output.writeMessage(29, getSCFightSendCard());
      }
      if (hasSCFightRoundOver()) {
        output.writeMessage(30, getSCFightRoundOver());
      }
      if (hasSCFightGameOver()) {
        output.writeMessage(31, getSCFightGameOver());
      }
      if (hasFightGetlastRoundResponse()) {
        output.writeMessage(32, getFightGetlastRoundResponse());
      }
      if (hasSCFightTouchCard()) {
        output.writeMessage(33, getSCFightTouchCard());
      }
      if (hasFightGuoResponse()) {
        output.writeMessage(34, getFightGuoResponse());
      }
      if (hasSCFightGuo()) {
        output.writeMessage(35, getSCFightGuo());
      }
      if (hasSCFightCountdown()) {
        output.writeMessage(36, getSCFightCountdown());
      }
      if (hasSCFightPointSeat()) {
        output.writeMessage(37, getSCFightPointSeat());
      }
      if (hasSCFightDisconnect()) {
        output.writeMessage(38, getSCFightDisconnect());
      }
      if (hasSCFightPublicScore()) {
        output.writeMessage(39, getSCFightPublicScore());
      }
      if (hasSCFightScore()) {
        output.writeMessage(40, getSCFightScore());
      }
      if (hasFightQueryGameConfigResponse()) {
        output.writeMessage(41, getFightQueryGameConfigResponse());
      }
      if (hasFightClientDispatchResponse()) {
        output.writeMessage(42, getFightClientDispatchResponse());
      }
      if (hasFightClientTouchCardResponse()) {
        output.writeMessage(43, getFightClientTouchCardResponse());
      }
      if (hasSCFightRoomDismiss()) {
        output.writeMessage(44, getSCFightRoomDismiss());
      }
      if (hasFightConfirmGameOverResponse()) {
        output.writeMessage(45, getFightConfirmGameOverResponse());
      }
      if (hasFightGetRoomDataResponse()) {
        output.writeMessage(46, getFightGetRoomDataResponse());
      }
      if (hasSettingsResponse()) {
        output.writeMessage(47, getSettingsResponse());
      }
      if (hasSettingsShowResponse()) {
        output.writeMessage(48, getSettingsShowResponse());
      }
      if (hasRaceJoinRaceResponse()) {
        output.writeMessage(49, getRaceJoinRaceResponse());
      }
      if (hasSCRaceJoinRace()) {
        output.writeMessage(50, getSCRaceJoinRace());
      }
      if (hasRaceShowQueueResponse()) {
        output.writeMessage(51, getRaceShowQueueResponse());
      }
      if (hasSCRaceQueueChange()) {
        output.writeMessage(52, getSCRaceQueueChange());
      }
      if (hasMatchCheckRoomResponse()) {
        output.writeMessage(53, getMatchCheckRoomResponse());
      }
      if (hasSCFightNoticeBet()) {
        output.writeMessage(54, getSCFightNoticeBet());
      }
      if (hasFightBetResponse()) {
        output.writeMessage(55, getFightBetResponse());
      }
      if (hasSCFightBetScore()) {
        output.writeMessage(56, getSCFightBetScore());
      }
      if (hasSCFightDispatch()) {
        output.writeMessage(57, getSCFightDispatch());
      }
      if (hasSCFightAddCard()) {
        output.writeMessage(58, getSCFightAddCard());
      }
      if (hasSCFightChooseAddCard()) {
        output.writeMessage(59, getSCFightChooseAddCard());
      }
      if (hasFightChooseAddCardResponse()) {
        output.writeMessage(60, getFightChooseAddCardResponse());
      }
      if (hasSCFightCardType()) {
        output.writeMessage(61, getSCFightCardType());
      }
      if (hasGmEnvVarsResponse()) {
        output.writeMessage(62, getGmEnvVarsResponse());
      }
      if (hasGmGameInfoResponse()) {
        output.writeMessage(63, getGmGameInfoResponse());
      }
      if (hasGmDispatchCardResponse()) {
        output.writeMessage(64, getGmDispatchCardResponse());
      }
      if (hasGmRoundResponse()) {
        output.writeMessage(65, getGmRoundResponse());
      }
      if (hasSCFightWatchCards()) {
        output.writeMessage(66, getSCFightWatchCards());
      }
      if (hasFightLookPaiResponse()) {
        output.writeMessage(67, getFightLookPaiResponse());
      }
      if (hasFightGenResponse()) {
        output.writeMessage(68, getFightGenResponse());
      }
      if (hasSCFightAutoBet()) {
        output.writeMessage(69, getSCFightAutoBet());
      }
      if (hasSCFightBigger()) {
        output.writeMessage(70, getSCFightBigger());
      }
      if (hasFightBiggerResponse()) {
        output.writeMessage(71, getFightBiggerResponse());
      }
      if (hasFightGiveUpResponse()) {
        output.writeMessage(72, getFightGiveUpResponse());
      }
      if (hasFightTwoResponse()) {
        output.writeMessage(73, getFightTwoResponse());
      }
      if (hasSCFightTwo()) {
        output.writeMessage(74, getSCFightTwo());
      }
      if (hasSCFightGiveUp()) {
        output.writeMessage(75, getSCFightGiveUp());
      }
      if (hasSCFightGen()) {
        output.writeMessage(76, getSCFightGen());
      }
      if (hasSCFightButtonDisappear()) {
        output.writeMessage(77, getSCFightButtonDisappear());
      }
      if (hasSCFightMingPai()) {
        output.writeMessage(78, getSCFightMingPai());
      }
      if (hasSCFightAllSeat()) {
        output.writeMessage(79, getSCFightAllSeat());
      }
      if (hasSCFightBiggerButton()) {
        output.writeMessage(80, getSCFightBiggerButton());
      }
      if (hasSCFightRoundCount()) {
        output.writeMessage(81, getSCFightRoundCount());
      }
      if (hasSCMatchExitGame()) {
        output.writeMessage(82, getSCMatchExitGame());
      }
      if (hasMatchExitGameResponse()) {
        output.writeMessage(83, getMatchExitGameResponse());
      }
      if (hasSCMatchJoinInGame()) {
        output.writeMessage(84, getSCMatchJoinInGame());
      }
      if (hasMatchJoinInGameResponse()) {
        output.writeMessage(85, getMatchJoinInGameResponse());
      }
      if (hasSCFightBetAll()) {
        output.writeMessage(86, getSCFightBetAll());
      }
      if (hasFightBetAllResponse()) {
        output.writeMessage(87, getFightBetAllResponse());
      }
      if (hasFightGameStartResponse()) {
        output.writeMessage(88, getFightGameStartResponse());
      }
      if (hasSCFightPlayTalk()) {
        output.writeMessage(89, getSCFightPlayTalk());
      }
      if (hasSCFightNoticeCallType()) {
        output.writeMessage(90, getSCFightNoticeCallType());
      }
      if (hasFightCutCardsResponse()) {
        output.writeMessage(91, getFightCutCardsResponse());
      }
      if (hasSCFightCutCards()) {
        output.writeMessage(92, getSCFightCutCards());
      }
      if (hasSCFightOpenCardsResult()) {
        output.writeMessage(93, getSCFightOpenCardsResult());
      }
      if (hasSCFightRoundOverScore()) {
        output.writeMessage(94, getSCFightRoundOverScore());
      }
      if (hasSCFightNoticeBattle()) {
        output.writeMessage(95, getSCFightNoticeBattle());
      }
      if (hasFightReconnectDataResponse()) {
        output.writeMessage(96, getFightReconnectDataResponse());
      }
      if (hasSCFightMaxBet()) {
        output.writeMessage(97, getSCFightMaxBet());
      }
      if (hasMatchResponse()) {
        output.writeMessage(98, getMatchResponse());
      }
      if (hasMatchCancelResponse()) {
        output.writeMessage(99, getMatchCancelResponse());
      }
      if (hasSCFightGameRoleData()) {
        output.writeMessage(100, getSCFightGameRoleData());
      }
      if (hasSCMatchResult()) {
        output.writeMessage(101, getSCMatchResult());
      }
      if (hasSCMatchKickGame()) {
        output.writeMessage(102, getSCMatchKickGame());
      }
      if (hasSCFightBattleOutCards()) {
        output.writeMessage(103, getSCFightBattleOutCards());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHeartResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeartResponse());
      }
      if (hasSCHeart()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSCHeart());
      }
      if (hasLoginGetRoleDataResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLoginGetRoleDataResponse());
      }
      if (hasSCLoginOtherSide()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSCLoginOtherSide());
      }
      if (hasRoleRenameResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getRoleRenameResponse());
      }
      if (hasRoleGetRoleDataResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getRoleGetRoleDataResponse());
      }
      if (hasSCRoleRandiooCoinChange()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getSCRoleRandiooCoinChange());
      }
      if (hasMatchCreateGameResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getMatchCreateGameResponse());
      }
      if (hasMatchJoinGameResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getMatchJoinGameResponse());
      }
      if (hasSCMatchJoinGame()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getSCMatchJoinGame());
      }
      if (hasSCMatchMineInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getSCMatchMineInfo());
      }
      if (hasSCMatchCreateGame()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getSCMatchCreateGame());
      }
      if (hasMatchPreJoinResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getMatchPreJoinResponse());
      }
      if (hasSCFightNoticeReady()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getSCFightNoticeReady());
      }
      if (hasFightReadyResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getFightReadyResponse());
      }
      if (hasSCFightReady()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getSCFightReady());
      }
      if (hasSCFightStart()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getSCFightStart());
      }
      if (hasFightExitGameResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getFightExitGameResponse());
      }
      if (hasSCFightExitGame()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getSCFightExitGame());
      }
      if (hasSCFightClearRoomId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getSCFightClearRoomId());
      }
      if (hasSCFightLoadResource()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getSCFightLoadResource());
      }
      if (hasSCFightNoticeSendCard()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getSCFightNoticeSendCard());
      }
      if (hasFightSendCardResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getFightSendCardResponse());
      }
      if (hasFightApplyExitGameResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, getFightApplyExitGameResponse());
      }
      if (hasSCFightApplyExitGame()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, getSCFightApplyExitGame());
      }
      if (hasFightAgreeExitGameResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, getFightAgreeExitGameResponse());
      }
      if (hasSCFightNoticeAgreeExit()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, getSCFightNoticeAgreeExit());
      }
      if (hasSCFightApplyExitResult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, getSCFightApplyExitResult());
      }
      if (hasSCFightSendCard()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, getSCFightSendCard());
      }
      if (hasSCFightRoundOver()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, getSCFightRoundOver());
      }
      if (hasSCFightGameOver()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, getSCFightGameOver());
      }
      if (hasFightGetlastRoundResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, getFightGetlastRoundResponse());
      }
      if (hasSCFightTouchCard()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, getSCFightTouchCard());
      }
      if (hasFightGuoResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(34, getFightGuoResponse());
      }
      if (hasSCFightGuo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(35, getSCFightGuo());
      }
      if (hasSCFightCountdown()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(36, getSCFightCountdown());
      }
      if (hasSCFightPointSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(37, getSCFightPointSeat());
      }
      if (hasSCFightDisconnect()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(38, getSCFightDisconnect());
      }
      if (hasSCFightPublicScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(39, getSCFightPublicScore());
      }
      if (hasSCFightScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(40, getSCFightScore());
      }
      if (hasFightQueryGameConfigResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(41, getFightQueryGameConfigResponse());
      }
      if (hasFightClientDispatchResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(42, getFightClientDispatchResponse());
      }
      if (hasFightClientTouchCardResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(43, getFightClientTouchCardResponse());
      }
      if (hasSCFightRoomDismiss()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(44, getSCFightRoomDismiss());
      }
      if (hasFightConfirmGameOverResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(45, getFightConfirmGameOverResponse());
      }
      if (hasFightGetRoomDataResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(46, getFightGetRoomDataResponse());
      }
      if (hasSettingsResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(47, getSettingsResponse());
      }
      if (hasSettingsShowResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(48, getSettingsShowResponse());
      }
      if (hasRaceJoinRaceResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(49, getRaceJoinRaceResponse());
      }
      if (hasSCRaceJoinRace()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(50, getSCRaceJoinRace());
      }
      if (hasRaceShowQueueResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(51, getRaceShowQueueResponse());
      }
      if (hasSCRaceQueueChange()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(52, getSCRaceQueueChange());
      }
      if (hasMatchCheckRoomResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(53, getMatchCheckRoomResponse());
      }
      if (hasSCFightNoticeBet()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(54, getSCFightNoticeBet());
      }
      if (hasFightBetResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(55, getFightBetResponse());
      }
      if (hasSCFightBetScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(56, getSCFightBetScore());
      }
      if (hasSCFightDispatch()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(57, getSCFightDispatch());
      }
      if (hasSCFightAddCard()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(58, getSCFightAddCard());
      }
      if (hasSCFightChooseAddCard()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(59, getSCFightChooseAddCard());
      }
      if (hasFightChooseAddCardResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(60, getFightChooseAddCardResponse());
      }
      if (hasSCFightCardType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(61, getSCFightCardType());
      }
      if (hasGmEnvVarsResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(62, getGmEnvVarsResponse());
      }
      if (hasGmGameInfoResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(63, getGmGameInfoResponse());
      }
      if (hasGmDispatchCardResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(64, getGmDispatchCardResponse());
      }
      if (hasGmRoundResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(65, getGmRoundResponse());
      }
      if (hasSCFightWatchCards()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(66, getSCFightWatchCards());
      }
      if (hasFightLookPaiResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(67, getFightLookPaiResponse());
      }
      if (hasFightGenResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(68, getFightGenResponse());
      }
      if (hasSCFightAutoBet()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(69, getSCFightAutoBet());
      }
      if (hasSCFightBigger()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(70, getSCFightBigger());
      }
      if (hasFightBiggerResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(71, getFightBiggerResponse());
      }
      if (hasFightGiveUpResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(72, getFightGiveUpResponse());
      }
      if (hasFightTwoResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(73, getFightTwoResponse());
      }
      if (hasSCFightTwo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(74, getSCFightTwo());
      }
      if (hasSCFightGiveUp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(75, getSCFightGiveUp());
      }
      if (hasSCFightGen()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(76, getSCFightGen());
      }
      if (hasSCFightButtonDisappear()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(77, getSCFightButtonDisappear());
      }
      if (hasSCFightMingPai()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(78, getSCFightMingPai());
      }
      if (hasSCFightAllSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(79, getSCFightAllSeat());
      }
      if (hasSCFightBiggerButton()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(80, getSCFightBiggerButton());
      }
      if (hasSCFightRoundCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(81, getSCFightRoundCount());
      }
      if (hasSCMatchExitGame()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(82, getSCMatchExitGame());
      }
      if (hasMatchExitGameResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(83, getMatchExitGameResponse());
      }
      if (hasSCMatchJoinInGame()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(84, getSCMatchJoinInGame());
      }
      if (hasMatchJoinInGameResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(85, getMatchJoinInGameResponse());
      }
      if (hasSCFightBetAll()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(86, getSCFightBetAll());
      }
      if (hasFightBetAllResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(87, getFightBetAllResponse());
      }
      if (hasFightGameStartResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(88, getFightGameStartResponse());
      }
      if (hasSCFightPlayTalk()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(89, getSCFightPlayTalk());
      }
      if (hasSCFightNoticeCallType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(90, getSCFightNoticeCallType());
      }
      if (hasFightCutCardsResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(91, getFightCutCardsResponse());
      }
      if (hasSCFightCutCards()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(92, getSCFightCutCards());
      }
      if (hasSCFightOpenCardsResult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(93, getSCFightOpenCardsResult());
      }
      if (hasSCFightRoundOverScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(94, getSCFightRoundOverScore());
      }
      if (hasSCFightNoticeBattle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(95, getSCFightNoticeBattle());
      }
      if (hasFightReconnectDataResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(96, getFightReconnectDataResponse());
      }
      if (hasSCFightMaxBet()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(97, getSCFightMaxBet());
      }
      if (hasMatchResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(98, getMatchResponse());
      }
      if (hasMatchCancelResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(99, getMatchCancelResponse());
      }
      if (hasSCFightGameRoleData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, getSCFightGameRoleData());
      }
      if (hasSCMatchResult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, getSCMatchResult());
      }
      if (hasSCMatchKickGame()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(102, getSCMatchKickGame());
      }
      if (hasSCFightBattleOutCards()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(103, getSCFightBattleOutCards());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.ServerMessage.SC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.ServerMessage.SC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.ServerMessage.SC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.ServerMessage.SC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.ServerMessage.SC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.ServerMessage.SC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.ServerMessage.SC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.ServerMessage.SC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.ServerMessage.SC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.ServerMessage.SC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.ServerMessage.SC prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.ServerMessage.SC result;
      
      // Construct using com.randioo.compare_collections_server.protocol.ServerMessage.SC.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.ServerMessage.SC();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.ServerMessage.SC internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.ServerMessage.SC();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.ServerMessage.SC.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.ServerMessage.SC getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.ServerMessage.SC.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.ServerMessage.SC build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.ServerMessage.SC buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.ServerMessage.SC buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.compare_collections_server.protocol.ServerMessage.SC returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.ServerMessage.SC) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.ServerMessage.SC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.ServerMessage.SC other) {
        if (other == com.randioo.compare_collections_server.protocol.ServerMessage.SC.getDefaultInstance()) return this;
        if (other.hasHeartResponse()) {
          mergeHeartResponse(other.getHeartResponse());
        }
        if (other.hasSCHeart()) {
          mergeSCHeart(other.getSCHeart());
        }
        if (other.hasLoginGetRoleDataResponse()) {
          mergeLoginGetRoleDataResponse(other.getLoginGetRoleDataResponse());
        }
        if (other.hasSCLoginOtherSide()) {
          mergeSCLoginOtherSide(other.getSCLoginOtherSide());
        }
        if (other.hasRoleRenameResponse()) {
          mergeRoleRenameResponse(other.getRoleRenameResponse());
        }
        if (other.hasRoleGetRoleDataResponse()) {
          mergeRoleGetRoleDataResponse(other.getRoleGetRoleDataResponse());
        }
        if (other.hasSCRoleRandiooCoinChange()) {
          mergeSCRoleRandiooCoinChange(other.getSCRoleRandiooCoinChange());
        }
        if (other.hasMatchCreateGameResponse()) {
          mergeMatchCreateGameResponse(other.getMatchCreateGameResponse());
        }
        if (other.hasMatchJoinGameResponse()) {
          mergeMatchJoinGameResponse(other.getMatchJoinGameResponse());
        }
        if (other.hasSCMatchJoinGame()) {
          mergeSCMatchJoinGame(other.getSCMatchJoinGame());
        }
        if (other.hasSCMatchMineInfo()) {
          mergeSCMatchMineInfo(other.getSCMatchMineInfo());
        }
        if (other.hasSCMatchCreateGame()) {
          mergeSCMatchCreateGame(other.getSCMatchCreateGame());
        }
        if (other.hasMatchPreJoinResponse()) {
          mergeMatchPreJoinResponse(other.getMatchPreJoinResponse());
        }
        if (other.hasSCFightNoticeReady()) {
          mergeSCFightNoticeReady(other.getSCFightNoticeReady());
        }
        if (other.hasFightReadyResponse()) {
          mergeFightReadyResponse(other.getFightReadyResponse());
        }
        if (other.hasSCFightReady()) {
          mergeSCFightReady(other.getSCFightReady());
        }
        if (other.hasSCFightStart()) {
          mergeSCFightStart(other.getSCFightStart());
        }
        if (other.hasFightExitGameResponse()) {
          mergeFightExitGameResponse(other.getFightExitGameResponse());
        }
        if (other.hasSCFightExitGame()) {
          mergeSCFightExitGame(other.getSCFightExitGame());
        }
        if (other.hasSCFightClearRoomId()) {
          mergeSCFightClearRoomId(other.getSCFightClearRoomId());
        }
        if (other.hasSCFightLoadResource()) {
          mergeSCFightLoadResource(other.getSCFightLoadResource());
        }
        if (other.hasSCFightNoticeSendCard()) {
          mergeSCFightNoticeSendCard(other.getSCFightNoticeSendCard());
        }
        if (other.hasFightSendCardResponse()) {
          mergeFightSendCardResponse(other.getFightSendCardResponse());
        }
        if (other.hasFightApplyExitGameResponse()) {
          mergeFightApplyExitGameResponse(other.getFightApplyExitGameResponse());
        }
        if (other.hasSCFightApplyExitGame()) {
          mergeSCFightApplyExitGame(other.getSCFightApplyExitGame());
        }
        if (other.hasFightAgreeExitGameResponse()) {
          mergeFightAgreeExitGameResponse(other.getFightAgreeExitGameResponse());
        }
        if (other.hasSCFightNoticeAgreeExit()) {
          mergeSCFightNoticeAgreeExit(other.getSCFightNoticeAgreeExit());
        }
        if (other.hasSCFightApplyExitResult()) {
          mergeSCFightApplyExitResult(other.getSCFightApplyExitResult());
        }
        if (other.hasSCFightSendCard()) {
          mergeSCFightSendCard(other.getSCFightSendCard());
        }
        if (other.hasSCFightRoundOver()) {
          mergeSCFightRoundOver(other.getSCFightRoundOver());
        }
        if (other.hasSCFightGameOver()) {
          mergeSCFightGameOver(other.getSCFightGameOver());
        }
        if (other.hasFightGetlastRoundResponse()) {
          mergeFightGetlastRoundResponse(other.getFightGetlastRoundResponse());
        }
        if (other.hasSCFightTouchCard()) {
          mergeSCFightTouchCard(other.getSCFightTouchCard());
        }
        if (other.hasFightGuoResponse()) {
          mergeFightGuoResponse(other.getFightGuoResponse());
        }
        if (other.hasSCFightGuo()) {
          mergeSCFightGuo(other.getSCFightGuo());
        }
        if (other.hasSCFightCountdown()) {
          mergeSCFightCountdown(other.getSCFightCountdown());
        }
        if (other.hasSCFightPointSeat()) {
          mergeSCFightPointSeat(other.getSCFightPointSeat());
        }
        if (other.hasSCFightDisconnect()) {
          mergeSCFightDisconnect(other.getSCFightDisconnect());
        }
        if (other.hasSCFightPublicScore()) {
          mergeSCFightPublicScore(other.getSCFightPublicScore());
        }
        if (other.hasSCFightScore()) {
          mergeSCFightScore(other.getSCFightScore());
        }
        if (other.hasFightQueryGameConfigResponse()) {
          mergeFightQueryGameConfigResponse(other.getFightQueryGameConfigResponse());
        }
        if (other.hasFightClientDispatchResponse()) {
          mergeFightClientDispatchResponse(other.getFightClientDispatchResponse());
        }
        if (other.hasFightClientTouchCardResponse()) {
          mergeFightClientTouchCardResponse(other.getFightClientTouchCardResponse());
        }
        if (other.hasSCFightRoomDismiss()) {
          mergeSCFightRoomDismiss(other.getSCFightRoomDismiss());
        }
        if (other.hasFightConfirmGameOverResponse()) {
          mergeFightConfirmGameOverResponse(other.getFightConfirmGameOverResponse());
        }
        if (other.hasFightGetRoomDataResponse()) {
          mergeFightGetRoomDataResponse(other.getFightGetRoomDataResponse());
        }
        if (other.hasSettingsResponse()) {
          mergeSettingsResponse(other.getSettingsResponse());
        }
        if (other.hasSettingsShowResponse()) {
          mergeSettingsShowResponse(other.getSettingsShowResponse());
        }
        if (other.hasRaceJoinRaceResponse()) {
          mergeRaceJoinRaceResponse(other.getRaceJoinRaceResponse());
        }
        if (other.hasSCRaceJoinRace()) {
          mergeSCRaceJoinRace(other.getSCRaceJoinRace());
        }
        if (other.hasRaceShowQueueResponse()) {
          mergeRaceShowQueueResponse(other.getRaceShowQueueResponse());
        }
        if (other.hasSCRaceQueueChange()) {
          mergeSCRaceQueueChange(other.getSCRaceQueueChange());
        }
        if (other.hasMatchCheckRoomResponse()) {
          mergeMatchCheckRoomResponse(other.getMatchCheckRoomResponse());
        }
        if (other.hasSCFightNoticeBet()) {
          mergeSCFightNoticeBet(other.getSCFightNoticeBet());
        }
        if (other.hasFightBetResponse()) {
          mergeFightBetResponse(other.getFightBetResponse());
        }
        if (other.hasSCFightBetScore()) {
          mergeSCFightBetScore(other.getSCFightBetScore());
        }
        if (other.hasSCFightDispatch()) {
          mergeSCFightDispatch(other.getSCFightDispatch());
        }
        if (other.hasSCFightAddCard()) {
          mergeSCFightAddCard(other.getSCFightAddCard());
        }
        if (other.hasSCFightChooseAddCard()) {
          mergeSCFightChooseAddCard(other.getSCFightChooseAddCard());
        }
        if (other.hasFightChooseAddCardResponse()) {
          mergeFightChooseAddCardResponse(other.getFightChooseAddCardResponse());
        }
        if (other.hasSCFightCardType()) {
          mergeSCFightCardType(other.getSCFightCardType());
        }
        if (other.hasGmEnvVarsResponse()) {
          mergeGmEnvVarsResponse(other.getGmEnvVarsResponse());
        }
        if (other.hasGmGameInfoResponse()) {
          mergeGmGameInfoResponse(other.getGmGameInfoResponse());
        }
        if (other.hasGmDispatchCardResponse()) {
          mergeGmDispatchCardResponse(other.getGmDispatchCardResponse());
        }
        if (other.hasGmRoundResponse()) {
          mergeGmRoundResponse(other.getGmRoundResponse());
        }
        if (other.hasSCFightWatchCards()) {
          mergeSCFightWatchCards(other.getSCFightWatchCards());
        }
        if (other.hasFightLookPaiResponse()) {
          mergeFightLookPaiResponse(other.getFightLookPaiResponse());
        }
        if (other.hasFightGenResponse()) {
          mergeFightGenResponse(other.getFightGenResponse());
        }
        if (other.hasSCFightAutoBet()) {
          mergeSCFightAutoBet(other.getSCFightAutoBet());
        }
        if (other.hasSCFightBigger()) {
          mergeSCFightBigger(other.getSCFightBigger());
        }
        if (other.hasFightBiggerResponse()) {
          mergeFightBiggerResponse(other.getFightBiggerResponse());
        }
        if (other.hasFightGiveUpResponse()) {
          mergeFightGiveUpResponse(other.getFightGiveUpResponse());
        }
        if (other.hasFightTwoResponse()) {
          mergeFightTwoResponse(other.getFightTwoResponse());
        }
        if (other.hasSCFightTwo()) {
          mergeSCFightTwo(other.getSCFightTwo());
        }
        if (other.hasSCFightGiveUp()) {
          mergeSCFightGiveUp(other.getSCFightGiveUp());
        }
        if (other.hasSCFightGen()) {
          mergeSCFightGen(other.getSCFightGen());
        }
        if (other.hasSCFightButtonDisappear()) {
          mergeSCFightButtonDisappear(other.getSCFightButtonDisappear());
        }
        if (other.hasSCFightMingPai()) {
          mergeSCFightMingPai(other.getSCFightMingPai());
        }
        if (other.hasSCFightAllSeat()) {
          mergeSCFightAllSeat(other.getSCFightAllSeat());
        }
        if (other.hasSCFightBiggerButton()) {
          mergeSCFightBiggerButton(other.getSCFightBiggerButton());
        }
        if (other.hasSCFightRoundCount()) {
          mergeSCFightRoundCount(other.getSCFightRoundCount());
        }
        if (other.hasSCMatchExitGame()) {
          mergeSCMatchExitGame(other.getSCMatchExitGame());
        }
        if (other.hasMatchExitGameResponse()) {
          mergeMatchExitGameResponse(other.getMatchExitGameResponse());
        }
        if (other.hasSCMatchJoinInGame()) {
          mergeSCMatchJoinInGame(other.getSCMatchJoinInGame());
        }
        if (other.hasMatchJoinInGameResponse()) {
          mergeMatchJoinInGameResponse(other.getMatchJoinInGameResponse());
        }
        if (other.hasSCFightBetAll()) {
          mergeSCFightBetAll(other.getSCFightBetAll());
        }
        if (other.hasFightBetAllResponse()) {
          mergeFightBetAllResponse(other.getFightBetAllResponse());
        }
        if (other.hasFightGameStartResponse()) {
          mergeFightGameStartResponse(other.getFightGameStartResponse());
        }
        if (other.hasSCFightPlayTalk()) {
          mergeSCFightPlayTalk(other.getSCFightPlayTalk());
        }
        if (other.hasSCFightNoticeCallType()) {
          mergeSCFightNoticeCallType(other.getSCFightNoticeCallType());
        }
        if (other.hasFightCutCardsResponse()) {
          mergeFightCutCardsResponse(other.getFightCutCardsResponse());
        }
        if (other.hasSCFightCutCards()) {
          mergeSCFightCutCards(other.getSCFightCutCards());
        }
        if (other.hasSCFightOpenCardsResult()) {
          mergeSCFightOpenCardsResult(other.getSCFightOpenCardsResult());
        }
        if (other.hasSCFightRoundOverScore()) {
          mergeSCFightRoundOverScore(other.getSCFightRoundOverScore());
        }
        if (other.hasSCFightNoticeBattle()) {
          mergeSCFightNoticeBattle(other.getSCFightNoticeBattle());
        }
        if (other.hasFightReconnectDataResponse()) {
          mergeFightReconnectDataResponse(other.getFightReconnectDataResponse());
        }
        if (other.hasSCFightMaxBet()) {
          mergeSCFightMaxBet(other.getSCFightMaxBet());
        }
        if (other.hasMatchResponse()) {
          mergeMatchResponse(other.getMatchResponse());
        }
        if (other.hasMatchCancelResponse()) {
          mergeMatchCancelResponse(other.getMatchCancelResponse());
        }
        if (other.hasSCFightGameRoleData()) {
          mergeSCFightGameRoleData(other.getSCFightGameRoleData());
        }
        if (other.hasSCMatchResult()) {
          mergeSCMatchResult(other.getSCMatchResult());
        }
        if (other.hasSCMatchKickGame()) {
          mergeSCMatchKickGame(other.getSCMatchKickGame());
        }
        if (other.hasSCFightBattleOutCards()) {
          mergeSCFightBattleOutCards(other.getSCFightBattleOutCards());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.randioo.compare_collections_server.protocol.Heart.HeartResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Heart.HeartResponse.newBuilder();
              if (hasHeartResponse()) {
                subBuilder.mergeFrom(getHeartResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHeartResponse(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.randioo.compare_collections_server.protocol.Heart.SCHeart.Builder subBuilder = com.randioo.compare_collections_server.protocol.Heart.SCHeart.newBuilder();
              if (hasSCHeart()) {
                subBuilder.mergeFrom(getSCHeart());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCHeart(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.randioo.compare_collections_server.protocol.Login.LoginGetRoleDataResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Login.LoginGetRoleDataResponse.newBuilder();
              if (hasLoginGetRoleDataResponse()) {
                subBuilder.mergeFrom(getLoginGetRoleDataResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLoginGetRoleDataResponse(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.randioo.compare_collections_server.protocol.Login.SCLoginOtherSide.Builder subBuilder = com.randioo.compare_collections_server.protocol.Login.SCLoginOtherSide.newBuilder();
              if (hasSCLoginOtherSide()) {
                subBuilder.mergeFrom(getSCLoginOtherSide());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCLoginOtherSide(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.randioo.compare_collections_server.protocol.Role.RoleRenameResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Role.RoleRenameResponse.newBuilder();
              if (hasRoleRenameResponse()) {
                subBuilder.mergeFrom(getRoleRenameResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRoleRenameResponse(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.randioo.compare_collections_server.protocol.Role.RoleGetRoleDataResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Role.RoleGetRoleDataResponse.newBuilder();
              if (hasRoleGetRoleDataResponse()) {
                subBuilder.mergeFrom(getRoleGetRoleDataResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRoleGetRoleDataResponse(subBuilder.buildPartial());
              break;
            }
            case 58: {
              com.randioo.compare_collections_server.protocol.Role.SCRoleRandiooCoinChange.Builder subBuilder = com.randioo.compare_collections_server.protocol.Role.SCRoleRandiooCoinChange.newBuilder();
              if (hasSCRoleRandiooCoinChange()) {
                subBuilder.mergeFrom(getSCRoleRandiooCoinChange());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCRoleRandiooCoinChange(subBuilder.buildPartial());
              break;
            }
            case 66: {
              com.randioo.compare_collections_server.protocol.Match.MatchCreateGameResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.MatchCreateGameResponse.newBuilder();
              if (hasMatchCreateGameResponse()) {
                subBuilder.mergeFrom(getMatchCreateGameResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMatchCreateGameResponse(subBuilder.buildPartial());
              break;
            }
            case 74: {
              com.randioo.compare_collections_server.protocol.Match.MatchJoinGameResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.MatchJoinGameResponse.newBuilder();
              if (hasMatchJoinGameResponse()) {
                subBuilder.mergeFrom(getMatchJoinGameResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMatchJoinGameResponse(subBuilder.buildPartial());
              break;
            }
            case 82: {
              com.randioo.compare_collections_server.protocol.Match.SCMatchJoinGame.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.SCMatchJoinGame.newBuilder();
              if (hasSCMatchJoinGame()) {
                subBuilder.mergeFrom(getSCMatchJoinGame());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCMatchJoinGame(subBuilder.buildPartial());
              break;
            }
            case 90: {
              com.randioo.compare_collections_server.protocol.Match.SCMatchMineInfo.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.SCMatchMineInfo.newBuilder();
              if (hasSCMatchMineInfo()) {
                subBuilder.mergeFrom(getSCMatchMineInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCMatchMineInfo(subBuilder.buildPartial());
              break;
            }
            case 98: {
              com.randioo.compare_collections_server.protocol.Match.SCMatchCreateGame.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.SCMatchCreateGame.newBuilder();
              if (hasSCMatchCreateGame()) {
                subBuilder.mergeFrom(getSCMatchCreateGame());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCMatchCreateGame(subBuilder.buildPartial());
              break;
            }
            case 106: {
              com.randioo.compare_collections_server.protocol.Match.MatchPreJoinResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.MatchPreJoinResponse.newBuilder();
              if (hasMatchPreJoinResponse()) {
                subBuilder.mergeFrom(getMatchPreJoinResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMatchPreJoinResponse(subBuilder.buildPartial());
              break;
            }
            case 114: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeReady.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeReady.newBuilder();
              if (hasSCFightNoticeReady()) {
                subBuilder.mergeFrom(getSCFightNoticeReady());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightNoticeReady(subBuilder.buildPartial());
              break;
            }
            case 122: {
              com.randioo.compare_collections_server.protocol.Fight.FightReadyResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightReadyResponse.newBuilder();
              if (hasFightReadyResponse()) {
                subBuilder.mergeFrom(getFightReadyResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightReadyResponse(subBuilder.buildPartial());
              break;
            }
            case 130: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightReady.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightReady.newBuilder();
              if (hasSCFightReady()) {
                subBuilder.mergeFrom(getSCFightReady());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightReady(subBuilder.buildPartial());
              break;
            }
            case 138: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightStart.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightStart.newBuilder();
              if (hasSCFightStart()) {
                subBuilder.mergeFrom(getSCFightStart());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightStart(subBuilder.buildPartial());
              break;
            }
            case 146: {
              com.randioo.compare_collections_server.protocol.Fight.FightExitGameResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightExitGameResponse.newBuilder();
              if (hasFightExitGameResponse()) {
                subBuilder.mergeFrom(getFightExitGameResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightExitGameResponse(subBuilder.buildPartial());
              break;
            }
            case 154: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightExitGame.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightExitGame.newBuilder();
              if (hasSCFightExitGame()) {
                subBuilder.mergeFrom(getSCFightExitGame());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightExitGame(subBuilder.buildPartial());
              break;
            }
            case 162: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightClearRoomId.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightClearRoomId.newBuilder();
              if (hasSCFightClearRoomId()) {
                subBuilder.mergeFrom(getSCFightClearRoomId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightClearRoomId(subBuilder.buildPartial());
              break;
            }
            case 170: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightLoadResource.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightLoadResource.newBuilder();
              if (hasSCFightLoadResource()) {
                subBuilder.mergeFrom(getSCFightLoadResource());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightLoadResource(subBuilder.buildPartial());
              break;
            }
            case 178: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeSendCard.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeSendCard.newBuilder();
              if (hasSCFightNoticeSendCard()) {
                subBuilder.mergeFrom(getSCFightNoticeSendCard());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightNoticeSendCard(subBuilder.buildPartial());
              break;
            }
            case 186: {
              com.randioo.compare_collections_server.protocol.Fight.FightSendCardResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightSendCardResponse.newBuilder();
              if (hasFightSendCardResponse()) {
                subBuilder.mergeFrom(getFightSendCardResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightSendCardResponse(subBuilder.buildPartial());
              break;
            }
            case 194: {
              com.randioo.compare_collections_server.protocol.Fight.FightApplyExitGameResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightApplyExitGameResponse.newBuilder();
              if (hasFightApplyExitGameResponse()) {
                subBuilder.mergeFrom(getFightApplyExitGameResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightApplyExitGameResponse(subBuilder.buildPartial());
              break;
            }
            case 202: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitGame.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitGame.newBuilder();
              if (hasSCFightApplyExitGame()) {
                subBuilder.mergeFrom(getSCFightApplyExitGame());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightApplyExitGame(subBuilder.buildPartial());
              break;
            }
            case 210: {
              com.randioo.compare_collections_server.protocol.Fight.FightAgreeExitGameResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightAgreeExitGameResponse.newBuilder();
              if (hasFightAgreeExitGameResponse()) {
                subBuilder.mergeFrom(getFightAgreeExitGameResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightAgreeExitGameResponse(subBuilder.buildPartial());
              break;
            }
            case 218: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeAgreeExit.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeAgreeExit.newBuilder();
              if (hasSCFightNoticeAgreeExit()) {
                subBuilder.mergeFrom(getSCFightNoticeAgreeExit());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightNoticeAgreeExit(subBuilder.buildPartial());
              break;
            }
            case 226: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitResult.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitResult.newBuilder();
              if (hasSCFightApplyExitResult()) {
                subBuilder.mergeFrom(getSCFightApplyExitResult());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightApplyExitResult(subBuilder.buildPartial());
              break;
            }
            case 234: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightSendCard.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightSendCard.newBuilder();
              if (hasSCFightSendCard()) {
                subBuilder.mergeFrom(getSCFightSendCard());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightSendCard(subBuilder.buildPartial());
              break;
            }
            case 242: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOver.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOver.newBuilder();
              if (hasSCFightRoundOver()) {
                subBuilder.mergeFrom(getSCFightRoundOver());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightRoundOver(subBuilder.buildPartial());
              break;
            }
            case 250: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightGameOver.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightGameOver.newBuilder();
              if (hasSCFightGameOver()) {
                subBuilder.mergeFrom(getSCFightGameOver());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightGameOver(subBuilder.buildPartial());
              break;
            }
            case 258: {
              com.randioo.compare_collections_server.protocol.Fight.FightGetlastRoundResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightGetlastRoundResponse.newBuilder();
              if (hasFightGetlastRoundResponse()) {
                subBuilder.mergeFrom(getFightGetlastRoundResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightGetlastRoundResponse(subBuilder.buildPartial());
              break;
            }
            case 266: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightTouchCard.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightTouchCard.newBuilder();
              if (hasSCFightTouchCard()) {
                subBuilder.mergeFrom(getSCFightTouchCard());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightTouchCard(subBuilder.buildPartial());
              break;
            }
            case 274: {
              com.randioo.compare_collections_server.protocol.Fight.FightGuoResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightGuoResponse.newBuilder();
              if (hasFightGuoResponse()) {
                subBuilder.mergeFrom(getFightGuoResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightGuoResponse(subBuilder.buildPartial());
              break;
            }
            case 282: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightGuo.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightGuo.newBuilder();
              if (hasSCFightGuo()) {
                subBuilder.mergeFrom(getSCFightGuo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightGuo(subBuilder.buildPartial());
              break;
            }
            case 290: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightCountdown.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightCountdown.newBuilder();
              if (hasSCFightCountdown()) {
                subBuilder.mergeFrom(getSCFightCountdown());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightCountdown(subBuilder.buildPartial());
              break;
            }
            case 298: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightPointSeat.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightPointSeat.newBuilder();
              if (hasSCFightPointSeat()) {
                subBuilder.mergeFrom(getSCFightPointSeat());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightPointSeat(subBuilder.buildPartial());
              break;
            }
            case 306: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightDisconnect.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightDisconnect.newBuilder();
              if (hasSCFightDisconnect()) {
                subBuilder.mergeFrom(getSCFightDisconnect());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightDisconnect(subBuilder.buildPartial());
              break;
            }
            case 314: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightPublicScore.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightPublicScore.newBuilder();
              if (hasSCFightPublicScore()) {
                subBuilder.mergeFrom(getSCFightPublicScore());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightPublicScore(subBuilder.buildPartial());
              break;
            }
            case 322: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightScore.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightScore.newBuilder();
              if (hasSCFightScore()) {
                subBuilder.mergeFrom(getSCFightScore());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightScore(subBuilder.buildPartial());
              break;
            }
            case 330: {
              com.randioo.compare_collections_server.protocol.Fight.FightQueryGameConfigResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightQueryGameConfigResponse.newBuilder();
              if (hasFightQueryGameConfigResponse()) {
                subBuilder.mergeFrom(getFightQueryGameConfigResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightQueryGameConfigResponse(subBuilder.buildPartial());
              break;
            }
            case 338: {
              com.randioo.compare_collections_server.protocol.Fight.FightClientDispatchResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightClientDispatchResponse.newBuilder();
              if (hasFightClientDispatchResponse()) {
                subBuilder.mergeFrom(getFightClientDispatchResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightClientDispatchResponse(subBuilder.buildPartial());
              break;
            }
            case 346: {
              com.randioo.compare_collections_server.protocol.Fight.FightClientTouchCardResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightClientTouchCardResponse.newBuilder();
              if (hasFightClientTouchCardResponse()) {
                subBuilder.mergeFrom(getFightClientTouchCardResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightClientTouchCardResponse(subBuilder.buildPartial());
              break;
            }
            case 354: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightRoomDismiss.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightRoomDismiss.newBuilder();
              if (hasSCFightRoomDismiss()) {
                subBuilder.mergeFrom(getSCFightRoomDismiss());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightRoomDismiss(subBuilder.buildPartial());
              break;
            }
            case 362: {
              com.randioo.compare_collections_server.protocol.Fight.FightConfirmGameOverResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightConfirmGameOverResponse.newBuilder();
              if (hasFightConfirmGameOverResponse()) {
                subBuilder.mergeFrom(getFightConfirmGameOverResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightConfirmGameOverResponse(subBuilder.buildPartial());
              break;
            }
            case 370: {
              com.randioo.compare_collections_server.protocol.Fight.FightGetRoomDataResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightGetRoomDataResponse.newBuilder();
              if (hasFightGetRoomDataResponse()) {
                subBuilder.mergeFrom(getFightGetRoomDataResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightGetRoomDataResponse(subBuilder.buildPartial());
              break;
            }
            case 378: {
              com.randioo.compare_collections_server.protocol.Settings.SettingsResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Settings.SettingsResponse.newBuilder();
              if (hasSettingsResponse()) {
                subBuilder.mergeFrom(getSettingsResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSettingsResponse(subBuilder.buildPartial());
              break;
            }
            case 386: {
              com.randioo.compare_collections_server.protocol.Settings.SettingsShowResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Settings.SettingsShowResponse.newBuilder();
              if (hasSettingsShowResponse()) {
                subBuilder.mergeFrom(getSettingsShowResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSettingsShowResponse(subBuilder.buildPartial());
              break;
            }
            case 394: {
              com.randioo.compare_collections_server.protocol.Race.RaceJoinRaceResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Race.RaceJoinRaceResponse.newBuilder();
              if (hasRaceJoinRaceResponse()) {
                subBuilder.mergeFrom(getRaceJoinRaceResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRaceJoinRaceResponse(subBuilder.buildPartial());
              break;
            }
            case 402: {
              com.randioo.compare_collections_server.protocol.Race.SCRaceJoinRace.Builder subBuilder = com.randioo.compare_collections_server.protocol.Race.SCRaceJoinRace.newBuilder();
              if (hasSCRaceJoinRace()) {
                subBuilder.mergeFrom(getSCRaceJoinRace());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCRaceJoinRace(subBuilder.buildPartial());
              break;
            }
            case 410: {
              com.randioo.compare_collections_server.protocol.Race.RaceShowQueueResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Race.RaceShowQueueResponse.newBuilder();
              if (hasRaceShowQueueResponse()) {
                subBuilder.mergeFrom(getRaceShowQueueResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRaceShowQueueResponse(subBuilder.buildPartial());
              break;
            }
            case 418: {
              com.randioo.compare_collections_server.protocol.Race.SCRaceQueueChange.Builder subBuilder = com.randioo.compare_collections_server.protocol.Race.SCRaceQueueChange.newBuilder();
              if (hasSCRaceQueueChange()) {
                subBuilder.mergeFrom(getSCRaceQueueChange());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCRaceQueueChange(subBuilder.buildPartial());
              break;
            }
            case 426: {
              com.randioo.compare_collections_server.protocol.Match.MatchCheckRoomResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.MatchCheckRoomResponse.newBuilder();
              if (hasMatchCheckRoomResponse()) {
                subBuilder.mergeFrom(getMatchCheckRoomResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMatchCheckRoomResponse(subBuilder.buildPartial());
              break;
            }
            case 434: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBet.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBet.newBuilder();
              if (hasSCFightNoticeBet()) {
                subBuilder.mergeFrom(getSCFightNoticeBet());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightNoticeBet(subBuilder.buildPartial());
              break;
            }
            case 442: {
              com.randioo.compare_collections_server.protocol.Fight.FightBetResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightBetResponse.newBuilder();
              if (hasFightBetResponse()) {
                subBuilder.mergeFrom(getFightBetResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightBetResponse(subBuilder.buildPartial());
              break;
            }
            case 450: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightBetScore.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightBetScore.newBuilder();
              if (hasSCFightBetScore()) {
                subBuilder.mergeFrom(getSCFightBetScore());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightBetScore(subBuilder.buildPartial());
              break;
            }
            case 458: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightDispatch.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightDispatch.newBuilder();
              if (hasSCFightDispatch()) {
                subBuilder.mergeFrom(getSCFightDispatch());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightDispatch(subBuilder.buildPartial());
              break;
            }
            case 466: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightAddCard.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightAddCard.newBuilder();
              if (hasSCFightAddCard()) {
                subBuilder.mergeFrom(getSCFightAddCard());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightAddCard(subBuilder.buildPartial());
              break;
            }
            case 474: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightChooseAddCard.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightChooseAddCard.newBuilder();
              if (hasSCFightChooseAddCard()) {
                subBuilder.mergeFrom(getSCFightChooseAddCard());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightChooseAddCard(subBuilder.buildPartial());
              break;
            }
            case 482: {
              com.randioo.compare_collections_server.protocol.Fight.FightChooseAddCardResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightChooseAddCardResponse.newBuilder();
              if (hasFightChooseAddCardResponse()) {
                subBuilder.mergeFrom(getFightChooseAddCardResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightChooseAddCardResponse(subBuilder.buildPartial());
              break;
            }
            case 490: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightCardType.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightCardType.newBuilder();
              if (hasSCFightCardType()) {
                subBuilder.mergeFrom(getSCFightCardType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightCardType(subBuilder.buildPartial());
              break;
            }
            case 498: {
              com.randioo.compare_collections_server.protocol.Gm.GmEnvVarsResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Gm.GmEnvVarsResponse.newBuilder();
              if (hasGmEnvVarsResponse()) {
                subBuilder.mergeFrom(getGmEnvVarsResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGmEnvVarsResponse(subBuilder.buildPartial());
              break;
            }
            case 506: {
              com.randioo.compare_collections_server.protocol.Gm.GmGameInfoResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Gm.GmGameInfoResponse.newBuilder();
              if (hasGmGameInfoResponse()) {
                subBuilder.mergeFrom(getGmGameInfoResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGmGameInfoResponse(subBuilder.buildPartial());
              break;
            }
            case 514: {
              com.randioo.compare_collections_server.protocol.Gm.GmDispatchCardResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Gm.GmDispatchCardResponse.newBuilder();
              if (hasGmDispatchCardResponse()) {
                subBuilder.mergeFrom(getGmDispatchCardResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGmDispatchCardResponse(subBuilder.buildPartial());
              break;
            }
            case 522: {
              com.randioo.compare_collections_server.protocol.Gm.GmRoundResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Gm.GmRoundResponse.newBuilder();
              if (hasGmRoundResponse()) {
                subBuilder.mergeFrom(getGmRoundResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGmRoundResponse(subBuilder.buildPartial());
              break;
            }
            case 530: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightWatchCards.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightWatchCards.newBuilder();
              if (hasSCFightWatchCards()) {
                subBuilder.mergeFrom(getSCFightWatchCards());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightWatchCards(subBuilder.buildPartial());
              break;
            }
            case 538: {
              com.randioo.compare_collections_server.protocol.Fight.FightLookPaiResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightLookPaiResponse.newBuilder();
              if (hasFightLookPaiResponse()) {
                subBuilder.mergeFrom(getFightLookPaiResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightLookPaiResponse(subBuilder.buildPartial());
              break;
            }
            case 546: {
              com.randioo.compare_collections_server.protocol.Fight.FightGenResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightGenResponse.newBuilder();
              if (hasFightGenResponse()) {
                subBuilder.mergeFrom(getFightGenResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightGenResponse(subBuilder.buildPartial());
              break;
            }
            case 554: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightAutoBet.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightAutoBet.newBuilder();
              if (hasSCFightAutoBet()) {
                subBuilder.mergeFrom(getSCFightAutoBet());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightAutoBet(subBuilder.buildPartial());
              break;
            }
            case 562: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightBigger.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightBigger.newBuilder();
              if (hasSCFightBigger()) {
                subBuilder.mergeFrom(getSCFightBigger());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightBigger(subBuilder.buildPartial());
              break;
            }
            case 570: {
              com.randioo.compare_collections_server.protocol.Fight.FightBiggerResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightBiggerResponse.newBuilder();
              if (hasFightBiggerResponse()) {
                subBuilder.mergeFrom(getFightBiggerResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightBiggerResponse(subBuilder.buildPartial());
              break;
            }
            case 578: {
              com.randioo.compare_collections_server.protocol.Fight.FightGiveUpResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightGiveUpResponse.newBuilder();
              if (hasFightGiveUpResponse()) {
                subBuilder.mergeFrom(getFightGiveUpResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightGiveUpResponse(subBuilder.buildPartial());
              break;
            }
            case 586: {
              com.randioo.compare_collections_server.protocol.Fight.FightTwoResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightTwoResponse.newBuilder();
              if (hasFightTwoResponse()) {
                subBuilder.mergeFrom(getFightTwoResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightTwoResponse(subBuilder.buildPartial());
              break;
            }
            case 594: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightTwo.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightTwo.newBuilder();
              if (hasSCFightTwo()) {
                subBuilder.mergeFrom(getSCFightTwo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightTwo(subBuilder.buildPartial());
              break;
            }
            case 602: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightGiveUp.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightGiveUp.newBuilder();
              if (hasSCFightGiveUp()) {
                subBuilder.mergeFrom(getSCFightGiveUp());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightGiveUp(subBuilder.buildPartial());
              break;
            }
            case 610: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightGen.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightGen.newBuilder();
              if (hasSCFightGen()) {
                subBuilder.mergeFrom(getSCFightGen());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightGen(subBuilder.buildPartial());
              break;
            }
            case 618: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightButtonDisappear.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightButtonDisappear.newBuilder();
              if (hasSCFightButtonDisappear()) {
                subBuilder.mergeFrom(getSCFightButtonDisappear());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightButtonDisappear(subBuilder.buildPartial());
              break;
            }
            case 626: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightMingPai.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightMingPai.newBuilder();
              if (hasSCFightMingPai()) {
                subBuilder.mergeFrom(getSCFightMingPai());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightMingPai(subBuilder.buildPartial());
              break;
            }
            case 634: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightAllSeat.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightAllSeat.newBuilder();
              if (hasSCFightAllSeat()) {
                subBuilder.mergeFrom(getSCFightAllSeat());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightAllSeat(subBuilder.buildPartial());
              break;
            }
            case 642: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightBiggerButton.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightBiggerButton.newBuilder();
              if (hasSCFightBiggerButton()) {
                subBuilder.mergeFrom(getSCFightBiggerButton());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightBiggerButton(subBuilder.buildPartial());
              break;
            }
            case 650: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightRoundCount.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightRoundCount.newBuilder();
              if (hasSCFightRoundCount()) {
                subBuilder.mergeFrom(getSCFightRoundCount());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightRoundCount(subBuilder.buildPartial());
              break;
            }
            case 658: {
              com.randioo.compare_collections_server.protocol.Match.SCMatchExitGame.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.SCMatchExitGame.newBuilder();
              if (hasSCMatchExitGame()) {
                subBuilder.mergeFrom(getSCMatchExitGame());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCMatchExitGame(subBuilder.buildPartial());
              break;
            }
            case 666: {
              com.randioo.compare_collections_server.protocol.Match.MatchExitGameResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.MatchExitGameResponse.newBuilder();
              if (hasMatchExitGameResponse()) {
                subBuilder.mergeFrom(getMatchExitGameResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMatchExitGameResponse(subBuilder.buildPartial());
              break;
            }
            case 674: {
              com.randioo.compare_collections_server.protocol.Match.SCMatchJoinInGame.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.SCMatchJoinInGame.newBuilder();
              if (hasSCMatchJoinInGame()) {
                subBuilder.mergeFrom(getSCMatchJoinInGame());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCMatchJoinInGame(subBuilder.buildPartial());
              break;
            }
            case 682: {
              com.randioo.compare_collections_server.protocol.Match.MatchJoinInGameResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.MatchJoinInGameResponse.newBuilder();
              if (hasMatchJoinInGameResponse()) {
                subBuilder.mergeFrom(getMatchJoinInGameResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMatchJoinInGameResponse(subBuilder.buildPartial());
              break;
            }
            case 690: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightBetAll.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightBetAll.newBuilder();
              if (hasSCFightBetAll()) {
                subBuilder.mergeFrom(getSCFightBetAll());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightBetAll(subBuilder.buildPartial());
              break;
            }
            case 698: {
              com.randioo.compare_collections_server.protocol.Fight.FightBetAllResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightBetAllResponse.newBuilder();
              if (hasFightBetAllResponse()) {
                subBuilder.mergeFrom(getFightBetAllResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightBetAllResponse(subBuilder.buildPartial());
              break;
            }
            case 706: {
              com.randioo.compare_collections_server.protocol.Fight.FightGameStartResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightGameStartResponse.newBuilder();
              if (hasFightGameStartResponse()) {
                subBuilder.mergeFrom(getFightGameStartResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightGameStartResponse(subBuilder.buildPartial());
              break;
            }
            case 714: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightPlayTalk.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightPlayTalk.newBuilder();
              if (hasSCFightPlayTalk()) {
                subBuilder.mergeFrom(getSCFightPlayTalk());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightPlayTalk(subBuilder.buildPartial());
              break;
            }
            case 722: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeCallType.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeCallType.newBuilder();
              if (hasSCFightNoticeCallType()) {
                subBuilder.mergeFrom(getSCFightNoticeCallType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightNoticeCallType(subBuilder.buildPartial());
              break;
            }
            case 730: {
              com.randioo.compare_collections_server.protocol.Fight.FightCutCardsResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightCutCardsResponse.newBuilder();
              if (hasFightCutCardsResponse()) {
                subBuilder.mergeFrom(getFightCutCardsResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightCutCardsResponse(subBuilder.buildPartial());
              break;
            }
            case 738: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightCutCards.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightCutCards.newBuilder();
              if (hasSCFightCutCards()) {
                subBuilder.mergeFrom(getSCFightCutCards());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightCutCards(subBuilder.buildPartial());
              break;
            }
            case 746: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightOpenCardsResult.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightOpenCardsResult.newBuilder();
              if (hasSCFightOpenCardsResult()) {
                subBuilder.mergeFrom(getSCFightOpenCardsResult());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightOpenCardsResult(subBuilder.buildPartial());
              break;
            }
            case 754: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOverScore.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOverScore.newBuilder();
              if (hasSCFightRoundOverScore()) {
                subBuilder.mergeFrom(getSCFightRoundOverScore());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightRoundOverScore(subBuilder.buildPartial());
              break;
            }
            case 762: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBattle.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBattle.newBuilder();
              if (hasSCFightNoticeBattle()) {
                subBuilder.mergeFrom(getSCFightNoticeBattle());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightNoticeBattle(subBuilder.buildPartial());
              break;
            }
            case 770: {
              com.randioo.compare_collections_server.protocol.Fight.FightReconnectDataResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.FightReconnectDataResponse.newBuilder();
              if (hasFightReconnectDataResponse()) {
                subBuilder.mergeFrom(getFightReconnectDataResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightReconnectDataResponse(subBuilder.buildPartial());
              break;
            }
            case 778: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightMaxBet.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightMaxBet.newBuilder();
              if (hasSCFightMaxBet()) {
                subBuilder.mergeFrom(getSCFightMaxBet());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightMaxBet(subBuilder.buildPartial());
              break;
            }
            case 786: {
              com.randioo.compare_collections_server.protocol.Match.MatchResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.MatchResponse.newBuilder();
              if (hasMatchResponse()) {
                subBuilder.mergeFrom(getMatchResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMatchResponse(subBuilder.buildPartial());
              break;
            }
            case 794: {
              com.randioo.compare_collections_server.protocol.Match.MatchCancelResponse.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.MatchCancelResponse.newBuilder();
              if (hasMatchCancelResponse()) {
                subBuilder.mergeFrom(getMatchCancelResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMatchCancelResponse(subBuilder.buildPartial());
              break;
            }
            case 802: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightGameRoleData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightGameRoleData.newBuilder();
              if (hasSCFightGameRoleData()) {
                subBuilder.mergeFrom(getSCFightGameRoleData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightGameRoleData(subBuilder.buildPartial());
              break;
            }
            case 810: {
              com.randioo.compare_collections_server.protocol.Match.SCMatchResult.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.SCMatchResult.newBuilder();
              if (hasSCMatchResult()) {
                subBuilder.mergeFrom(getSCMatchResult());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCMatchResult(subBuilder.buildPartial());
              break;
            }
            case 818: {
              com.randioo.compare_collections_server.protocol.Match.SCMatchKickGame.Builder subBuilder = com.randioo.compare_collections_server.protocol.Match.SCMatchKickGame.newBuilder();
              if (hasSCMatchKickGame()) {
                subBuilder.mergeFrom(getSCMatchKickGame());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCMatchKickGame(subBuilder.buildPartial());
              break;
            }
            case 826: {
              com.randioo.compare_collections_server.protocol.Fight.SCFightBattleOutCards.Builder subBuilder = com.randioo.compare_collections_server.protocol.Fight.SCFightBattleOutCards.newBuilder();
              if (hasSCFightBattleOutCards()) {
                subBuilder.mergeFrom(getSCFightBattleOutCards());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightBattleOutCards(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.randioo.compare_collections_server.protocol.HeartResponse HeartResponse = 1;
      public boolean hasHeartResponse() {
        return result.hasHeartResponse();
      }
      public com.randioo.compare_collections_server.protocol.Heart.HeartResponse getHeartResponse() {
        return result.getHeartResponse();
      }
      public Builder setHeartResponse(com.randioo.compare_collections_server.protocol.Heart.HeartResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHeartResponse = true;
        result.heartResponse_ = value;
        return this;
      }
      public Builder setHeartResponse(com.randioo.compare_collections_server.protocol.Heart.HeartResponse.Builder builderForValue) {
        result.hasHeartResponse = true;
        result.heartResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeHeartResponse(com.randioo.compare_collections_server.protocol.Heart.HeartResponse value) {
        if (result.hasHeartResponse() &&
            result.heartResponse_ != com.randioo.compare_collections_server.protocol.Heart.HeartResponse.getDefaultInstance()) {
          result.heartResponse_ =
            com.randioo.compare_collections_server.protocol.Heart.HeartResponse.newBuilder(result.heartResponse_).mergeFrom(value).buildPartial();
        } else {
          result.heartResponse_ = value;
        }
        result.hasHeartResponse = true;
        return this;
      }
      public Builder clearHeartResponse() {
        result.hasHeartResponse = false;
        result.heartResponse_ = com.randioo.compare_collections_server.protocol.Heart.HeartResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCHeart SCHeart = 2;
      public boolean hasSCHeart() {
        return result.hasSCHeart();
      }
      public com.randioo.compare_collections_server.protocol.Heart.SCHeart getSCHeart() {
        return result.getSCHeart();
      }
      public Builder setSCHeart(com.randioo.compare_collections_server.protocol.Heart.SCHeart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCHeart = true;
        result.sCHeart_ = value;
        return this;
      }
      public Builder setSCHeart(com.randioo.compare_collections_server.protocol.Heart.SCHeart.Builder builderForValue) {
        result.hasSCHeart = true;
        result.sCHeart_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCHeart(com.randioo.compare_collections_server.protocol.Heart.SCHeart value) {
        if (result.hasSCHeart() &&
            result.sCHeart_ != com.randioo.compare_collections_server.protocol.Heart.SCHeart.getDefaultInstance()) {
          result.sCHeart_ =
            com.randioo.compare_collections_server.protocol.Heart.SCHeart.newBuilder(result.sCHeart_).mergeFrom(value).buildPartial();
        } else {
          result.sCHeart_ = value;
        }
        result.hasSCHeart = true;
        return this;
      }
      public Builder clearSCHeart() {
        result.hasSCHeart = false;
        result.sCHeart_ = com.randioo.compare_collections_server.protocol.Heart.SCHeart.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.LoginGetRoleDataResponse LoginGetRoleDataResponse = 3;
      public boolean hasLoginGetRoleDataResponse() {
        return result.hasLoginGetRoleDataResponse();
      }
      public com.randioo.compare_collections_server.protocol.Login.LoginGetRoleDataResponse getLoginGetRoleDataResponse() {
        return result.getLoginGetRoleDataResponse();
      }
      public Builder setLoginGetRoleDataResponse(com.randioo.compare_collections_server.protocol.Login.LoginGetRoleDataResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLoginGetRoleDataResponse = true;
        result.loginGetRoleDataResponse_ = value;
        return this;
      }
      public Builder setLoginGetRoleDataResponse(com.randioo.compare_collections_server.protocol.Login.LoginGetRoleDataResponse.Builder builderForValue) {
        result.hasLoginGetRoleDataResponse = true;
        result.loginGetRoleDataResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeLoginGetRoleDataResponse(com.randioo.compare_collections_server.protocol.Login.LoginGetRoleDataResponse value) {
        if (result.hasLoginGetRoleDataResponse() &&
            result.loginGetRoleDataResponse_ != com.randioo.compare_collections_server.protocol.Login.LoginGetRoleDataResponse.getDefaultInstance()) {
          result.loginGetRoleDataResponse_ =
            com.randioo.compare_collections_server.protocol.Login.LoginGetRoleDataResponse.newBuilder(result.loginGetRoleDataResponse_).mergeFrom(value).buildPartial();
        } else {
          result.loginGetRoleDataResponse_ = value;
        }
        result.hasLoginGetRoleDataResponse = true;
        return this;
      }
      public Builder clearLoginGetRoleDataResponse() {
        result.hasLoginGetRoleDataResponse = false;
        result.loginGetRoleDataResponse_ = com.randioo.compare_collections_server.protocol.Login.LoginGetRoleDataResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCLoginOtherSide SCLoginOtherSide = 4;
      public boolean hasSCLoginOtherSide() {
        return result.hasSCLoginOtherSide();
      }
      public com.randioo.compare_collections_server.protocol.Login.SCLoginOtherSide getSCLoginOtherSide() {
        return result.getSCLoginOtherSide();
      }
      public Builder setSCLoginOtherSide(com.randioo.compare_collections_server.protocol.Login.SCLoginOtherSide value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCLoginOtherSide = true;
        result.sCLoginOtherSide_ = value;
        return this;
      }
      public Builder setSCLoginOtherSide(com.randioo.compare_collections_server.protocol.Login.SCLoginOtherSide.Builder builderForValue) {
        result.hasSCLoginOtherSide = true;
        result.sCLoginOtherSide_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCLoginOtherSide(com.randioo.compare_collections_server.protocol.Login.SCLoginOtherSide value) {
        if (result.hasSCLoginOtherSide() &&
            result.sCLoginOtherSide_ != com.randioo.compare_collections_server.protocol.Login.SCLoginOtherSide.getDefaultInstance()) {
          result.sCLoginOtherSide_ =
            com.randioo.compare_collections_server.protocol.Login.SCLoginOtherSide.newBuilder(result.sCLoginOtherSide_).mergeFrom(value).buildPartial();
        } else {
          result.sCLoginOtherSide_ = value;
        }
        result.hasSCLoginOtherSide = true;
        return this;
      }
      public Builder clearSCLoginOtherSide() {
        result.hasSCLoginOtherSide = false;
        result.sCLoginOtherSide_ = com.randioo.compare_collections_server.protocol.Login.SCLoginOtherSide.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.RoleRenameResponse RoleRenameResponse = 5;
      public boolean hasRoleRenameResponse() {
        return result.hasRoleRenameResponse();
      }
      public com.randioo.compare_collections_server.protocol.Role.RoleRenameResponse getRoleRenameResponse() {
        return result.getRoleRenameResponse();
      }
      public Builder setRoleRenameResponse(com.randioo.compare_collections_server.protocol.Role.RoleRenameResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRoleRenameResponse = true;
        result.roleRenameResponse_ = value;
        return this;
      }
      public Builder setRoleRenameResponse(com.randioo.compare_collections_server.protocol.Role.RoleRenameResponse.Builder builderForValue) {
        result.hasRoleRenameResponse = true;
        result.roleRenameResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeRoleRenameResponse(com.randioo.compare_collections_server.protocol.Role.RoleRenameResponse value) {
        if (result.hasRoleRenameResponse() &&
            result.roleRenameResponse_ != com.randioo.compare_collections_server.protocol.Role.RoleRenameResponse.getDefaultInstance()) {
          result.roleRenameResponse_ =
            com.randioo.compare_collections_server.protocol.Role.RoleRenameResponse.newBuilder(result.roleRenameResponse_).mergeFrom(value).buildPartial();
        } else {
          result.roleRenameResponse_ = value;
        }
        result.hasRoleRenameResponse = true;
        return this;
      }
      public Builder clearRoleRenameResponse() {
        result.hasRoleRenameResponse = false;
        result.roleRenameResponse_ = com.randioo.compare_collections_server.protocol.Role.RoleRenameResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.RoleGetRoleDataResponse RoleGetRoleDataResponse = 6;
      public boolean hasRoleGetRoleDataResponse() {
        return result.hasRoleGetRoleDataResponse();
      }
      public com.randioo.compare_collections_server.protocol.Role.RoleGetRoleDataResponse getRoleGetRoleDataResponse() {
        return result.getRoleGetRoleDataResponse();
      }
      public Builder setRoleGetRoleDataResponse(com.randioo.compare_collections_server.protocol.Role.RoleGetRoleDataResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRoleGetRoleDataResponse = true;
        result.roleGetRoleDataResponse_ = value;
        return this;
      }
      public Builder setRoleGetRoleDataResponse(com.randioo.compare_collections_server.protocol.Role.RoleGetRoleDataResponse.Builder builderForValue) {
        result.hasRoleGetRoleDataResponse = true;
        result.roleGetRoleDataResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeRoleGetRoleDataResponse(com.randioo.compare_collections_server.protocol.Role.RoleGetRoleDataResponse value) {
        if (result.hasRoleGetRoleDataResponse() &&
            result.roleGetRoleDataResponse_ != com.randioo.compare_collections_server.protocol.Role.RoleGetRoleDataResponse.getDefaultInstance()) {
          result.roleGetRoleDataResponse_ =
            com.randioo.compare_collections_server.protocol.Role.RoleGetRoleDataResponse.newBuilder(result.roleGetRoleDataResponse_).mergeFrom(value).buildPartial();
        } else {
          result.roleGetRoleDataResponse_ = value;
        }
        result.hasRoleGetRoleDataResponse = true;
        return this;
      }
      public Builder clearRoleGetRoleDataResponse() {
        result.hasRoleGetRoleDataResponse = false;
        result.roleGetRoleDataResponse_ = com.randioo.compare_collections_server.protocol.Role.RoleGetRoleDataResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCRoleRandiooCoinChange SCRoleRandiooCoinChange = 7;
      public boolean hasSCRoleRandiooCoinChange() {
        return result.hasSCRoleRandiooCoinChange();
      }
      public com.randioo.compare_collections_server.protocol.Role.SCRoleRandiooCoinChange getSCRoleRandiooCoinChange() {
        return result.getSCRoleRandiooCoinChange();
      }
      public Builder setSCRoleRandiooCoinChange(com.randioo.compare_collections_server.protocol.Role.SCRoleRandiooCoinChange value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCRoleRandiooCoinChange = true;
        result.sCRoleRandiooCoinChange_ = value;
        return this;
      }
      public Builder setSCRoleRandiooCoinChange(com.randioo.compare_collections_server.protocol.Role.SCRoleRandiooCoinChange.Builder builderForValue) {
        result.hasSCRoleRandiooCoinChange = true;
        result.sCRoleRandiooCoinChange_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCRoleRandiooCoinChange(com.randioo.compare_collections_server.protocol.Role.SCRoleRandiooCoinChange value) {
        if (result.hasSCRoleRandiooCoinChange() &&
            result.sCRoleRandiooCoinChange_ != com.randioo.compare_collections_server.protocol.Role.SCRoleRandiooCoinChange.getDefaultInstance()) {
          result.sCRoleRandiooCoinChange_ =
            com.randioo.compare_collections_server.protocol.Role.SCRoleRandiooCoinChange.newBuilder(result.sCRoleRandiooCoinChange_).mergeFrom(value).buildPartial();
        } else {
          result.sCRoleRandiooCoinChange_ = value;
        }
        result.hasSCRoleRandiooCoinChange = true;
        return this;
      }
      public Builder clearSCRoleRandiooCoinChange() {
        result.hasSCRoleRandiooCoinChange = false;
        result.sCRoleRandiooCoinChange_ = com.randioo.compare_collections_server.protocol.Role.SCRoleRandiooCoinChange.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.MatchCreateGameResponse MatchCreateGameResponse = 8;
      public boolean hasMatchCreateGameResponse() {
        return result.hasMatchCreateGameResponse();
      }
      public com.randioo.compare_collections_server.protocol.Match.MatchCreateGameResponse getMatchCreateGameResponse() {
        return result.getMatchCreateGameResponse();
      }
      public Builder setMatchCreateGameResponse(com.randioo.compare_collections_server.protocol.Match.MatchCreateGameResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMatchCreateGameResponse = true;
        result.matchCreateGameResponse_ = value;
        return this;
      }
      public Builder setMatchCreateGameResponse(com.randioo.compare_collections_server.protocol.Match.MatchCreateGameResponse.Builder builderForValue) {
        result.hasMatchCreateGameResponse = true;
        result.matchCreateGameResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMatchCreateGameResponse(com.randioo.compare_collections_server.protocol.Match.MatchCreateGameResponse value) {
        if (result.hasMatchCreateGameResponse() &&
            result.matchCreateGameResponse_ != com.randioo.compare_collections_server.protocol.Match.MatchCreateGameResponse.getDefaultInstance()) {
          result.matchCreateGameResponse_ =
            com.randioo.compare_collections_server.protocol.Match.MatchCreateGameResponse.newBuilder(result.matchCreateGameResponse_).mergeFrom(value).buildPartial();
        } else {
          result.matchCreateGameResponse_ = value;
        }
        result.hasMatchCreateGameResponse = true;
        return this;
      }
      public Builder clearMatchCreateGameResponse() {
        result.hasMatchCreateGameResponse = false;
        result.matchCreateGameResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchCreateGameResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.MatchJoinGameResponse MatchJoinGameResponse = 9;
      public boolean hasMatchJoinGameResponse() {
        return result.hasMatchJoinGameResponse();
      }
      public com.randioo.compare_collections_server.protocol.Match.MatchJoinGameResponse getMatchJoinGameResponse() {
        return result.getMatchJoinGameResponse();
      }
      public Builder setMatchJoinGameResponse(com.randioo.compare_collections_server.protocol.Match.MatchJoinGameResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMatchJoinGameResponse = true;
        result.matchJoinGameResponse_ = value;
        return this;
      }
      public Builder setMatchJoinGameResponse(com.randioo.compare_collections_server.protocol.Match.MatchJoinGameResponse.Builder builderForValue) {
        result.hasMatchJoinGameResponse = true;
        result.matchJoinGameResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMatchJoinGameResponse(com.randioo.compare_collections_server.protocol.Match.MatchJoinGameResponse value) {
        if (result.hasMatchJoinGameResponse() &&
            result.matchJoinGameResponse_ != com.randioo.compare_collections_server.protocol.Match.MatchJoinGameResponse.getDefaultInstance()) {
          result.matchJoinGameResponse_ =
            com.randioo.compare_collections_server.protocol.Match.MatchJoinGameResponse.newBuilder(result.matchJoinGameResponse_).mergeFrom(value).buildPartial();
        } else {
          result.matchJoinGameResponse_ = value;
        }
        result.hasMatchJoinGameResponse = true;
        return this;
      }
      public Builder clearMatchJoinGameResponse() {
        result.hasMatchJoinGameResponse = false;
        result.matchJoinGameResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchJoinGameResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCMatchJoinGame SCMatchJoinGame = 10;
      public boolean hasSCMatchJoinGame() {
        return result.hasSCMatchJoinGame();
      }
      public com.randioo.compare_collections_server.protocol.Match.SCMatchJoinGame getSCMatchJoinGame() {
        return result.getSCMatchJoinGame();
      }
      public Builder setSCMatchJoinGame(com.randioo.compare_collections_server.protocol.Match.SCMatchJoinGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCMatchJoinGame = true;
        result.sCMatchJoinGame_ = value;
        return this;
      }
      public Builder setSCMatchJoinGame(com.randioo.compare_collections_server.protocol.Match.SCMatchJoinGame.Builder builderForValue) {
        result.hasSCMatchJoinGame = true;
        result.sCMatchJoinGame_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCMatchJoinGame(com.randioo.compare_collections_server.protocol.Match.SCMatchJoinGame value) {
        if (result.hasSCMatchJoinGame() &&
            result.sCMatchJoinGame_ != com.randioo.compare_collections_server.protocol.Match.SCMatchJoinGame.getDefaultInstance()) {
          result.sCMatchJoinGame_ =
            com.randioo.compare_collections_server.protocol.Match.SCMatchJoinGame.newBuilder(result.sCMatchJoinGame_).mergeFrom(value).buildPartial();
        } else {
          result.sCMatchJoinGame_ = value;
        }
        result.hasSCMatchJoinGame = true;
        return this;
      }
      public Builder clearSCMatchJoinGame() {
        result.hasSCMatchJoinGame = false;
        result.sCMatchJoinGame_ = com.randioo.compare_collections_server.protocol.Match.SCMatchJoinGame.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCMatchMineInfo SCMatchMineInfo = 11;
      public boolean hasSCMatchMineInfo() {
        return result.hasSCMatchMineInfo();
      }
      public com.randioo.compare_collections_server.protocol.Match.SCMatchMineInfo getSCMatchMineInfo() {
        return result.getSCMatchMineInfo();
      }
      public Builder setSCMatchMineInfo(com.randioo.compare_collections_server.protocol.Match.SCMatchMineInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCMatchMineInfo = true;
        result.sCMatchMineInfo_ = value;
        return this;
      }
      public Builder setSCMatchMineInfo(com.randioo.compare_collections_server.protocol.Match.SCMatchMineInfo.Builder builderForValue) {
        result.hasSCMatchMineInfo = true;
        result.sCMatchMineInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCMatchMineInfo(com.randioo.compare_collections_server.protocol.Match.SCMatchMineInfo value) {
        if (result.hasSCMatchMineInfo() &&
            result.sCMatchMineInfo_ != com.randioo.compare_collections_server.protocol.Match.SCMatchMineInfo.getDefaultInstance()) {
          result.sCMatchMineInfo_ =
            com.randioo.compare_collections_server.protocol.Match.SCMatchMineInfo.newBuilder(result.sCMatchMineInfo_).mergeFrom(value).buildPartial();
        } else {
          result.sCMatchMineInfo_ = value;
        }
        result.hasSCMatchMineInfo = true;
        return this;
      }
      public Builder clearSCMatchMineInfo() {
        result.hasSCMatchMineInfo = false;
        result.sCMatchMineInfo_ = com.randioo.compare_collections_server.protocol.Match.SCMatchMineInfo.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCMatchCreateGame SCMatchCreateGame = 12;
      public boolean hasSCMatchCreateGame() {
        return result.hasSCMatchCreateGame();
      }
      public com.randioo.compare_collections_server.protocol.Match.SCMatchCreateGame getSCMatchCreateGame() {
        return result.getSCMatchCreateGame();
      }
      public Builder setSCMatchCreateGame(com.randioo.compare_collections_server.protocol.Match.SCMatchCreateGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCMatchCreateGame = true;
        result.sCMatchCreateGame_ = value;
        return this;
      }
      public Builder setSCMatchCreateGame(com.randioo.compare_collections_server.protocol.Match.SCMatchCreateGame.Builder builderForValue) {
        result.hasSCMatchCreateGame = true;
        result.sCMatchCreateGame_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCMatchCreateGame(com.randioo.compare_collections_server.protocol.Match.SCMatchCreateGame value) {
        if (result.hasSCMatchCreateGame() &&
            result.sCMatchCreateGame_ != com.randioo.compare_collections_server.protocol.Match.SCMatchCreateGame.getDefaultInstance()) {
          result.sCMatchCreateGame_ =
            com.randioo.compare_collections_server.protocol.Match.SCMatchCreateGame.newBuilder(result.sCMatchCreateGame_).mergeFrom(value).buildPartial();
        } else {
          result.sCMatchCreateGame_ = value;
        }
        result.hasSCMatchCreateGame = true;
        return this;
      }
      public Builder clearSCMatchCreateGame() {
        result.hasSCMatchCreateGame = false;
        result.sCMatchCreateGame_ = com.randioo.compare_collections_server.protocol.Match.SCMatchCreateGame.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.MatchPreJoinResponse MatchPreJoinResponse = 13;
      public boolean hasMatchPreJoinResponse() {
        return result.hasMatchPreJoinResponse();
      }
      public com.randioo.compare_collections_server.protocol.Match.MatchPreJoinResponse getMatchPreJoinResponse() {
        return result.getMatchPreJoinResponse();
      }
      public Builder setMatchPreJoinResponse(com.randioo.compare_collections_server.protocol.Match.MatchPreJoinResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMatchPreJoinResponse = true;
        result.matchPreJoinResponse_ = value;
        return this;
      }
      public Builder setMatchPreJoinResponse(com.randioo.compare_collections_server.protocol.Match.MatchPreJoinResponse.Builder builderForValue) {
        result.hasMatchPreJoinResponse = true;
        result.matchPreJoinResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMatchPreJoinResponse(com.randioo.compare_collections_server.protocol.Match.MatchPreJoinResponse value) {
        if (result.hasMatchPreJoinResponse() &&
            result.matchPreJoinResponse_ != com.randioo.compare_collections_server.protocol.Match.MatchPreJoinResponse.getDefaultInstance()) {
          result.matchPreJoinResponse_ =
            com.randioo.compare_collections_server.protocol.Match.MatchPreJoinResponse.newBuilder(result.matchPreJoinResponse_).mergeFrom(value).buildPartial();
        } else {
          result.matchPreJoinResponse_ = value;
        }
        result.hasMatchPreJoinResponse = true;
        return this;
      }
      public Builder clearMatchPreJoinResponse() {
        result.hasMatchPreJoinResponse = false;
        result.matchPreJoinResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchPreJoinResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightNoticeReady SCFightNoticeReady = 14;
      public boolean hasSCFightNoticeReady() {
        return result.hasSCFightNoticeReady();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeReady getSCFightNoticeReady() {
        return result.getSCFightNoticeReady();
      }
      public Builder setSCFightNoticeReady(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeReady value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightNoticeReady = true;
        result.sCFightNoticeReady_ = value;
        return this;
      }
      public Builder setSCFightNoticeReady(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeReady.Builder builderForValue) {
        result.hasSCFightNoticeReady = true;
        result.sCFightNoticeReady_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightNoticeReady(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeReady value) {
        if (result.hasSCFightNoticeReady() &&
            result.sCFightNoticeReady_ != com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeReady.getDefaultInstance()) {
          result.sCFightNoticeReady_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeReady.newBuilder(result.sCFightNoticeReady_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightNoticeReady_ = value;
        }
        result.hasSCFightNoticeReady = true;
        return this;
      }
      public Builder clearSCFightNoticeReady() {
        result.hasSCFightNoticeReady = false;
        result.sCFightNoticeReady_ = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeReady.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightReadyResponse FightReadyResponse = 15;
      public boolean hasFightReadyResponse() {
        return result.hasFightReadyResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightReadyResponse getFightReadyResponse() {
        return result.getFightReadyResponse();
      }
      public Builder setFightReadyResponse(com.randioo.compare_collections_server.protocol.Fight.FightReadyResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightReadyResponse = true;
        result.fightReadyResponse_ = value;
        return this;
      }
      public Builder setFightReadyResponse(com.randioo.compare_collections_server.protocol.Fight.FightReadyResponse.Builder builderForValue) {
        result.hasFightReadyResponse = true;
        result.fightReadyResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightReadyResponse(com.randioo.compare_collections_server.protocol.Fight.FightReadyResponse value) {
        if (result.hasFightReadyResponse() &&
            result.fightReadyResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightReadyResponse.getDefaultInstance()) {
          result.fightReadyResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightReadyResponse.newBuilder(result.fightReadyResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightReadyResponse_ = value;
        }
        result.hasFightReadyResponse = true;
        return this;
      }
      public Builder clearFightReadyResponse() {
        result.hasFightReadyResponse = false;
        result.fightReadyResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightReadyResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightReady SCFightReady = 16;
      public boolean hasSCFightReady() {
        return result.hasSCFightReady();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightReady getSCFightReady() {
        return result.getSCFightReady();
      }
      public Builder setSCFightReady(com.randioo.compare_collections_server.protocol.Fight.SCFightReady value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightReady = true;
        result.sCFightReady_ = value;
        return this;
      }
      public Builder setSCFightReady(com.randioo.compare_collections_server.protocol.Fight.SCFightReady.Builder builderForValue) {
        result.hasSCFightReady = true;
        result.sCFightReady_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightReady(com.randioo.compare_collections_server.protocol.Fight.SCFightReady value) {
        if (result.hasSCFightReady() &&
            result.sCFightReady_ != com.randioo.compare_collections_server.protocol.Fight.SCFightReady.getDefaultInstance()) {
          result.sCFightReady_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightReady.newBuilder(result.sCFightReady_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightReady_ = value;
        }
        result.hasSCFightReady = true;
        return this;
      }
      public Builder clearSCFightReady() {
        result.hasSCFightReady = false;
        result.sCFightReady_ = com.randioo.compare_collections_server.protocol.Fight.SCFightReady.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightStart SCFightStart = 17;
      public boolean hasSCFightStart() {
        return result.hasSCFightStart();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightStart getSCFightStart() {
        return result.getSCFightStart();
      }
      public Builder setSCFightStart(com.randioo.compare_collections_server.protocol.Fight.SCFightStart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightStart = true;
        result.sCFightStart_ = value;
        return this;
      }
      public Builder setSCFightStart(com.randioo.compare_collections_server.protocol.Fight.SCFightStart.Builder builderForValue) {
        result.hasSCFightStart = true;
        result.sCFightStart_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightStart(com.randioo.compare_collections_server.protocol.Fight.SCFightStart value) {
        if (result.hasSCFightStart() &&
            result.sCFightStart_ != com.randioo.compare_collections_server.protocol.Fight.SCFightStart.getDefaultInstance()) {
          result.sCFightStart_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightStart.newBuilder(result.sCFightStart_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightStart_ = value;
        }
        result.hasSCFightStart = true;
        return this;
      }
      public Builder clearSCFightStart() {
        result.hasSCFightStart = false;
        result.sCFightStart_ = com.randioo.compare_collections_server.protocol.Fight.SCFightStart.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightExitGameResponse FightExitGameResponse = 18;
      public boolean hasFightExitGameResponse() {
        return result.hasFightExitGameResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightExitGameResponse getFightExitGameResponse() {
        return result.getFightExitGameResponse();
      }
      public Builder setFightExitGameResponse(com.randioo.compare_collections_server.protocol.Fight.FightExitGameResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightExitGameResponse = true;
        result.fightExitGameResponse_ = value;
        return this;
      }
      public Builder setFightExitGameResponse(com.randioo.compare_collections_server.protocol.Fight.FightExitGameResponse.Builder builderForValue) {
        result.hasFightExitGameResponse = true;
        result.fightExitGameResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightExitGameResponse(com.randioo.compare_collections_server.protocol.Fight.FightExitGameResponse value) {
        if (result.hasFightExitGameResponse() &&
            result.fightExitGameResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightExitGameResponse.getDefaultInstance()) {
          result.fightExitGameResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightExitGameResponse.newBuilder(result.fightExitGameResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightExitGameResponse_ = value;
        }
        result.hasFightExitGameResponse = true;
        return this;
      }
      public Builder clearFightExitGameResponse() {
        result.hasFightExitGameResponse = false;
        result.fightExitGameResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightExitGameResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightExitGame SCFightExitGame = 19;
      public boolean hasSCFightExitGame() {
        return result.hasSCFightExitGame();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightExitGame getSCFightExitGame() {
        return result.getSCFightExitGame();
      }
      public Builder setSCFightExitGame(com.randioo.compare_collections_server.protocol.Fight.SCFightExitGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightExitGame = true;
        result.sCFightExitGame_ = value;
        return this;
      }
      public Builder setSCFightExitGame(com.randioo.compare_collections_server.protocol.Fight.SCFightExitGame.Builder builderForValue) {
        result.hasSCFightExitGame = true;
        result.sCFightExitGame_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightExitGame(com.randioo.compare_collections_server.protocol.Fight.SCFightExitGame value) {
        if (result.hasSCFightExitGame() &&
            result.sCFightExitGame_ != com.randioo.compare_collections_server.protocol.Fight.SCFightExitGame.getDefaultInstance()) {
          result.sCFightExitGame_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightExitGame.newBuilder(result.sCFightExitGame_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightExitGame_ = value;
        }
        result.hasSCFightExitGame = true;
        return this;
      }
      public Builder clearSCFightExitGame() {
        result.hasSCFightExitGame = false;
        result.sCFightExitGame_ = com.randioo.compare_collections_server.protocol.Fight.SCFightExitGame.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightClearRoomId SCFightClearRoomId = 20;
      public boolean hasSCFightClearRoomId() {
        return result.hasSCFightClearRoomId();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightClearRoomId getSCFightClearRoomId() {
        return result.getSCFightClearRoomId();
      }
      public Builder setSCFightClearRoomId(com.randioo.compare_collections_server.protocol.Fight.SCFightClearRoomId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightClearRoomId = true;
        result.sCFightClearRoomId_ = value;
        return this;
      }
      public Builder setSCFightClearRoomId(com.randioo.compare_collections_server.protocol.Fight.SCFightClearRoomId.Builder builderForValue) {
        result.hasSCFightClearRoomId = true;
        result.sCFightClearRoomId_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightClearRoomId(com.randioo.compare_collections_server.protocol.Fight.SCFightClearRoomId value) {
        if (result.hasSCFightClearRoomId() &&
            result.sCFightClearRoomId_ != com.randioo.compare_collections_server.protocol.Fight.SCFightClearRoomId.getDefaultInstance()) {
          result.sCFightClearRoomId_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightClearRoomId.newBuilder(result.sCFightClearRoomId_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightClearRoomId_ = value;
        }
        result.hasSCFightClearRoomId = true;
        return this;
      }
      public Builder clearSCFightClearRoomId() {
        result.hasSCFightClearRoomId = false;
        result.sCFightClearRoomId_ = com.randioo.compare_collections_server.protocol.Fight.SCFightClearRoomId.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightLoadResource SCFightLoadResource = 21;
      public boolean hasSCFightLoadResource() {
        return result.hasSCFightLoadResource();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightLoadResource getSCFightLoadResource() {
        return result.getSCFightLoadResource();
      }
      public Builder setSCFightLoadResource(com.randioo.compare_collections_server.protocol.Fight.SCFightLoadResource value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightLoadResource = true;
        result.sCFightLoadResource_ = value;
        return this;
      }
      public Builder setSCFightLoadResource(com.randioo.compare_collections_server.protocol.Fight.SCFightLoadResource.Builder builderForValue) {
        result.hasSCFightLoadResource = true;
        result.sCFightLoadResource_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightLoadResource(com.randioo.compare_collections_server.protocol.Fight.SCFightLoadResource value) {
        if (result.hasSCFightLoadResource() &&
            result.sCFightLoadResource_ != com.randioo.compare_collections_server.protocol.Fight.SCFightLoadResource.getDefaultInstance()) {
          result.sCFightLoadResource_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightLoadResource.newBuilder(result.sCFightLoadResource_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightLoadResource_ = value;
        }
        result.hasSCFightLoadResource = true;
        return this;
      }
      public Builder clearSCFightLoadResource() {
        result.hasSCFightLoadResource = false;
        result.sCFightLoadResource_ = com.randioo.compare_collections_server.protocol.Fight.SCFightLoadResource.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightNoticeSendCard SCFightNoticeSendCard = 22;
      public boolean hasSCFightNoticeSendCard() {
        return result.hasSCFightNoticeSendCard();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeSendCard getSCFightNoticeSendCard() {
        return result.getSCFightNoticeSendCard();
      }
      public Builder setSCFightNoticeSendCard(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeSendCard value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightNoticeSendCard = true;
        result.sCFightNoticeSendCard_ = value;
        return this;
      }
      public Builder setSCFightNoticeSendCard(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeSendCard.Builder builderForValue) {
        result.hasSCFightNoticeSendCard = true;
        result.sCFightNoticeSendCard_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightNoticeSendCard(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeSendCard value) {
        if (result.hasSCFightNoticeSendCard() &&
            result.sCFightNoticeSendCard_ != com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeSendCard.getDefaultInstance()) {
          result.sCFightNoticeSendCard_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeSendCard.newBuilder(result.sCFightNoticeSendCard_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightNoticeSendCard_ = value;
        }
        result.hasSCFightNoticeSendCard = true;
        return this;
      }
      public Builder clearSCFightNoticeSendCard() {
        result.hasSCFightNoticeSendCard = false;
        result.sCFightNoticeSendCard_ = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeSendCard.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightSendCardResponse FightSendCardResponse = 23;
      public boolean hasFightSendCardResponse() {
        return result.hasFightSendCardResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightSendCardResponse getFightSendCardResponse() {
        return result.getFightSendCardResponse();
      }
      public Builder setFightSendCardResponse(com.randioo.compare_collections_server.protocol.Fight.FightSendCardResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightSendCardResponse = true;
        result.fightSendCardResponse_ = value;
        return this;
      }
      public Builder setFightSendCardResponse(com.randioo.compare_collections_server.protocol.Fight.FightSendCardResponse.Builder builderForValue) {
        result.hasFightSendCardResponse = true;
        result.fightSendCardResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightSendCardResponse(com.randioo.compare_collections_server.protocol.Fight.FightSendCardResponse value) {
        if (result.hasFightSendCardResponse() &&
            result.fightSendCardResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightSendCardResponse.getDefaultInstance()) {
          result.fightSendCardResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightSendCardResponse.newBuilder(result.fightSendCardResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightSendCardResponse_ = value;
        }
        result.hasFightSendCardResponse = true;
        return this;
      }
      public Builder clearFightSendCardResponse() {
        result.hasFightSendCardResponse = false;
        result.fightSendCardResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightSendCardResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightApplyExitGameResponse FightApplyExitGameResponse = 24;
      public boolean hasFightApplyExitGameResponse() {
        return result.hasFightApplyExitGameResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightApplyExitGameResponse getFightApplyExitGameResponse() {
        return result.getFightApplyExitGameResponse();
      }
      public Builder setFightApplyExitGameResponse(com.randioo.compare_collections_server.protocol.Fight.FightApplyExitGameResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightApplyExitGameResponse = true;
        result.fightApplyExitGameResponse_ = value;
        return this;
      }
      public Builder setFightApplyExitGameResponse(com.randioo.compare_collections_server.protocol.Fight.FightApplyExitGameResponse.Builder builderForValue) {
        result.hasFightApplyExitGameResponse = true;
        result.fightApplyExitGameResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightApplyExitGameResponse(com.randioo.compare_collections_server.protocol.Fight.FightApplyExitGameResponse value) {
        if (result.hasFightApplyExitGameResponse() &&
            result.fightApplyExitGameResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightApplyExitGameResponse.getDefaultInstance()) {
          result.fightApplyExitGameResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightApplyExitGameResponse.newBuilder(result.fightApplyExitGameResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightApplyExitGameResponse_ = value;
        }
        result.hasFightApplyExitGameResponse = true;
        return this;
      }
      public Builder clearFightApplyExitGameResponse() {
        result.hasFightApplyExitGameResponse = false;
        result.fightApplyExitGameResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightApplyExitGameResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightApplyExitGame SCFightApplyExitGame = 25;
      public boolean hasSCFightApplyExitGame() {
        return result.hasSCFightApplyExitGame();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitGame getSCFightApplyExitGame() {
        return result.getSCFightApplyExitGame();
      }
      public Builder setSCFightApplyExitGame(com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightApplyExitGame = true;
        result.sCFightApplyExitGame_ = value;
        return this;
      }
      public Builder setSCFightApplyExitGame(com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitGame.Builder builderForValue) {
        result.hasSCFightApplyExitGame = true;
        result.sCFightApplyExitGame_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightApplyExitGame(com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitGame value) {
        if (result.hasSCFightApplyExitGame() &&
            result.sCFightApplyExitGame_ != com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitGame.getDefaultInstance()) {
          result.sCFightApplyExitGame_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitGame.newBuilder(result.sCFightApplyExitGame_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightApplyExitGame_ = value;
        }
        result.hasSCFightApplyExitGame = true;
        return this;
      }
      public Builder clearSCFightApplyExitGame() {
        result.hasSCFightApplyExitGame = false;
        result.sCFightApplyExitGame_ = com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitGame.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightAgreeExitGameResponse FightAgreeExitGameResponse = 26;
      public boolean hasFightAgreeExitGameResponse() {
        return result.hasFightAgreeExitGameResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightAgreeExitGameResponse getFightAgreeExitGameResponse() {
        return result.getFightAgreeExitGameResponse();
      }
      public Builder setFightAgreeExitGameResponse(com.randioo.compare_collections_server.protocol.Fight.FightAgreeExitGameResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightAgreeExitGameResponse = true;
        result.fightAgreeExitGameResponse_ = value;
        return this;
      }
      public Builder setFightAgreeExitGameResponse(com.randioo.compare_collections_server.protocol.Fight.FightAgreeExitGameResponse.Builder builderForValue) {
        result.hasFightAgreeExitGameResponse = true;
        result.fightAgreeExitGameResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightAgreeExitGameResponse(com.randioo.compare_collections_server.protocol.Fight.FightAgreeExitGameResponse value) {
        if (result.hasFightAgreeExitGameResponse() &&
            result.fightAgreeExitGameResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightAgreeExitGameResponse.getDefaultInstance()) {
          result.fightAgreeExitGameResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightAgreeExitGameResponse.newBuilder(result.fightAgreeExitGameResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightAgreeExitGameResponse_ = value;
        }
        result.hasFightAgreeExitGameResponse = true;
        return this;
      }
      public Builder clearFightAgreeExitGameResponse() {
        result.hasFightAgreeExitGameResponse = false;
        result.fightAgreeExitGameResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightAgreeExitGameResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightNoticeAgreeExit SCFightNoticeAgreeExit = 27;
      public boolean hasSCFightNoticeAgreeExit() {
        return result.hasSCFightNoticeAgreeExit();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeAgreeExit getSCFightNoticeAgreeExit() {
        return result.getSCFightNoticeAgreeExit();
      }
      public Builder setSCFightNoticeAgreeExit(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeAgreeExit value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightNoticeAgreeExit = true;
        result.sCFightNoticeAgreeExit_ = value;
        return this;
      }
      public Builder setSCFightNoticeAgreeExit(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeAgreeExit.Builder builderForValue) {
        result.hasSCFightNoticeAgreeExit = true;
        result.sCFightNoticeAgreeExit_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightNoticeAgreeExit(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeAgreeExit value) {
        if (result.hasSCFightNoticeAgreeExit() &&
            result.sCFightNoticeAgreeExit_ != com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeAgreeExit.getDefaultInstance()) {
          result.sCFightNoticeAgreeExit_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeAgreeExit.newBuilder(result.sCFightNoticeAgreeExit_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightNoticeAgreeExit_ = value;
        }
        result.hasSCFightNoticeAgreeExit = true;
        return this;
      }
      public Builder clearSCFightNoticeAgreeExit() {
        result.hasSCFightNoticeAgreeExit = false;
        result.sCFightNoticeAgreeExit_ = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeAgreeExit.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightApplyExitResult SCFightApplyExitResult = 28;
      public boolean hasSCFightApplyExitResult() {
        return result.hasSCFightApplyExitResult();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitResult getSCFightApplyExitResult() {
        return result.getSCFightApplyExitResult();
      }
      public Builder setSCFightApplyExitResult(com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightApplyExitResult = true;
        result.sCFightApplyExitResult_ = value;
        return this;
      }
      public Builder setSCFightApplyExitResult(com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitResult.Builder builderForValue) {
        result.hasSCFightApplyExitResult = true;
        result.sCFightApplyExitResult_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightApplyExitResult(com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitResult value) {
        if (result.hasSCFightApplyExitResult() &&
            result.sCFightApplyExitResult_ != com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitResult.getDefaultInstance()) {
          result.sCFightApplyExitResult_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitResult.newBuilder(result.sCFightApplyExitResult_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightApplyExitResult_ = value;
        }
        result.hasSCFightApplyExitResult = true;
        return this;
      }
      public Builder clearSCFightApplyExitResult() {
        result.hasSCFightApplyExitResult = false;
        result.sCFightApplyExitResult_ = com.randioo.compare_collections_server.protocol.Fight.SCFightApplyExitResult.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightSendCard SCFightSendCard = 29;
      public boolean hasSCFightSendCard() {
        return result.hasSCFightSendCard();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightSendCard getSCFightSendCard() {
        return result.getSCFightSendCard();
      }
      public Builder setSCFightSendCard(com.randioo.compare_collections_server.protocol.Fight.SCFightSendCard value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightSendCard = true;
        result.sCFightSendCard_ = value;
        return this;
      }
      public Builder setSCFightSendCard(com.randioo.compare_collections_server.protocol.Fight.SCFightSendCard.Builder builderForValue) {
        result.hasSCFightSendCard = true;
        result.sCFightSendCard_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightSendCard(com.randioo.compare_collections_server.protocol.Fight.SCFightSendCard value) {
        if (result.hasSCFightSendCard() &&
            result.sCFightSendCard_ != com.randioo.compare_collections_server.protocol.Fight.SCFightSendCard.getDefaultInstance()) {
          result.sCFightSendCard_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightSendCard.newBuilder(result.sCFightSendCard_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightSendCard_ = value;
        }
        result.hasSCFightSendCard = true;
        return this;
      }
      public Builder clearSCFightSendCard() {
        result.hasSCFightSendCard = false;
        result.sCFightSendCard_ = com.randioo.compare_collections_server.protocol.Fight.SCFightSendCard.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightRoundOver SCFightRoundOver = 30;
      public boolean hasSCFightRoundOver() {
        return result.hasSCFightRoundOver();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOver getSCFightRoundOver() {
        return result.getSCFightRoundOver();
      }
      public Builder setSCFightRoundOver(com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOver value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightRoundOver = true;
        result.sCFightRoundOver_ = value;
        return this;
      }
      public Builder setSCFightRoundOver(com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOver.Builder builderForValue) {
        result.hasSCFightRoundOver = true;
        result.sCFightRoundOver_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightRoundOver(com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOver value) {
        if (result.hasSCFightRoundOver() &&
            result.sCFightRoundOver_ != com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOver.getDefaultInstance()) {
          result.sCFightRoundOver_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOver.newBuilder(result.sCFightRoundOver_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightRoundOver_ = value;
        }
        result.hasSCFightRoundOver = true;
        return this;
      }
      public Builder clearSCFightRoundOver() {
        result.hasSCFightRoundOver = false;
        result.sCFightRoundOver_ = com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOver.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightGameOver SCFightGameOver = 31;
      public boolean hasSCFightGameOver() {
        return result.hasSCFightGameOver();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightGameOver getSCFightGameOver() {
        return result.getSCFightGameOver();
      }
      public Builder setSCFightGameOver(com.randioo.compare_collections_server.protocol.Fight.SCFightGameOver value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightGameOver = true;
        result.sCFightGameOver_ = value;
        return this;
      }
      public Builder setSCFightGameOver(com.randioo.compare_collections_server.protocol.Fight.SCFightGameOver.Builder builderForValue) {
        result.hasSCFightGameOver = true;
        result.sCFightGameOver_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightGameOver(com.randioo.compare_collections_server.protocol.Fight.SCFightGameOver value) {
        if (result.hasSCFightGameOver() &&
            result.sCFightGameOver_ != com.randioo.compare_collections_server.protocol.Fight.SCFightGameOver.getDefaultInstance()) {
          result.sCFightGameOver_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightGameOver.newBuilder(result.sCFightGameOver_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightGameOver_ = value;
        }
        result.hasSCFightGameOver = true;
        return this;
      }
      public Builder clearSCFightGameOver() {
        result.hasSCFightGameOver = false;
        result.sCFightGameOver_ = com.randioo.compare_collections_server.protocol.Fight.SCFightGameOver.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightGetlastRoundResponse FightGetlastRoundResponse = 32;
      public boolean hasFightGetlastRoundResponse() {
        return result.hasFightGetlastRoundResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightGetlastRoundResponse getFightGetlastRoundResponse() {
        return result.getFightGetlastRoundResponse();
      }
      public Builder setFightGetlastRoundResponse(com.randioo.compare_collections_server.protocol.Fight.FightGetlastRoundResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightGetlastRoundResponse = true;
        result.fightGetlastRoundResponse_ = value;
        return this;
      }
      public Builder setFightGetlastRoundResponse(com.randioo.compare_collections_server.protocol.Fight.FightGetlastRoundResponse.Builder builderForValue) {
        result.hasFightGetlastRoundResponse = true;
        result.fightGetlastRoundResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightGetlastRoundResponse(com.randioo.compare_collections_server.protocol.Fight.FightGetlastRoundResponse value) {
        if (result.hasFightGetlastRoundResponse() &&
            result.fightGetlastRoundResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightGetlastRoundResponse.getDefaultInstance()) {
          result.fightGetlastRoundResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightGetlastRoundResponse.newBuilder(result.fightGetlastRoundResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightGetlastRoundResponse_ = value;
        }
        result.hasFightGetlastRoundResponse = true;
        return this;
      }
      public Builder clearFightGetlastRoundResponse() {
        result.hasFightGetlastRoundResponse = false;
        result.fightGetlastRoundResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightGetlastRoundResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightTouchCard SCFightTouchCard = 33;
      public boolean hasSCFightTouchCard() {
        return result.hasSCFightTouchCard();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightTouchCard getSCFightTouchCard() {
        return result.getSCFightTouchCard();
      }
      public Builder setSCFightTouchCard(com.randioo.compare_collections_server.protocol.Fight.SCFightTouchCard value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightTouchCard = true;
        result.sCFightTouchCard_ = value;
        return this;
      }
      public Builder setSCFightTouchCard(com.randioo.compare_collections_server.protocol.Fight.SCFightTouchCard.Builder builderForValue) {
        result.hasSCFightTouchCard = true;
        result.sCFightTouchCard_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightTouchCard(com.randioo.compare_collections_server.protocol.Fight.SCFightTouchCard value) {
        if (result.hasSCFightTouchCard() &&
            result.sCFightTouchCard_ != com.randioo.compare_collections_server.protocol.Fight.SCFightTouchCard.getDefaultInstance()) {
          result.sCFightTouchCard_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightTouchCard.newBuilder(result.sCFightTouchCard_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightTouchCard_ = value;
        }
        result.hasSCFightTouchCard = true;
        return this;
      }
      public Builder clearSCFightTouchCard() {
        result.hasSCFightTouchCard = false;
        result.sCFightTouchCard_ = com.randioo.compare_collections_server.protocol.Fight.SCFightTouchCard.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightGuoResponse FightGuoResponse = 34;
      public boolean hasFightGuoResponse() {
        return result.hasFightGuoResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightGuoResponse getFightGuoResponse() {
        return result.getFightGuoResponse();
      }
      public Builder setFightGuoResponse(com.randioo.compare_collections_server.protocol.Fight.FightGuoResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightGuoResponse = true;
        result.fightGuoResponse_ = value;
        return this;
      }
      public Builder setFightGuoResponse(com.randioo.compare_collections_server.protocol.Fight.FightGuoResponse.Builder builderForValue) {
        result.hasFightGuoResponse = true;
        result.fightGuoResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightGuoResponse(com.randioo.compare_collections_server.protocol.Fight.FightGuoResponse value) {
        if (result.hasFightGuoResponse() &&
            result.fightGuoResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightGuoResponse.getDefaultInstance()) {
          result.fightGuoResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightGuoResponse.newBuilder(result.fightGuoResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightGuoResponse_ = value;
        }
        result.hasFightGuoResponse = true;
        return this;
      }
      public Builder clearFightGuoResponse() {
        result.hasFightGuoResponse = false;
        result.fightGuoResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightGuoResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightGuo SCFightGuo = 35;
      public boolean hasSCFightGuo() {
        return result.hasSCFightGuo();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightGuo getSCFightGuo() {
        return result.getSCFightGuo();
      }
      public Builder setSCFightGuo(com.randioo.compare_collections_server.protocol.Fight.SCFightGuo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightGuo = true;
        result.sCFightGuo_ = value;
        return this;
      }
      public Builder setSCFightGuo(com.randioo.compare_collections_server.protocol.Fight.SCFightGuo.Builder builderForValue) {
        result.hasSCFightGuo = true;
        result.sCFightGuo_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightGuo(com.randioo.compare_collections_server.protocol.Fight.SCFightGuo value) {
        if (result.hasSCFightGuo() &&
            result.sCFightGuo_ != com.randioo.compare_collections_server.protocol.Fight.SCFightGuo.getDefaultInstance()) {
          result.sCFightGuo_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightGuo.newBuilder(result.sCFightGuo_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightGuo_ = value;
        }
        result.hasSCFightGuo = true;
        return this;
      }
      public Builder clearSCFightGuo() {
        result.hasSCFightGuo = false;
        result.sCFightGuo_ = com.randioo.compare_collections_server.protocol.Fight.SCFightGuo.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightCountdown SCFightCountdown = 36;
      public boolean hasSCFightCountdown() {
        return result.hasSCFightCountdown();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightCountdown getSCFightCountdown() {
        return result.getSCFightCountdown();
      }
      public Builder setSCFightCountdown(com.randioo.compare_collections_server.protocol.Fight.SCFightCountdown value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightCountdown = true;
        result.sCFightCountdown_ = value;
        return this;
      }
      public Builder setSCFightCountdown(com.randioo.compare_collections_server.protocol.Fight.SCFightCountdown.Builder builderForValue) {
        result.hasSCFightCountdown = true;
        result.sCFightCountdown_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightCountdown(com.randioo.compare_collections_server.protocol.Fight.SCFightCountdown value) {
        if (result.hasSCFightCountdown() &&
            result.sCFightCountdown_ != com.randioo.compare_collections_server.protocol.Fight.SCFightCountdown.getDefaultInstance()) {
          result.sCFightCountdown_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightCountdown.newBuilder(result.sCFightCountdown_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightCountdown_ = value;
        }
        result.hasSCFightCountdown = true;
        return this;
      }
      public Builder clearSCFightCountdown() {
        result.hasSCFightCountdown = false;
        result.sCFightCountdown_ = com.randioo.compare_collections_server.protocol.Fight.SCFightCountdown.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightPointSeat SCFightPointSeat = 37;
      public boolean hasSCFightPointSeat() {
        return result.hasSCFightPointSeat();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightPointSeat getSCFightPointSeat() {
        return result.getSCFightPointSeat();
      }
      public Builder setSCFightPointSeat(com.randioo.compare_collections_server.protocol.Fight.SCFightPointSeat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightPointSeat = true;
        result.sCFightPointSeat_ = value;
        return this;
      }
      public Builder setSCFightPointSeat(com.randioo.compare_collections_server.protocol.Fight.SCFightPointSeat.Builder builderForValue) {
        result.hasSCFightPointSeat = true;
        result.sCFightPointSeat_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightPointSeat(com.randioo.compare_collections_server.protocol.Fight.SCFightPointSeat value) {
        if (result.hasSCFightPointSeat() &&
            result.sCFightPointSeat_ != com.randioo.compare_collections_server.protocol.Fight.SCFightPointSeat.getDefaultInstance()) {
          result.sCFightPointSeat_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightPointSeat.newBuilder(result.sCFightPointSeat_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightPointSeat_ = value;
        }
        result.hasSCFightPointSeat = true;
        return this;
      }
      public Builder clearSCFightPointSeat() {
        result.hasSCFightPointSeat = false;
        result.sCFightPointSeat_ = com.randioo.compare_collections_server.protocol.Fight.SCFightPointSeat.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightDisconnect SCFightDisconnect = 38;
      public boolean hasSCFightDisconnect() {
        return result.hasSCFightDisconnect();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightDisconnect getSCFightDisconnect() {
        return result.getSCFightDisconnect();
      }
      public Builder setSCFightDisconnect(com.randioo.compare_collections_server.protocol.Fight.SCFightDisconnect value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightDisconnect = true;
        result.sCFightDisconnect_ = value;
        return this;
      }
      public Builder setSCFightDisconnect(com.randioo.compare_collections_server.protocol.Fight.SCFightDisconnect.Builder builderForValue) {
        result.hasSCFightDisconnect = true;
        result.sCFightDisconnect_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightDisconnect(com.randioo.compare_collections_server.protocol.Fight.SCFightDisconnect value) {
        if (result.hasSCFightDisconnect() &&
            result.sCFightDisconnect_ != com.randioo.compare_collections_server.protocol.Fight.SCFightDisconnect.getDefaultInstance()) {
          result.sCFightDisconnect_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightDisconnect.newBuilder(result.sCFightDisconnect_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightDisconnect_ = value;
        }
        result.hasSCFightDisconnect = true;
        return this;
      }
      public Builder clearSCFightDisconnect() {
        result.hasSCFightDisconnect = false;
        result.sCFightDisconnect_ = com.randioo.compare_collections_server.protocol.Fight.SCFightDisconnect.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightPublicScore SCFightPublicScore = 39;
      public boolean hasSCFightPublicScore() {
        return result.hasSCFightPublicScore();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightPublicScore getSCFightPublicScore() {
        return result.getSCFightPublicScore();
      }
      public Builder setSCFightPublicScore(com.randioo.compare_collections_server.protocol.Fight.SCFightPublicScore value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightPublicScore = true;
        result.sCFightPublicScore_ = value;
        return this;
      }
      public Builder setSCFightPublicScore(com.randioo.compare_collections_server.protocol.Fight.SCFightPublicScore.Builder builderForValue) {
        result.hasSCFightPublicScore = true;
        result.sCFightPublicScore_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightPublicScore(com.randioo.compare_collections_server.protocol.Fight.SCFightPublicScore value) {
        if (result.hasSCFightPublicScore() &&
            result.sCFightPublicScore_ != com.randioo.compare_collections_server.protocol.Fight.SCFightPublicScore.getDefaultInstance()) {
          result.sCFightPublicScore_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightPublicScore.newBuilder(result.sCFightPublicScore_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightPublicScore_ = value;
        }
        result.hasSCFightPublicScore = true;
        return this;
      }
      public Builder clearSCFightPublicScore() {
        result.hasSCFightPublicScore = false;
        result.sCFightPublicScore_ = com.randioo.compare_collections_server.protocol.Fight.SCFightPublicScore.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightScore SCFightScore = 40;
      public boolean hasSCFightScore() {
        return result.hasSCFightScore();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightScore getSCFightScore() {
        return result.getSCFightScore();
      }
      public Builder setSCFightScore(com.randioo.compare_collections_server.protocol.Fight.SCFightScore value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightScore = true;
        result.sCFightScore_ = value;
        return this;
      }
      public Builder setSCFightScore(com.randioo.compare_collections_server.protocol.Fight.SCFightScore.Builder builderForValue) {
        result.hasSCFightScore = true;
        result.sCFightScore_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightScore(com.randioo.compare_collections_server.protocol.Fight.SCFightScore value) {
        if (result.hasSCFightScore() &&
            result.sCFightScore_ != com.randioo.compare_collections_server.protocol.Fight.SCFightScore.getDefaultInstance()) {
          result.sCFightScore_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightScore.newBuilder(result.sCFightScore_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightScore_ = value;
        }
        result.hasSCFightScore = true;
        return this;
      }
      public Builder clearSCFightScore() {
        result.hasSCFightScore = false;
        result.sCFightScore_ = com.randioo.compare_collections_server.protocol.Fight.SCFightScore.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightQueryGameConfigResponse FightQueryGameConfigResponse = 41;
      public boolean hasFightQueryGameConfigResponse() {
        return result.hasFightQueryGameConfigResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightQueryGameConfigResponse getFightQueryGameConfigResponse() {
        return result.getFightQueryGameConfigResponse();
      }
      public Builder setFightQueryGameConfigResponse(com.randioo.compare_collections_server.protocol.Fight.FightQueryGameConfigResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightQueryGameConfigResponse = true;
        result.fightQueryGameConfigResponse_ = value;
        return this;
      }
      public Builder setFightQueryGameConfigResponse(com.randioo.compare_collections_server.protocol.Fight.FightQueryGameConfigResponse.Builder builderForValue) {
        result.hasFightQueryGameConfigResponse = true;
        result.fightQueryGameConfigResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightQueryGameConfigResponse(com.randioo.compare_collections_server.protocol.Fight.FightQueryGameConfigResponse value) {
        if (result.hasFightQueryGameConfigResponse() &&
            result.fightQueryGameConfigResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightQueryGameConfigResponse.getDefaultInstance()) {
          result.fightQueryGameConfigResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightQueryGameConfigResponse.newBuilder(result.fightQueryGameConfigResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightQueryGameConfigResponse_ = value;
        }
        result.hasFightQueryGameConfigResponse = true;
        return this;
      }
      public Builder clearFightQueryGameConfigResponse() {
        result.hasFightQueryGameConfigResponse = false;
        result.fightQueryGameConfigResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightQueryGameConfigResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightClientDispatchResponse FightClientDispatchResponse = 42;
      public boolean hasFightClientDispatchResponse() {
        return result.hasFightClientDispatchResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightClientDispatchResponse getFightClientDispatchResponse() {
        return result.getFightClientDispatchResponse();
      }
      public Builder setFightClientDispatchResponse(com.randioo.compare_collections_server.protocol.Fight.FightClientDispatchResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightClientDispatchResponse = true;
        result.fightClientDispatchResponse_ = value;
        return this;
      }
      public Builder setFightClientDispatchResponse(com.randioo.compare_collections_server.protocol.Fight.FightClientDispatchResponse.Builder builderForValue) {
        result.hasFightClientDispatchResponse = true;
        result.fightClientDispatchResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightClientDispatchResponse(com.randioo.compare_collections_server.protocol.Fight.FightClientDispatchResponse value) {
        if (result.hasFightClientDispatchResponse() &&
            result.fightClientDispatchResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightClientDispatchResponse.getDefaultInstance()) {
          result.fightClientDispatchResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightClientDispatchResponse.newBuilder(result.fightClientDispatchResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightClientDispatchResponse_ = value;
        }
        result.hasFightClientDispatchResponse = true;
        return this;
      }
      public Builder clearFightClientDispatchResponse() {
        result.hasFightClientDispatchResponse = false;
        result.fightClientDispatchResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightClientDispatchResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightClientTouchCardResponse FightClientTouchCardResponse = 43;
      public boolean hasFightClientTouchCardResponse() {
        return result.hasFightClientTouchCardResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightClientTouchCardResponse getFightClientTouchCardResponse() {
        return result.getFightClientTouchCardResponse();
      }
      public Builder setFightClientTouchCardResponse(com.randioo.compare_collections_server.protocol.Fight.FightClientTouchCardResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightClientTouchCardResponse = true;
        result.fightClientTouchCardResponse_ = value;
        return this;
      }
      public Builder setFightClientTouchCardResponse(com.randioo.compare_collections_server.protocol.Fight.FightClientTouchCardResponse.Builder builderForValue) {
        result.hasFightClientTouchCardResponse = true;
        result.fightClientTouchCardResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightClientTouchCardResponse(com.randioo.compare_collections_server.protocol.Fight.FightClientTouchCardResponse value) {
        if (result.hasFightClientTouchCardResponse() &&
            result.fightClientTouchCardResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightClientTouchCardResponse.getDefaultInstance()) {
          result.fightClientTouchCardResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightClientTouchCardResponse.newBuilder(result.fightClientTouchCardResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightClientTouchCardResponse_ = value;
        }
        result.hasFightClientTouchCardResponse = true;
        return this;
      }
      public Builder clearFightClientTouchCardResponse() {
        result.hasFightClientTouchCardResponse = false;
        result.fightClientTouchCardResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightClientTouchCardResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightRoomDismiss SCFightRoomDismiss = 44;
      public boolean hasSCFightRoomDismiss() {
        return result.hasSCFightRoomDismiss();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightRoomDismiss getSCFightRoomDismiss() {
        return result.getSCFightRoomDismiss();
      }
      public Builder setSCFightRoomDismiss(com.randioo.compare_collections_server.protocol.Fight.SCFightRoomDismiss value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightRoomDismiss = true;
        result.sCFightRoomDismiss_ = value;
        return this;
      }
      public Builder setSCFightRoomDismiss(com.randioo.compare_collections_server.protocol.Fight.SCFightRoomDismiss.Builder builderForValue) {
        result.hasSCFightRoomDismiss = true;
        result.sCFightRoomDismiss_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightRoomDismiss(com.randioo.compare_collections_server.protocol.Fight.SCFightRoomDismiss value) {
        if (result.hasSCFightRoomDismiss() &&
            result.sCFightRoomDismiss_ != com.randioo.compare_collections_server.protocol.Fight.SCFightRoomDismiss.getDefaultInstance()) {
          result.sCFightRoomDismiss_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightRoomDismiss.newBuilder(result.sCFightRoomDismiss_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightRoomDismiss_ = value;
        }
        result.hasSCFightRoomDismiss = true;
        return this;
      }
      public Builder clearSCFightRoomDismiss() {
        result.hasSCFightRoomDismiss = false;
        result.sCFightRoomDismiss_ = com.randioo.compare_collections_server.protocol.Fight.SCFightRoomDismiss.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightConfirmGameOverResponse FightConfirmGameOverResponse = 45;
      public boolean hasFightConfirmGameOverResponse() {
        return result.hasFightConfirmGameOverResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightConfirmGameOverResponse getFightConfirmGameOverResponse() {
        return result.getFightConfirmGameOverResponse();
      }
      public Builder setFightConfirmGameOverResponse(com.randioo.compare_collections_server.protocol.Fight.FightConfirmGameOverResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightConfirmGameOverResponse = true;
        result.fightConfirmGameOverResponse_ = value;
        return this;
      }
      public Builder setFightConfirmGameOverResponse(com.randioo.compare_collections_server.protocol.Fight.FightConfirmGameOverResponse.Builder builderForValue) {
        result.hasFightConfirmGameOverResponse = true;
        result.fightConfirmGameOverResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightConfirmGameOverResponse(com.randioo.compare_collections_server.protocol.Fight.FightConfirmGameOverResponse value) {
        if (result.hasFightConfirmGameOverResponse() &&
            result.fightConfirmGameOverResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightConfirmGameOverResponse.getDefaultInstance()) {
          result.fightConfirmGameOverResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightConfirmGameOverResponse.newBuilder(result.fightConfirmGameOverResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightConfirmGameOverResponse_ = value;
        }
        result.hasFightConfirmGameOverResponse = true;
        return this;
      }
      public Builder clearFightConfirmGameOverResponse() {
        result.hasFightConfirmGameOverResponse = false;
        result.fightConfirmGameOverResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightConfirmGameOverResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightGetRoomDataResponse FightGetRoomDataResponse = 46;
      public boolean hasFightGetRoomDataResponse() {
        return result.hasFightGetRoomDataResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightGetRoomDataResponse getFightGetRoomDataResponse() {
        return result.getFightGetRoomDataResponse();
      }
      public Builder setFightGetRoomDataResponse(com.randioo.compare_collections_server.protocol.Fight.FightGetRoomDataResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightGetRoomDataResponse = true;
        result.fightGetRoomDataResponse_ = value;
        return this;
      }
      public Builder setFightGetRoomDataResponse(com.randioo.compare_collections_server.protocol.Fight.FightGetRoomDataResponse.Builder builderForValue) {
        result.hasFightGetRoomDataResponse = true;
        result.fightGetRoomDataResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightGetRoomDataResponse(com.randioo.compare_collections_server.protocol.Fight.FightGetRoomDataResponse value) {
        if (result.hasFightGetRoomDataResponse() &&
            result.fightGetRoomDataResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightGetRoomDataResponse.getDefaultInstance()) {
          result.fightGetRoomDataResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightGetRoomDataResponse.newBuilder(result.fightGetRoomDataResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightGetRoomDataResponse_ = value;
        }
        result.hasFightGetRoomDataResponse = true;
        return this;
      }
      public Builder clearFightGetRoomDataResponse() {
        result.hasFightGetRoomDataResponse = false;
        result.fightGetRoomDataResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightGetRoomDataResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SettingsResponse SettingsResponse = 47;
      public boolean hasSettingsResponse() {
        return result.hasSettingsResponse();
      }
      public com.randioo.compare_collections_server.protocol.Settings.SettingsResponse getSettingsResponse() {
        return result.getSettingsResponse();
      }
      public Builder setSettingsResponse(com.randioo.compare_collections_server.protocol.Settings.SettingsResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSettingsResponse = true;
        result.settingsResponse_ = value;
        return this;
      }
      public Builder setSettingsResponse(com.randioo.compare_collections_server.protocol.Settings.SettingsResponse.Builder builderForValue) {
        result.hasSettingsResponse = true;
        result.settingsResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeSettingsResponse(com.randioo.compare_collections_server.protocol.Settings.SettingsResponse value) {
        if (result.hasSettingsResponse() &&
            result.settingsResponse_ != com.randioo.compare_collections_server.protocol.Settings.SettingsResponse.getDefaultInstance()) {
          result.settingsResponse_ =
            com.randioo.compare_collections_server.protocol.Settings.SettingsResponse.newBuilder(result.settingsResponse_).mergeFrom(value).buildPartial();
        } else {
          result.settingsResponse_ = value;
        }
        result.hasSettingsResponse = true;
        return this;
      }
      public Builder clearSettingsResponse() {
        result.hasSettingsResponse = false;
        result.settingsResponse_ = com.randioo.compare_collections_server.protocol.Settings.SettingsResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SettingsShowResponse SettingsShowResponse = 48;
      public boolean hasSettingsShowResponse() {
        return result.hasSettingsShowResponse();
      }
      public com.randioo.compare_collections_server.protocol.Settings.SettingsShowResponse getSettingsShowResponse() {
        return result.getSettingsShowResponse();
      }
      public Builder setSettingsShowResponse(com.randioo.compare_collections_server.protocol.Settings.SettingsShowResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSettingsShowResponse = true;
        result.settingsShowResponse_ = value;
        return this;
      }
      public Builder setSettingsShowResponse(com.randioo.compare_collections_server.protocol.Settings.SettingsShowResponse.Builder builderForValue) {
        result.hasSettingsShowResponse = true;
        result.settingsShowResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeSettingsShowResponse(com.randioo.compare_collections_server.protocol.Settings.SettingsShowResponse value) {
        if (result.hasSettingsShowResponse() &&
            result.settingsShowResponse_ != com.randioo.compare_collections_server.protocol.Settings.SettingsShowResponse.getDefaultInstance()) {
          result.settingsShowResponse_ =
            com.randioo.compare_collections_server.protocol.Settings.SettingsShowResponse.newBuilder(result.settingsShowResponse_).mergeFrom(value).buildPartial();
        } else {
          result.settingsShowResponse_ = value;
        }
        result.hasSettingsShowResponse = true;
        return this;
      }
      public Builder clearSettingsShowResponse() {
        result.hasSettingsShowResponse = false;
        result.settingsShowResponse_ = com.randioo.compare_collections_server.protocol.Settings.SettingsShowResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.RaceJoinRaceResponse RaceJoinRaceResponse = 49;
      public boolean hasRaceJoinRaceResponse() {
        return result.hasRaceJoinRaceResponse();
      }
      public com.randioo.compare_collections_server.protocol.Race.RaceJoinRaceResponse getRaceJoinRaceResponse() {
        return result.getRaceJoinRaceResponse();
      }
      public Builder setRaceJoinRaceResponse(com.randioo.compare_collections_server.protocol.Race.RaceJoinRaceResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRaceJoinRaceResponse = true;
        result.raceJoinRaceResponse_ = value;
        return this;
      }
      public Builder setRaceJoinRaceResponse(com.randioo.compare_collections_server.protocol.Race.RaceJoinRaceResponse.Builder builderForValue) {
        result.hasRaceJoinRaceResponse = true;
        result.raceJoinRaceResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeRaceJoinRaceResponse(com.randioo.compare_collections_server.protocol.Race.RaceJoinRaceResponse value) {
        if (result.hasRaceJoinRaceResponse() &&
            result.raceJoinRaceResponse_ != com.randioo.compare_collections_server.protocol.Race.RaceJoinRaceResponse.getDefaultInstance()) {
          result.raceJoinRaceResponse_ =
            com.randioo.compare_collections_server.protocol.Race.RaceJoinRaceResponse.newBuilder(result.raceJoinRaceResponse_).mergeFrom(value).buildPartial();
        } else {
          result.raceJoinRaceResponse_ = value;
        }
        result.hasRaceJoinRaceResponse = true;
        return this;
      }
      public Builder clearRaceJoinRaceResponse() {
        result.hasRaceJoinRaceResponse = false;
        result.raceJoinRaceResponse_ = com.randioo.compare_collections_server.protocol.Race.RaceJoinRaceResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCRaceJoinRace SCRaceJoinRace = 50;
      public boolean hasSCRaceJoinRace() {
        return result.hasSCRaceJoinRace();
      }
      public com.randioo.compare_collections_server.protocol.Race.SCRaceJoinRace getSCRaceJoinRace() {
        return result.getSCRaceJoinRace();
      }
      public Builder setSCRaceJoinRace(com.randioo.compare_collections_server.protocol.Race.SCRaceJoinRace value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCRaceJoinRace = true;
        result.sCRaceJoinRace_ = value;
        return this;
      }
      public Builder setSCRaceJoinRace(com.randioo.compare_collections_server.protocol.Race.SCRaceJoinRace.Builder builderForValue) {
        result.hasSCRaceJoinRace = true;
        result.sCRaceJoinRace_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCRaceJoinRace(com.randioo.compare_collections_server.protocol.Race.SCRaceJoinRace value) {
        if (result.hasSCRaceJoinRace() &&
            result.sCRaceJoinRace_ != com.randioo.compare_collections_server.protocol.Race.SCRaceJoinRace.getDefaultInstance()) {
          result.sCRaceJoinRace_ =
            com.randioo.compare_collections_server.protocol.Race.SCRaceJoinRace.newBuilder(result.sCRaceJoinRace_).mergeFrom(value).buildPartial();
        } else {
          result.sCRaceJoinRace_ = value;
        }
        result.hasSCRaceJoinRace = true;
        return this;
      }
      public Builder clearSCRaceJoinRace() {
        result.hasSCRaceJoinRace = false;
        result.sCRaceJoinRace_ = com.randioo.compare_collections_server.protocol.Race.SCRaceJoinRace.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.RaceShowQueueResponse RaceShowQueueResponse = 51;
      public boolean hasRaceShowQueueResponse() {
        return result.hasRaceShowQueueResponse();
      }
      public com.randioo.compare_collections_server.protocol.Race.RaceShowQueueResponse getRaceShowQueueResponse() {
        return result.getRaceShowQueueResponse();
      }
      public Builder setRaceShowQueueResponse(com.randioo.compare_collections_server.protocol.Race.RaceShowQueueResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRaceShowQueueResponse = true;
        result.raceShowQueueResponse_ = value;
        return this;
      }
      public Builder setRaceShowQueueResponse(com.randioo.compare_collections_server.protocol.Race.RaceShowQueueResponse.Builder builderForValue) {
        result.hasRaceShowQueueResponse = true;
        result.raceShowQueueResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeRaceShowQueueResponse(com.randioo.compare_collections_server.protocol.Race.RaceShowQueueResponse value) {
        if (result.hasRaceShowQueueResponse() &&
            result.raceShowQueueResponse_ != com.randioo.compare_collections_server.protocol.Race.RaceShowQueueResponse.getDefaultInstance()) {
          result.raceShowQueueResponse_ =
            com.randioo.compare_collections_server.protocol.Race.RaceShowQueueResponse.newBuilder(result.raceShowQueueResponse_).mergeFrom(value).buildPartial();
        } else {
          result.raceShowQueueResponse_ = value;
        }
        result.hasRaceShowQueueResponse = true;
        return this;
      }
      public Builder clearRaceShowQueueResponse() {
        result.hasRaceShowQueueResponse = false;
        result.raceShowQueueResponse_ = com.randioo.compare_collections_server.protocol.Race.RaceShowQueueResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCRaceQueueChange SCRaceQueueChange = 52;
      public boolean hasSCRaceQueueChange() {
        return result.hasSCRaceQueueChange();
      }
      public com.randioo.compare_collections_server.protocol.Race.SCRaceQueueChange getSCRaceQueueChange() {
        return result.getSCRaceQueueChange();
      }
      public Builder setSCRaceQueueChange(com.randioo.compare_collections_server.protocol.Race.SCRaceQueueChange value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCRaceQueueChange = true;
        result.sCRaceQueueChange_ = value;
        return this;
      }
      public Builder setSCRaceQueueChange(com.randioo.compare_collections_server.protocol.Race.SCRaceQueueChange.Builder builderForValue) {
        result.hasSCRaceQueueChange = true;
        result.sCRaceQueueChange_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCRaceQueueChange(com.randioo.compare_collections_server.protocol.Race.SCRaceQueueChange value) {
        if (result.hasSCRaceQueueChange() &&
            result.sCRaceQueueChange_ != com.randioo.compare_collections_server.protocol.Race.SCRaceQueueChange.getDefaultInstance()) {
          result.sCRaceQueueChange_ =
            com.randioo.compare_collections_server.protocol.Race.SCRaceQueueChange.newBuilder(result.sCRaceQueueChange_).mergeFrom(value).buildPartial();
        } else {
          result.sCRaceQueueChange_ = value;
        }
        result.hasSCRaceQueueChange = true;
        return this;
      }
      public Builder clearSCRaceQueueChange() {
        result.hasSCRaceQueueChange = false;
        result.sCRaceQueueChange_ = com.randioo.compare_collections_server.protocol.Race.SCRaceQueueChange.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.MatchCheckRoomResponse MatchCheckRoomResponse = 53;
      public boolean hasMatchCheckRoomResponse() {
        return result.hasMatchCheckRoomResponse();
      }
      public com.randioo.compare_collections_server.protocol.Match.MatchCheckRoomResponse getMatchCheckRoomResponse() {
        return result.getMatchCheckRoomResponse();
      }
      public Builder setMatchCheckRoomResponse(com.randioo.compare_collections_server.protocol.Match.MatchCheckRoomResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMatchCheckRoomResponse = true;
        result.matchCheckRoomResponse_ = value;
        return this;
      }
      public Builder setMatchCheckRoomResponse(com.randioo.compare_collections_server.protocol.Match.MatchCheckRoomResponse.Builder builderForValue) {
        result.hasMatchCheckRoomResponse = true;
        result.matchCheckRoomResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMatchCheckRoomResponse(com.randioo.compare_collections_server.protocol.Match.MatchCheckRoomResponse value) {
        if (result.hasMatchCheckRoomResponse() &&
            result.matchCheckRoomResponse_ != com.randioo.compare_collections_server.protocol.Match.MatchCheckRoomResponse.getDefaultInstance()) {
          result.matchCheckRoomResponse_ =
            com.randioo.compare_collections_server.protocol.Match.MatchCheckRoomResponse.newBuilder(result.matchCheckRoomResponse_).mergeFrom(value).buildPartial();
        } else {
          result.matchCheckRoomResponse_ = value;
        }
        result.hasMatchCheckRoomResponse = true;
        return this;
      }
      public Builder clearMatchCheckRoomResponse() {
        result.hasMatchCheckRoomResponse = false;
        result.matchCheckRoomResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchCheckRoomResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightNoticeBet SCFightNoticeBet = 54;
      public boolean hasSCFightNoticeBet() {
        return result.hasSCFightNoticeBet();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBet getSCFightNoticeBet() {
        return result.getSCFightNoticeBet();
      }
      public Builder setSCFightNoticeBet(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBet value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightNoticeBet = true;
        result.sCFightNoticeBet_ = value;
        return this;
      }
      public Builder setSCFightNoticeBet(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBet.Builder builderForValue) {
        result.hasSCFightNoticeBet = true;
        result.sCFightNoticeBet_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightNoticeBet(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBet value) {
        if (result.hasSCFightNoticeBet() &&
            result.sCFightNoticeBet_ != com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBet.getDefaultInstance()) {
          result.sCFightNoticeBet_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBet.newBuilder(result.sCFightNoticeBet_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightNoticeBet_ = value;
        }
        result.hasSCFightNoticeBet = true;
        return this;
      }
      public Builder clearSCFightNoticeBet() {
        result.hasSCFightNoticeBet = false;
        result.sCFightNoticeBet_ = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBet.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightBetResponse FightBetResponse = 55;
      public boolean hasFightBetResponse() {
        return result.hasFightBetResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightBetResponse getFightBetResponse() {
        return result.getFightBetResponse();
      }
      public Builder setFightBetResponse(com.randioo.compare_collections_server.protocol.Fight.FightBetResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightBetResponse = true;
        result.fightBetResponse_ = value;
        return this;
      }
      public Builder setFightBetResponse(com.randioo.compare_collections_server.protocol.Fight.FightBetResponse.Builder builderForValue) {
        result.hasFightBetResponse = true;
        result.fightBetResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightBetResponse(com.randioo.compare_collections_server.protocol.Fight.FightBetResponse value) {
        if (result.hasFightBetResponse() &&
            result.fightBetResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightBetResponse.getDefaultInstance()) {
          result.fightBetResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightBetResponse.newBuilder(result.fightBetResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightBetResponse_ = value;
        }
        result.hasFightBetResponse = true;
        return this;
      }
      public Builder clearFightBetResponse() {
        result.hasFightBetResponse = false;
        result.fightBetResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightBetResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightBetScore SCFightBetScore = 56;
      public boolean hasSCFightBetScore() {
        return result.hasSCFightBetScore();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightBetScore getSCFightBetScore() {
        return result.getSCFightBetScore();
      }
      public Builder setSCFightBetScore(com.randioo.compare_collections_server.protocol.Fight.SCFightBetScore value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightBetScore = true;
        result.sCFightBetScore_ = value;
        return this;
      }
      public Builder setSCFightBetScore(com.randioo.compare_collections_server.protocol.Fight.SCFightBetScore.Builder builderForValue) {
        result.hasSCFightBetScore = true;
        result.sCFightBetScore_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightBetScore(com.randioo.compare_collections_server.protocol.Fight.SCFightBetScore value) {
        if (result.hasSCFightBetScore() &&
            result.sCFightBetScore_ != com.randioo.compare_collections_server.protocol.Fight.SCFightBetScore.getDefaultInstance()) {
          result.sCFightBetScore_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightBetScore.newBuilder(result.sCFightBetScore_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightBetScore_ = value;
        }
        result.hasSCFightBetScore = true;
        return this;
      }
      public Builder clearSCFightBetScore() {
        result.hasSCFightBetScore = false;
        result.sCFightBetScore_ = com.randioo.compare_collections_server.protocol.Fight.SCFightBetScore.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightDispatch SCFightDispatch = 57;
      public boolean hasSCFightDispatch() {
        return result.hasSCFightDispatch();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightDispatch getSCFightDispatch() {
        return result.getSCFightDispatch();
      }
      public Builder setSCFightDispatch(com.randioo.compare_collections_server.protocol.Fight.SCFightDispatch value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightDispatch = true;
        result.sCFightDispatch_ = value;
        return this;
      }
      public Builder setSCFightDispatch(com.randioo.compare_collections_server.protocol.Fight.SCFightDispatch.Builder builderForValue) {
        result.hasSCFightDispatch = true;
        result.sCFightDispatch_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightDispatch(com.randioo.compare_collections_server.protocol.Fight.SCFightDispatch value) {
        if (result.hasSCFightDispatch() &&
            result.sCFightDispatch_ != com.randioo.compare_collections_server.protocol.Fight.SCFightDispatch.getDefaultInstance()) {
          result.sCFightDispatch_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightDispatch.newBuilder(result.sCFightDispatch_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightDispatch_ = value;
        }
        result.hasSCFightDispatch = true;
        return this;
      }
      public Builder clearSCFightDispatch() {
        result.hasSCFightDispatch = false;
        result.sCFightDispatch_ = com.randioo.compare_collections_server.protocol.Fight.SCFightDispatch.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightAddCard SCFightAddCard = 58;
      public boolean hasSCFightAddCard() {
        return result.hasSCFightAddCard();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightAddCard getSCFightAddCard() {
        return result.getSCFightAddCard();
      }
      public Builder setSCFightAddCard(com.randioo.compare_collections_server.protocol.Fight.SCFightAddCard value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightAddCard = true;
        result.sCFightAddCard_ = value;
        return this;
      }
      public Builder setSCFightAddCard(com.randioo.compare_collections_server.protocol.Fight.SCFightAddCard.Builder builderForValue) {
        result.hasSCFightAddCard = true;
        result.sCFightAddCard_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightAddCard(com.randioo.compare_collections_server.protocol.Fight.SCFightAddCard value) {
        if (result.hasSCFightAddCard() &&
            result.sCFightAddCard_ != com.randioo.compare_collections_server.protocol.Fight.SCFightAddCard.getDefaultInstance()) {
          result.sCFightAddCard_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightAddCard.newBuilder(result.sCFightAddCard_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightAddCard_ = value;
        }
        result.hasSCFightAddCard = true;
        return this;
      }
      public Builder clearSCFightAddCard() {
        result.hasSCFightAddCard = false;
        result.sCFightAddCard_ = com.randioo.compare_collections_server.protocol.Fight.SCFightAddCard.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightChooseAddCard SCFightChooseAddCard = 59;
      public boolean hasSCFightChooseAddCard() {
        return result.hasSCFightChooseAddCard();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightChooseAddCard getSCFightChooseAddCard() {
        return result.getSCFightChooseAddCard();
      }
      public Builder setSCFightChooseAddCard(com.randioo.compare_collections_server.protocol.Fight.SCFightChooseAddCard value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightChooseAddCard = true;
        result.sCFightChooseAddCard_ = value;
        return this;
      }
      public Builder setSCFightChooseAddCard(com.randioo.compare_collections_server.protocol.Fight.SCFightChooseAddCard.Builder builderForValue) {
        result.hasSCFightChooseAddCard = true;
        result.sCFightChooseAddCard_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightChooseAddCard(com.randioo.compare_collections_server.protocol.Fight.SCFightChooseAddCard value) {
        if (result.hasSCFightChooseAddCard() &&
            result.sCFightChooseAddCard_ != com.randioo.compare_collections_server.protocol.Fight.SCFightChooseAddCard.getDefaultInstance()) {
          result.sCFightChooseAddCard_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightChooseAddCard.newBuilder(result.sCFightChooseAddCard_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightChooseAddCard_ = value;
        }
        result.hasSCFightChooseAddCard = true;
        return this;
      }
      public Builder clearSCFightChooseAddCard() {
        result.hasSCFightChooseAddCard = false;
        result.sCFightChooseAddCard_ = com.randioo.compare_collections_server.protocol.Fight.SCFightChooseAddCard.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightChooseAddCardResponse FightChooseAddCardResponse = 60;
      public boolean hasFightChooseAddCardResponse() {
        return result.hasFightChooseAddCardResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightChooseAddCardResponse getFightChooseAddCardResponse() {
        return result.getFightChooseAddCardResponse();
      }
      public Builder setFightChooseAddCardResponse(com.randioo.compare_collections_server.protocol.Fight.FightChooseAddCardResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightChooseAddCardResponse = true;
        result.fightChooseAddCardResponse_ = value;
        return this;
      }
      public Builder setFightChooseAddCardResponse(com.randioo.compare_collections_server.protocol.Fight.FightChooseAddCardResponse.Builder builderForValue) {
        result.hasFightChooseAddCardResponse = true;
        result.fightChooseAddCardResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightChooseAddCardResponse(com.randioo.compare_collections_server.protocol.Fight.FightChooseAddCardResponse value) {
        if (result.hasFightChooseAddCardResponse() &&
            result.fightChooseAddCardResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightChooseAddCardResponse.getDefaultInstance()) {
          result.fightChooseAddCardResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightChooseAddCardResponse.newBuilder(result.fightChooseAddCardResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightChooseAddCardResponse_ = value;
        }
        result.hasFightChooseAddCardResponse = true;
        return this;
      }
      public Builder clearFightChooseAddCardResponse() {
        result.hasFightChooseAddCardResponse = false;
        result.fightChooseAddCardResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightChooseAddCardResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightCardType SCFightCardType = 61;
      public boolean hasSCFightCardType() {
        return result.hasSCFightCardType();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightCardType getSCFightCardType() {
        return result.getSCFightCardType();
      }
      public Builder setSCFightCardType(com.randioo.compare_collections_server.protocol.Fight.SCFightCardType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightCardType = true;
        result.sCFightCardType_ = value;
        return this;
      }
      public Builder setSCFightCardType(com.randioo.compare_collections_server.protocol.Fight.SCFightCardType.Builder builderForValue) {
        result.hasSCFightCardType = true;
        result.sCFightCardType_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightCardType(com.randioo.compare_collections_server.protocol.Fight.SCFightCardType value) {
        if (result.hasSCFightCardType() &&
            result.sCFightCardType_ != com.randioo.compare_collections_server.protocol.Fight.SCFightCardType.getDefaultInstance()) {
          result.sCFightCardType_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightCardType.newBuilder(result.sCFightCardType_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightCardType_ = value;
        }
        result.hasSCFightCardType = true;
        return this;
      }
      public Builder clearSCFightCardType() {
        result.hasSCFightCardType = false;
        result.sCFightCardType_ = com.randioo.compare_collections_server.protocol.Fight.SCFightCardType.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.GmEnvVarsResponse GmEnvVarsResponse = 62;
      public boolean hasGmEnvVarsResponse() {
        return result.hasGmEnvVarsResponse();
      }
      public com.randioo.compare_collections_server.protocol.Gm.GmEnvVarsResponse getGmEnvVarsResponse() {
        return result.getGmEnvVarsResponse();
      }
      public Builder setGmEnvVarsResponse(com.randioo.compare_collections_server.protocol.Gm.GmEnvVarsResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGmEnvVarsResponse = true;
        result.gmEnvVarsResponse_ = value;
        return this;
      }
      public Builder setGmEnvVarsResponse(com.randioo.compare_collections_server.protocol.Gm.GmEnvVarsResponse.Builder builderForValue) {
        result.hasGmEnvVarsResponse = true;
        result.gmEnvVarsResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeGmEnvVarsResponse(com.randioo.compare_collections_server.protocol.Gm.GmEnvVarsResponse value) {
        if (result.hasGmEnvVarsResponse() &&
            result.gmEnvVarsResponse_ != com.randioo.compare_collections_server.protocol.Gm.GmEnvVarsResponse.getDefaultInstance()) {
          result.gmEnvVarsResponse_ =
            com.randioo.compare_collections_server.protocol.Gm.GmEnvVarsResponse.newBuilder(result.gmEnvVarsResponse_).mergeFrom(value).buildPartial();
        } else {
          result.gmEnvVarsResponse_ = value;
        }
        result.hasGmEnvVarsResponse = true;
        return this;
      }
      public Builder clearGmEnvVarsResponse() {
        result.hasGmEnvVarsResponse = false;
        result.gmEnvVarsResponse_ = com.randioo.compare_collections_server.protocol.Gm.GmEnvVarsResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.GmGameInfoResponse GmGameInfoResponse = 63;
      public boolean hasGmGameInfoResponse() {
        return result.hasGmGameInfoResponse();
      }
      public com.randioo.compare_collections_server.protocol.Gm.GmGameInfoResponse getGmGameInfoResponse() {
        return result.getGmGameInfoResponse();
      }
      public Builder setGmGameInfoResponse(com.randioo.compare_collections_server.protocol.Gm.GmGameInfoResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGmGameInfoResponse = true;
        result.gmGameInfoResponse_ = value;
        return this;
      }
      public Builder setGmGameInfoResponse(com.randioo.compare_collections_server.protocol.Gm.GmGameInfoResponse.Builder builderForValue) {
        result.hasGmGameInfoResponse = true;
        result.gmGameInfoResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeGmGameInfoResponse(com.randioo.compare_collections_server.protocol.Gm.GmGameInfoResponse value) {
        if (result.hasGmGameInfoResponse() &&
            result.gmGameInfoResponse_ != com.randioo.compare_collections_server.protocol.Gm.GmGameInfoResponse.getDefaultInstance()) {
          result.gmGameInfoResponse_ =
            com.randioo.compare_collections_server.protocol.Gm.GmGameInfoResponse.newBuilder(result.gmGameInfoResponse_).mergeFrom(value).buildPartial();
        } else {
          result.gmGameInfoResponse_ = value;
        }
        result.hasGmGameInfoResponse = true;
        return this;
      }
      public Builder clearGmGameInfoResponse() {
        result.hasGmGameInfoResponse = false;
        result.gmGameInfoResponse_ = com.randioo.compare_collections_server.protocol.Gm.GmGameInfoResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.GmDispatchCardResponse GmDispatchCardResponse = 64;
      public boolean hasGmDispatchCardResponse() {
        return result.hasGmDispatchCardResponse();
      }
      public com.randioo.compare_collections_server.protocol.Gm.GmDispatchCardResponse getGmDispatchCardResponse() {
        return result.getGmDispatchCardResponse();
      }
      public Builder setGmDispatchCardResponse(com.randioo.compare_collections_server.protocol.Gm.GmDispatchCardResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGmDispatchCardResponse = true;
        result.gmDispatchCardResponse_ = value;
        return this;
      }
      public Builder setGmDispatchCardResponse(com.randioo.compare_collections_server.protocol.Gm.GmDispatchCardResponse.Builder builderForValue) {
        result.hasGmDispatchCardResponse = true;
        result.gmDispatchCardResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeGmDispatchCardResponse(com.randioo.compare_collections_server.protocol.Gm.GmDispatchCardResponse value) {
        if (result.hasGmDispatchCardResponse() &&
            result.gmDispatchCardResponse_ != com.randioo.compare_collections_server.protocol.Gm.GmDispatchCardResponse.getDefaultInstance()) {
          result.gmDispatchCardResponse_ =
            com.randioo.compare_collections_server.protocol.Gm.GmDispatchCardResponse.newBuilder(result.gmDispatchCardResponse_).mergeFrom(value).buildPartial();
        } else {
          result.gmDispatchCardResponse_ = value;
        }
        result.hasGmDispatchCardResponse = true;
        return this;
      }
      public Builder clearGmDispatchCardResponse() {
        result.hasGmDispatchCardResponse = false;
        result.gmDispatchCardResponse_ = com.randioo.compare_collections_server.protocol.Gm.GmDispatchCardResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.GmRoundResponse GmRoundResponse = 65;
      public boolean hasGmRoundResponse() {
        return result.hasGmRoundResponse();
      }
      public com.randioo.compare_collections_server.protocol.Gm.GmRoundResponse getGmRoundResponse() {
        return result.getGmRoundResponse();
      }
      public Builder setGmRoundResponse(com.randioo.compare_collections_server.protocol.Gm.GmRoundResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGmRoundResponse = true;
        result.gmRoundResponse_ = value;
        return this;
      }
      public Builder setGmRoundResponse(com.randioo.compare_collections_server.protocol.Gm.GmRoundResponse.Builder builderForValue) {
        result.hasGmRoundResponse = true;
        result.gmRoundResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeGmRoundResponse(com.randioo.compare_collections_server.protocol.Gm.GmRoundResponse value) {
        if (result.hasGmRoundResponse() &&
            result.gmRoundResponse_ != com.randioo.compare_collections_server.protocol.Gm.GmRoundResponse.getDefaultInstance()) {
          result.gmRoundResponse_ =
            com.randioo.compare_collections_server.protocol.Gm.GmRoundResponse.newBuilder(result.gmRoundResponse_).mergeFrom(value).buildPartial();
        } else {
          result.gmRoundResponse_ = value;
        }
        result.hasGmRoundResponse = true;
        return this;
      }
      public Builder clearGmRoundResponse() {
        result.hasGmRoundResponse = false;
        result.gmRoundResponse_ = com.randioo.compare_collections_server.protocol.Gm.GmRoundResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightWatchCards SCFightWatchCards = 66;
      public boolean hasSCFightWatchCards() {
        return result.hasSCFightWatchCards();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightWatchCards getSCFightWatchCards() {
        return result.getSCFightWatchCards();
      }
      public Builder setSCFightWatchCards(com.randioo.compare_collections_server.protocol.Fight.SCFightWatchCards value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightWatchCards = true;
        result.sCFightWatchCards_ = value;
        return this;
      }
      public Builder setSCFightWatchCards(com.randioo.compare_collections_server.protocol.Fight.SCFightWatchCards.Builder builderForValue) {
        result.hasSCFightWatchCards = true;
        result.sCFightWatchCards_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightWatchCards(com.randioo.compare_collections_server.protocol.Fight.SCFightWatchCards value) {
        if (result.hasSCFightWatchCards() &&
            result.sCFightWatchCards_ != com.randioo.compare_collections_server.protocol.Fight.SCFightWatchCards.getDefaultInstance()) {
          result.sCFightWatchCards_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightWatchCards.newBuilder(result.sCFightWatchCards_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightWatchCards_ = value;
        }
        result.hasSCFightWatchCards = true;
        return this;
      }
      public Builder clearSCFightWatchCards() {
        result.hasSCFightWatchCards = false;
        result.sCFightWatchCards_ = com.randioo.compare_collections_server.protocol.Fight.SCFightWatchCards.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightLookPaiResponse FightLookPaiResponse = 67;
      public boolean hasFightLookPaiResponse() {
        return result.hasFightLookPaiResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightLookPaiResponse getFightLookPaiResponse() {
        return result.getFightLookPaiResponse();
      }
      public Builder setFightLookPaiResponse(com.randioo.compare_collections_server.protocol.Fight.FightLookPaiResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightLookPaiResponse = true;
        result.fightLookPaiResponse_ = value;
        return this;
      }
      public Builder setFightLookPaiResponse(com.randioo.compare_collections_server.protocol.Fight.FightLookPaiResponse.Builder builderForValue) {
        result.hasFightLookPaiResponse = true;
        result.fightLookPaiResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightLookPaiResponse(com.randioo.compare_collections_server.protocol.Fight.FightLookPaiResponse value) {
        if (result.hasFightLookPaiResponse() &&
            result.fightLookPaiResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightLookPaiResponse.getDefaultInstance()) {
          result.fightLookPaiResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightLookPaiResponse.newBuilder(result.fightLookPaiResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightLookPaiResponse_ = value;
        }
        result.hasFightLookPaiResponse = true;
        return this;
      }
      public Builder clearFightLookPaiResponse() {
        result.hasFightLookPaiResponse = false;
        result.fightLookPaiResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightLookPaiResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightGenResponse FightGenResponse = 68;
      public boolean hasFightGenResponse() {
        return result.hasFightGenResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightGenResponse getFightGenResponse() {
        return result.getFightGenResponse();
      }
      public Builder setFightGenResponse(com.randioo.compare_collections_server.protocol.Fight.FightGenResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightGenResponse = true;
        result.fightGenResponse_ = value;
        return this;
      }
      public Builder setFightGenResponse(com.randioo.compare_collections_server.protocol.Fight.FightGenResponse.Builder builderForValue) {
        result.hasFightGenResponse = true;
        result.fightGenResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightGenResponse(com.randioo.compare_collections_server.protocol.Fight.FightGenResponse value) {
        if (result.hasFightGenResponse() &&
            result.fightGenResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightGenResponse.getDefaultInstance()) {
          result.fightGenResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightGenResponse.newBuilder(result.fightGenResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightGenResponse_ = value;
        }
        result.hasFightGenResponse = true;
        return this;
      }
      public Builder clearFightGenResponse() {
        result.hasFightGenResponse = false;
        result.fightGenResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightGenResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightAutoBet SCFightAutoBet = 69;
      public boolean hasSCFightAutoBet() {
        return result.hasSCFightAutoBet();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightAutoBet getSCFightAutoBet() {
        return result.getSCFightAutoBet();
      }
      public Builder setSCFightAutoBet(com.randioo.compare_collections_server.protocol.Fight.SCFightAutoBet value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightAutoBet = true;
        result.sCFightAutoBet_ = value;
        return this;
      }
      public Builder setSCFightAutoBet(com.randioo.compare_collections_server.protocol.Fight.SCFightAutoBet.Builder builderForValue) {
        result.hasSCFightAutoBet = true;
        result.sCFightAutoBet_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightAutoBet(com.randioo.compare_collections_server.protocol.Fight.SCFightAutoBet value) {
        if (result.hasSCFightAutoBet() &&
            result.sCFightAutoBet_ != com.randioo.compare_collections_server.protocol.Fight.SCFightAutoBet.getDefaultInstance()) {
          result.sCFightAutoBet_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightAutoBet.newBuilder(result.sCFightAutoBet_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightAutoBet_ = value;
        }
        result.hasSCFightAutoBet = true;
        return this;
      }
      public Builder clearSCFightAutoBet() {
        result.hasSCFightAutoBet = false;
        result.sCFightAutoBet_ = com.randioo.compare_collections_server.protocol.Fight.SCFightAutoBet.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightBigger SCFightBigger = 70;
      public boolean hasSCFightBigger() {
        return result.hasSCFightBigger();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightBigger getSCFightBigger() {
        return result.getSCFightBigger();
      }
      public Builder setSCFightBigger(com.randioo.compare_collections_server.protocol.Fight.SCFightBigger value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightBigger = true;
        result.sCFightBigger_ = value;
        return this;
      }
      public Builder setSCFightBigger(com.randioo.compare_collections_server.protocol.Fight.SCFightBigger.Builder builderForValue) {
        result.hasSCFightBigger = true;
        result.sCFightBigger_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightBigger(com.randioo.compare_collections_server.protocol.Fight.SCFightBigger value) {
        if (result.hasSCFightBigger() &&
            result.sCFightBigger_ != com.randioo.compare_collections_server.protocol.Fight.SCFightBigger.getDefaultInstance()) {
          result.sCFightBigger_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightBigger.newBuilder(result.sCFightBigger_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightBigger_ = value;
        }
        result.hasSCFightBigger = true;
        return this;
      }
      public Builder clearSCFightBigger() {
        result.hasSCFightBigger = false;
        result.sCFightBigger_ = com.randioo.compare_collections_server.protocol.Fight.SCFightBigger.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightBiggerResponse FightBiggerResponse = 71;
      public boolean hasFightBiggerResponse() {
        return result.hasFightBiggerResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightBiggerResponse getFightBiggerResponse() {
        return result.getFightBiggerResponse();
      }
      public Builder setFightBiggerResponse(com.randioo.compare_collections_server.protocol.Fight.FightBiggerResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightBiggerResponse = true;
        result.fightBiggerResponse_ = value;
        return this;
      }
      public Builder setFightBiggerResponse(com.randioo.compare_collections_server.protocol.Fight.FightBiggerResponse.Builder builderForValue) {
        result.hasFightBiggerResponse = true;
        result.fightBiggerResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightBiggerResponse(com.randioo.compare_collections_server.protocol.Fight.FightBiggerResponse value) {
        if (result.hasFightBiggerResponse() &&
            result.fightBiggerResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightBiggerResponse.getDefaultInstance()) {
          result.fightBiggerResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightBiggerResponse.newBuilder(result.fightBiggerResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightBiggerResponse_ = value;
        }
        result.hasFightBiggerResponse = true;
        return this;
      }
      public Builder clearFightBiggerResponse() {
        result.hasFightBiggerResponse = false;
        result.fightBiggerResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightBiggerResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightGiveUpResponse FightGiveUpResponse = 72;
      public boolean hasFightGiveUpResponse() {
        return result.hasFightGiveUpResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightGiveUpResponse getFightGiveUpResponse() {
        return result.getFightGiveUpResponse();
      }
      public Builder setFightGiveUpResponse(com.randioo.compare_collections_server.protocol.Fight.FightGiveUpResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightGiveUpResponse = true;
        result.fightGiveUpResponse_ = value;
        return this;
      }
      public Builder setFightGiveUpResponse(com.randioo.compare_collections_server.protocol.Fight.FightGiveUpResponse.Builder builderForValue) {
        result.hasFightGiveUpResponse = true;
        result.fightGiveUpResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightGiveUpResponse(com.randioo.compare_collections_server.protocol.Fight.FightGiveUpResponse value) {
        if (result.hasFightGiveUpResponse() &&
            result.fightGiveUpResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightGiveUpResponse.getDefaultInstance()) {
          result.fightGiveUpResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightGiveUpResponse.newBuilder(result.fightGiveUpResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightGiveUpResponse_ = value;
        }
        result.hasFightGiveUpResponse = true;
        return this;
      }
      public Builder clearFightGiveUpResponse() {
        result.hasFightGiveUpResponse = false;
        result.fightGiveUpResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightGiveUpResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightTwoResponse FightTwoResponse = 73;
      public boolean hasFightTwoResponse() {
        return result.hasFightTwoResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightTwoResponse getFightTwoResponse() {
        return result.getFightTwoResponse();
      }
      public Builder setFightTwoResponse(com.randioo.compare_collections_server.protocol.Fight.FightTwoResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightTwoResponse = true;
        result.fightTwoResponse_ = value;
        return this;
      }
      public Builder setFightTwoResponse(com.randioo.compare_collections_server.protocol.Fight.FightTwoResponse.Builder builderForValue) {
        result.hasFightTwoResponse = true;
        result.fightTwoResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightTwoResponse(com.randioo.compare_collections_server.protocol.Fight.FightTwoResponse value) {
        if (result.hasFightTwoResponse() &&
            result.fightTwoResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightTwoResponse.getDefaultInstance()) {
          result.fightTwoResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightTwoResponse.newBuilder(result.fightTwoResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightTwoResponse_ = value;
        }
        result.hasFightTwoResponse = true;
        return this;
      }
      public Builder clearFightTwoResponse() {
        result.hasFightTwoResponse = false;
        result.fightTwoResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightTwoResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightTwo SCFightTwo = 74;
      public boolean hasSCFightTwo() {
        return result.hasSCFightTwo();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightTwo getSCFightTwo() {
        return result.getSCFightTwo();
      }
      public Builder setSCFightTwo(com.randioo.compare_collections_server.protocol.Fight.SCFightTwo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightTwo = true;
        result.sCFightTwo_ = value;
        return this;
      }
      public Builder setSCFightTwo(com.randioo.compare_collections_server.protocol.Fight.SCFightTwo.Builder builderForValue) {
        result.hasSCFightTwo = true;
        result.sCFightTwo_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightTwo(com.randioo.compare_collections_server.protocol.Fight.SCFightTwo value) {
        if (result.hasSCFightTwo() &&
            result.sCFightTwo_ != com.randioo.compare_collections_server.protocol.Fight.SCFightTwo.getDefaultInstance()) {
          result.sCFightTwo_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightTwo.newBuilder(result.sCFightTwo_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightTwo_ = value;
        }
        result.hasSCFightTwo = true;
        return this;
      }
      public Builder clearSCFightTwo() {
        result.hasSCFightTwo = false;
        result.sCFightTwo_ = com.randioo.compare_collections_server.protocol.Fight.SCFightTwo.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightGiveUp SCFightGiveUp = 75;
      public boolean hasSCFightGiveUp() {
        return result.hasSCFightGiveUp();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightGiveUp getSCFightGiveUp() {
        return result.getSCFightGiveUp();
      }
      public Builder setSCFightGiveUp(com.randioo.compare_collections_server.protocol.Fight.SCFightGiveUp value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightGiveUp = true;
        result.sCFightGiveUp_ = value;
        return this;
      }
      public Builder setSCFightGiveUp(com.randioo.compare_collections_server.protocol.Fight.SCFightGiveUp.Builder builderForValue) {
        result.hasSCFightGiveUp = true;
        result.sCFightGiveUp_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightGiveUp(com.randioo.compare_collections_server.protocol.Fight.SCFightGiveUp value) {
        if (result.hasSCFightGiveUp() &&
            result.sCFightGiveUp_ != com.randioo.compare_collections_server.protocol.Fight.SCFightGiveUp.getDefaultInstance()) {
          result.sCFightGiveUp_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightGiveUp.newBuilder(result.sCFightGiveUp_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightGiveUp_ = value;
        }
        result.hasSCFightGiveUp = true;
        return this;
      }
      public Builder clearSCFightGiveUp() {
        result.hasSCFightGiveUp = false;
        result.sCFightGiveUp_ = com.randioo.compare_collections_server.protocol.Fight.SCFightGiveUp.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightGen SCFightGen = 76;
      public boolean hasSCFightGen() {
        return result.hasSCFightGen();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightGen getSCFightGen() {
        return result.getSCFightGen();
      }
      public Builder setSCFightGen(com.randioo.compare_collections_server.protocol.Fight.SCFightGen value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightGen = true;
        result.sCFightGen_ = value;
        return this;
      }
      public Builder setSCFightGen(com.randioo.compare_collections_server.protocol.Fight.SCFightGen.Builder builderForValue) {
        result.hasSCFightGen = true;
        result.sCFightGen_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightGen(com.randioo.compare_collections_server.protocol.Fight.SCFightGen value) {
        if (result.hasSCFightGen() &&
            result.sCFightGen_ != com.randioo.compare_collections_server.protocol.Fight.SCFightGen.getDefaultInstance()) {
          result.sCFightGen_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightGen.newBuilder(result.sCFightGen_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightGen_ = value;
        }
        result.hasSCFightGen = true;
        return this;
      }
      public Builder clearSCFightGen() {
        result.hasSCFightGen = false;
        result.sCFightGen_ = com.randioo.compare_collections_server.protocol.Fight.SCFightGen.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightButtonDisappear SCFightButtonDisappear = 77;
      public boolean hasSCFightButtonDisappear() {
        return result.hasSCFightButtonDisappear();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightButtonDisappear getSCFightButtonDisappear() {
        return result.getSCFightButtonDisappear();
      }
      public Builder setSCFightButtonDisappear(com.randioo.compare_collections_server.protocol.Fight.SCFightButtonDisappear value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightButtonDisappear = true;
        result.sCFightButtonDisappear_ = value;
        return this;
      }
      public Builder setSCFightButtonDisappear(com.randioo.compare_collections_server.protocol.Fight.SCFightButtonDisappear.Builder builderForValue) {
        result.hasSCFightButtonDisappear = true;
        result.sCFightButtonDisappear_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightButtonDisappear(com.randioo.compare_collections_server.protocol.Fight.SCFightButtonDisappear value) {
        if (result.hasSCFightButtonDisappear() &&
            result.sCFightButtonDisappear_ != com.randioo.compare_collections_server.protocol.Fight.SCFightButtonDisappear.getDefaultInstance()) {
          result.sCFightButtonDisappear_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightButtonDisappear.newBuilder(result.sCFightButtonDisappear_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightButtonDisappear_ = value;
        }
        result.hasSCFightButtonDisappear = true;
        return this;
      }
      public Builder clearSCFightButtonDisappear() {
        result.hasSCFightButtonDisappear = false;
        result.sCFightButtonDisappear_ = com.randioo.compare_collections_server.protocol.Fight.SCFightButtonDisappear.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightMingPai SCFightMingPai = 78;
      public boolean hasSCFightMingPai() {
        return result.hasSCFightMingPai();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightMingPai getSCFightMingPai() {
        return result.getSCFightMingPai();
      }
      public Builder setSCFightMingPai(com.randioo.compare_collections_server.protocol.Fight.SCFightMingPai value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightMingPai = true;
        result.sCFightMingPai_ = value;
        return this;
      }
      public Builder setSCFightMingPai(com.randioo.compare_collections_server.protocol.Fight.SCFightMingPai.Builder builderForValue) {
        result.hasSCFightMingPai = true;
        result.sCFightMingPai_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightMingPai(com.randioo.compare_collections_server.protocol.Fight.SCFightMingPai value) {
        if (result.hasSCFightMingPai() &&
            result.sCFightMingPai_ != com.randioo.compare_collections_server.protocol.Fight.SCFightMingPai.getDefaultInstance()) {
          result.sCFightMingPai_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightMingPai.newBuilder(result.sCFightMingPai_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightMingPai_ = value;
        }
        result.hasSCFightMingPai = true;
        return this;
      }
      public Builder clearSCFightMingPai() {
        result.hasSCFightMingPai = false;
        result.sCFightMingPai_ = com.randioo.compare_collections_server.protocol.Fight.SCFightMingPai.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightAllSeat SCFightAllSeat = 79;
      public boolean hasSCFightAllSeat() {
        return result.hasSCFightAllSeat();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightAllSeat getSCFightAllSeat() {
        return result.getSCFightAllSeat();
      }
      public Builder setSCFightAllSeat(com.randioo.compare_collections_server.protocol.Fight.SCFightAllSeat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightAllSeat = true;
        result.sCFightAllSeat_ = value;
        return this;
      }
      public Builder setSCFightAllSeat(com.randioo.compare_collections_server.protocol.Fight.SCFightAllSeat.Builder builderForValue) {
        result.hasSCFightAllSeat = true;
        result.sCFightAllSeat_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightAllSeat(com.randioo.compare_collections_server.protocol.Fight.SCFightAllSeat value) {
        if (result.hasSCFightAllSeat() &&
            result.sCFightAllSeat_ != com.randioo.compare_collections_server.protocol.Fight.SCFightAllSeat.getDefaultInstance()) {
          result.sCFightAllSeat_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightAllSeat.newBuilder(result.sCFightAllSeat_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightAllSeat_ = value;
        }
        result.hasSCFightAllSeat = true;
        return this;
      }
      public Builder clearSCFightAllSeat() {
        result.hasSCFightAllSeat = false;
        result.sCFightAllSeat_ = com.randioo.compare_collections_server.protocol.Fight.SCFightAllSeat.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightBiggerButton SCFightBiggerButton = 80;
      public boolean hasSCFightBiggerButton() {
        return result.hasSCFightBiggerButton();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightBiggerButton getSCFightBiggerButton() {
        return result.getSCFightBiggerButton();
      }
      public Builder setSCFightBiggerButton(com.randioo.compare_collections_server.protocol.Fight.SCFightBiggerButton value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightBiggerButton = true;
        result.sCFightBiggerButton_ = value;
        return this;
      }
      public Builder setSCFightBiggerButton(com.randioo.compare_collections_server.protocol.Fight.SCFightBiggerButton.Builder builderForValue) {
        result.hasSCFightBiggerButton = true;
        result.sCFightBiggerButton_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightBiggerButton(com.randioo.compare_collections_server.protocol.Fight.SCFightBiggerButton value) {
        if (result.hasSCFightBiggerButton() &&
            result.sCFightBiggerButton_ != com.randioo.compare_collections_server.protocol.Fight.SCFightBiggerButton.getDefaultInstance()) {
          result.sCFightBiggerButton_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightBiggerButton.newBuilder(result.sCFightBiggerButton_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightBiggerButton_ = value;
        }
        result.hasSCFightBiggerButton = true;
        return this;
      }
      public Builder clearSCFightBiggerButton() {
        result.hasSCFightBiggerButton = false;
        result.sCFightBiggerButton_ = com.randioo.compare_collections_server.protocol.Fight.SCFightBiggerButton.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightRoundCount SCFightRoundCount = 81;
      public boolean hasSCFightRoundCount() {
        return result.hasSCFightRoundCount();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightRoundCount getSCFightRoundCount() {
        return result.getSCFightRoundCount();
      }
      public Builder setSCFightRoundCount(com.randioo.compare_collections_server.protocol.Fight.SCFightRoundCount value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightRoundCount = true;
        result.sCFightRoundCount_ = value;
        return this;
      }
      public Builder setSCFightRoundCount(com.randioo.compare_collections_server.protocol.Fight.SCFightRoundCount.Builder builderForValue) {
        result.hasSCFightRoundCount = true;
        result.sCFightRoundCount_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightRoundCount(com.randioo.compare_collections_server.protocol.Fight.SCFightRoundCount value) {
        if (result.hasSCFightRoundCount() &&
            result.sCFightRoundCount_ != com.randioo.compare_collections_server.protocol.Fight.SCFightRoundCount.getDefaultInstance()) {
          result.sCFightRoundCount_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightRoundCount.newBuilder(result.sCFightRoundCount_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightRoundCount_ = value;
        }
        result.hasSCFightRoundCount = true;
        return this;
      }
      public Builder clearSCFightRoundCount() {
        result.hasSCFightRoundCount = false;
        result.sCFightRoundCount_ = com.randioo.compare_collections_server.protocol.Fight.SCFightRoundCount.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCMatchExitGame SCMatchExitGame = 82;
      public boolean hasSCMatchExitGame() {
        return result.hasSCMatchExitGame();
      }
      public com.randioo.compare_collections_server.protocol.Match.SCMatchExitGame getSCMatchExitGame() {
        return result.getSCMatchExitGame();
      }
      public Builder setSCMatchExitGame(com.randioo.compare_collections_server.protocol.Match.SCMatchExitGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCMatchExitGame = true;
        result.sCMatchExitGame_ = value;
        return this;
      }
      public Builder setSCMatchExitGame(com.randioo.compare_collections_server.protocol.Match.SCMatchExitGame.Builder builderForValue) {
        result.hasSCMatchExitGame = true;
        result.sCMatchExitGame_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCMatchExitGame(com.randioo.compare_collections_server.protocol.Match.SCMatchExitGame value) {
        if (result.hasSCMatchExitGame() &&
            result.sCMatchExitGame_ != com.randioo.compare_collections_server.protocol.Match.SCMatchExitGame.getDefaultInstance()) {
          result.sCMatchExitGame_ =
            com.randioo.compare_collections_server.protocol.Match.SCMatchExitGame.newBuilder(result.sCMatchExitGame_).mergeFrom(value).buildPartial();
        } else {
          result.sCMatchExitGame_ = value;
        }
        result.hasSCMatchExitGame = true;
        return this;
      }
      public Builder clearSCMatchExitGame() {
        result.hasSCMatchExitGame = false;
        result.sCMatchExitGame_ = com.randioo.compare_collections_server.protocol.Match.SCMatchExitGame.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.MatchExitGameResponse MatchExitGameResponse = 83;
      public boolean hasMatchExitGameResponse() {
        return result.hasMatchExitGameResponse();
      }
      public com.randioo.compare_collections_server.protocol.Match.MatchExitGameResponse getMatchExitGameResponse() {
        return result.getMatchExitGameResponse();
      }
      public Builder setMatchExitGameResponse(com.randioo.compare_collections_server.protocol.Match.MatchExitGameResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMatchExitGameResponse = true;
        result.matchExitGameResponse_ = value;
        return this;
      }
      public Builder setMatchExitGameResponse(com.randioo.compare_collections_server.protocol.Match.MatchExitGameResponse.Builder builderForValue) {
        result.hasMatchExitGameResponse = true;
        result.matchExitGameResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMatchExitGameResponse(com.randioo.compare_collections_server.protocol.Match.MatchExitGameResponse value) {
        if (result.hasMatchExitGameResponse() &&
            result.matchExitGameResponse_ != com.randioo.compare_collections_server.protocol.Match.MatchExitGameResponse.getDefaultInstance()) {
          result.matchExitGameResponse_ =
            com.randioo.compare_collections_server.protocol.Match.MatchExitGameResponse.newBuilder(result.matchExitGameResponse_).mergeFrom(value).buildPartial();
        } else {
          result.matchExitGameResponse_ = value;
        }
        result.hasMatchExitGameResponse = true;
        return this;
      }
      public Builder clearMatchExitGameResponse() {
        result.hasMatchExitGameResponse = false;
        result.matchExitGameResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchExitGameResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCMatchJoinInGame SCMatchJoinInGame = 84;
      public boolean hasSCMatchJoinInGame() {
        return result.hasSCMatchJoinInGame();
      }
      public com.randioo.compare_collections_server.protocol.Match.SCMatchJoinInGame getSCMatchJoinInGame() {
        return result.getSCMatchJoinInGame();
      }
      public Builder setSCMatchJoinInGame(com.randioo.compare_collections_server.protocol.Match.SCMatchJoinInGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCMatchJoinInGame = true;
        result.sCMatchJoinInGame_ = value;
        return this;
      }
      public Builder setSCMatchJoinInGame(com.randioo.compare_collections_server.protocol.Match.SCMatchJoinInGame.Builder builderForValue) {
        result.hasSCMatchJoinInGame = true;
        result.sCMatchJoinInGame_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCMatchJoinInGame(com.randioo.compare_collections_server.protocol.Match.SCMatchJoinInGame value) {
        if (result.hasSCMatchJoinInGame() &&
            result.sCMatchJoinInGame_ != com.randioo.compare_collections_server.protocol.Match.SCMatchJoinInGame.getDefaultInstance()) {
          result.sCMatchJoinInGame_ =
            com.randioo.compare_collections_server.protocol.Match.SCMatchJoinInGame.newBuilder(result.sCMatchJoinInGame_).mergeFrom(value).buildPartial();
        } else {
          result.sCMatchJoinInGame_ = value;
        }
        result.hasSCMatchJoinInGame = true;
        return this;
      }
      public Builder clearSCMatchJoinInGame() {
        result.hasSCMatchJoinInGame = false;
        result.sCMatchJoinInGame_ = com.randioo.compare_collections_server.protocol.Match.SCMatchJoinInGame.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.MatchJoinInGameResponse MatchJoinInGameResponse = 85;
      public boolean hasMatchJoinInGameResponse() {
        return result.hasMatchJoinInGameResponse();
      }
      public com.randioo.compare_collections_server.protocol.Match.MatchJoinInGameResponse getMatchJoinInGameResponse() {
        return result.getMatchJoinInGameResponse();
      }
      public Builder setMatchJoinInGameResponse(com.randioo.compare_collections_server.protocol.Match.MatchJoinInGameResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMatchJoinInGameResponse = true;
        result.matchJoinInGameResponse_ = value;
        return this;
      }
      public Builder setMatchJoinInGameResponse(com.randioo.compare_collections_server.protocol.Match.MatchJoinInGameResponse.Builder builderForValue) {
        result.hasMatchJoinInGameResponse = true;
        result.matchJoinInGameResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMatchJoinInGameResponse(com.randioo.compare_collections_server.protocol.Match.MatchJoinInGameResponse value) {
        if (result.hasMatchJoinInGameResponse() &&
            result.matchJoinInGameResponse_ != com.randioo.compare_collections_server.protocol.Match.MatchJoinInGameResponse.getDefaultInstance()) {
          result.matchJoinInGameResponse_ =
            com.randioo.compare_collections_server.protocol.Match.MatchJoinInGameResponse.newBuilder(result.matchJoinInGameResponse_).mergeFrom(value).buildPartial();
        } else {
          result.matchJoinInGameResponse_ = value;
        }
        result.hasMatchJoinInGameResponse = true;
        return this;
      }
      public Builder clearMatchJoinInGameResponse() {
        result.hasMatchJoinInGameResponse = false;
        result.matchJoinInGameResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchJoinInGameResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightBetAll SCFightBetAll = 86;
      public boolean hasSCFightBetAll() {
        return result.hasSCFightBetAll();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightBetAll getSCFightBetAll() {
        return result.getSCFightBetAll();
      }
      public Builder setSCFightBetAll(com.randioo.compare_collections_server.protocol.Fight.SCFightBetAll value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightBetAll = true;
        result.sCFightBetAll_ = value;
        return this;
      }
      public Builder setSCFightBetAll(com.randioo.compare_collections_server.protocol.Fight.SCFightBetAll.Builder builderForValue) {
        result.hasSCFightBetAll = true;
        result.sCFightBetAll_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightBetAll(com.randioo.compare_collections_server.protocol.Fight.SCFightBetAll value) {
        if (result.hasSCFightBetAll() &&
            result.sCFightBetAll_ != com.randioo.compare_collections_server.protocol.Fight.SCFightBetAll.getDefaultInstance()) {
          result.sCFightBetAll_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightBetAll.newBuilder(result.sCFightBetAll_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightBetAll_ = value;
        }
        result.hasSCFightBetAll = true;
        return this;
      }
      public Builder clearSCFightBetAll() {
        result.hasSCFightBetAll = false;
        result.sCFightBetAll_ = com.randioo.compare_collections_server.protocol.Fight.SCFightBetAll.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightBetAllResponse FightBetAllResponse = 87;
      public boolean hasFightBetAllResponse() {
        return result.hasFightBetAllResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightBetAllResponse getFightBetAllResponse() {
        return result.getFightBetAllResponse();
      }
      public Builder setFightBetAllResponse(com.randioo.compare_collections_server.protocol.Fight.FightBetAllResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightBetAllResponse = true;
        result.fightBetAllResponse_ = value;
        return this;
      }
      public Builder setFightBetAllResponse(com.randioo.compare_collections_server.protocol.Fight.FightBetAllResponse.Builder builderForValue) {
        result.hasFightBetAllResponse = true;
        result.fightBetAllResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightBetAllResponse(com.randioo.compare_collections_server.protocol.Fight.FightBetAllResponse value) {
        if (result.hasFightBetAllResponse() &&
            result.fightBetAllResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightBetAllResponse.getDefaultInstance()) {
          result.fightBetAllResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightBetAllResponse.newBuilder(result.fightBetAllResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightBetAllResponse_ = value;
        }
        result.hasFightBetAllResponse = true;
        return this;
      }
      public Builder clearFightBetAllResponse() {
        result.hasFightBetAllResponse = false;
        result.fightBetAllResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightBetAllResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightGameStartResponse FightGameStartResponse = 88;
      public boolean hasFightGameStartResponse() {
        return result.hasFightGameStartResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightGameStartResponse getFightGameStartResponse() {
        return result.getFightGameStartResponse();
      }
      public Builder setFightGameStartResponse(com.randioo.compare_collections_server.protocol.Fight.FightGameStartResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightGameStartResponse = true;
        result.fightGameStartResponse_ = value;
        return this;
      }
      public Builder setFightGameStartResponse(com.randioo.compare_collections_server.protocol.Fight.FightGameStartResponse.Builder builderForValue) {
        result.hasFightGameStartResponse = true;
        result.fightGameStartResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightGameStartResponse(com.randioo.compare_collections_server.protocol.Fight.FightGameStartResponse value) {
        if (result.hasFightGameStartResponse() &&
            result.fightGameStartResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightGameStartResponse.getDefaultInstance()) {
          result.fightGameStartResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightGameStartResponse.newBuilder(result.fightGameStartResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightGameStartResponse_ = value;
        }
        result.hasFightGameStartResponse = true;
        return this;
      }
      public Builder clearFightGameStartResponse() {
        result.hasFightGameStartResponse = false;
        result.fightGameStartResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightGameStartResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightPlayTalk SCFightPlayTalk = 89;
      public boolean hasSCFightPlayTalk() {
        return result.hasSCFightPlayTalk();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightPlayTalk getSCFightPlayTalk() {
        return result.getSCFightPlayTalk();
      }
      public Builder setSCFightPlayTalk(com.randioo.compare_collections_server.protocol.Fight.SCFightPlayTalk value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightPlayTalk = true;
        result.sCFightPlayTalk_ = value;
        return this;
      }
      public Builder setSCFightPlayTalk(com.randioo.compare_collections_server.protocol.Fight.SCFightPlayTalk.Builder builderForValue) {
        result.hasSCFightPlayTalk = true;
        result.sCFightPlayTalk_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightPlayTalk(com.randioo.compare_collections_server.protocol.Fight.SCFightPlayTalk value) {
        if (result.hasSCFightPlayTalk() &&
            result.sCFightPlayTalk_ != com.randioo.compare_collections_server.protocol.Fight.SCFightPlayTalk.getDefaultInstance()) {
          result.sCFightPlayTalk_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightPlayTalk.newBuilder(result.sCFightPlayTalk_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightPlayTalk_ = value;
        }
        result.hasSCFightPlayTalk = true;
        return this;
      }
      public Builder clearSCFightPlayTalk() {
        result.hasSCFightPlayTalk = false;
        result.sCFightPlayTalk_ = com.randioo.compare_collections_server.protocol.Fight.SCFightPlayTalk.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightNoticeCallType SCFightNoticeCallType = 90;
      public boolean hasSCFightNoticeCallType() {
        return result.hasSCFightNoticeCallType();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeCallType getSCFightNoticeCallType() {
        return result.getSCFightNoticeCallType();
      }
      public Builder setSCFightNoticeCallType(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeCallType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightNoticeCallType = true;
        result.sCFightNoticeCallType_ = value;
        return this;
      }
      public Builder setSCFightNoticeCallType(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeCallType.Builder builderForValue) {
        result.hasSCFightNoticeCallType = true;
        result.sCFightNoticeCallType_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightNoticeCallType(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeCallType value) {
        if (result.hasSCFightNoticeCallType() &&
            result.sCFightNoticeCallType_ != com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeCallType.getDefaultInstance()) {
          result.sCFightNoticeCallType_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeCallType.newBuilder(result.sCFightNoticeCallType_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightNoticeCallType_ = value;
        }
        result.hasSCFightNoticeCallType = true;
        return this;
      }
      public Builder clearSCFightNoticeCallType() {
        result.hasSCFightNoticeCallType = false;
        result.sCFightNoticeCallType_ = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeCallType.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightCutCardsResponse FightCutCardsResponse = 91;
      public boolean hasFightCutCardsResponse() {
        return result.hasFightCutCardsResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightCutCardsResponse getFightCutCardsResponse() {
        return result.getFightCutCardsResponse();
      }
      public Builder setFightCutCardsResponse(com.randioo.compare_collections_server.protocol.Fight.FightCutCardsResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightCutCardsResponse = true;
        result.fightCutCardsResponse_ = value;
        return this;
      }
      public Builder setFightCutCardsResponse(com.randioo.compare_collections_server.protocol.Fight.FightCutCardsResponse.Builder builderForValue) {
        result.hasFightCutCardsResponse = true;
        result.fightCutCardsResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightCutCardsResponse(com.randioo.compare_collections_server.protocol.Fight.FightCutCardsResponse value) {
        if (result.hasFightCutCardsResponse() &&
            result.fightCutCardsResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightCutCardsResponse.getDefaultInstance()) {
          result.fightCutCardsResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightCutCardsResponse.newBuilder(result.fightCutCardsResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightCutCardsResponse_ = value;
        }
        result.hasFightCutCardsResponse = true;
        return this;
      }
      public Builder clearFightCutCardsResponse() {
        result.hasFightCutCardsResponse = false;
        result.fightCutCardsResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightCutCardsResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightCutCards SCFightCutCards = 92;
      public boolean hasSCFightCutCards() {
        return result.hasSCFightCutCards();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightCutCards getSCFightCutCards() {
        return result.getSCFightCutCards();
      }
      public Builder setSCFightCutCards(com.randioo.compare_collections_server.protocol.Fight.SCFightCutCards value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightCutCards = true;
        result.sCFightCutCards_ = value;
        return this;
      }
      public Builder setSCFightCutCards(com.randioo.compare_collections_server.protocol.Fight.SCFightCutCards.Builder builderForValue) {
        result.hasSCFightCutCards = true;
        result.sCFightCutCards_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightCutCards(com.randioo.compare_collections_server.protocol.Fight.SCFightCutCards value) {
        if (result.hasSCFightCutCards() &&
            result.sCFightCutCards_ != com.randioo.compare_collections_server.protocol.Fight.SCFightCutCards.getDefaultInstance()) {
          result.sCFightCutCards_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightCutCards.newBuilder(result.sCFightCutCards_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightCutCards_ = value;
        }
        result.hasSCFightCutCards = true;
        return this;
      }
      public Builder clearSCFightCutCards() {
        result.hasSCFightCutCards = false;
        result.sCFightCutCards_ = com.randioo.compare_collections_server.protocol.Fight.SCFightCutCards.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightOpenCardsResult SCFightOpenCardsResult = 93;
      public boolean hasSCFightOpenCardsResult() {
        return result.hasSCFightOpenCardsResult();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightOpenCardsResult getSCFightOpenCardsResult() {
        return result.getSCFightOpenCardsResult();
      }
      public Builder setSCFightOpenCardsResult(com.randioo.compare_collections_server.protocol.Fight.SCFightOpenCardsResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightOpenCardsResult = true;
        result.sCFightOpenCardsResult_ = value;
        return this;
      }
      public Builder setSCFightOpenCardsResult(com.randioo.compare_collections_server.protocol.Fight.SCFightOpenCardsResult.Builder builderForValue) {
        result.hasSCFightOpenCardsResult = true;
        result.sCFightOpenCardsResult_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightOpenCardsResult(com.randioo.compare_collections_server.protocol.Fight.SCFightOpenCardsResult value) {
        if (result.hasSCFightOpenCardsResult() &&
            result.sCFightOpenCardsResult_ != com.randioo.compare_collections_server.protocol.Fight.SCFightOpenCardsResult.getDefaultInstance()) {
          result.sCFightOpenCardsResult_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightOpenCardsResult.newBuilder(result.sCFightOpenCardsResult_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightOpenCardsResult_ = value;
        }
        result.hasSCFightOpenCardsResult = true;
        return this;
      }
      public Builder clearSCFightOpenCardsResult() {
        result.hasSCFightOpenCardsResult = false;
        result.sCFightOpenCardsResult_ = com.randioo.compare_collections_server.protocol.Fight.SCFightOpenCardsResult.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightRoundOverScore SCFightRoundOverScore = 94;
      public boolean hasSCFightRoundOverScore() {
        return result.hasSCFightRoundOverScore();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOverScore getSCFightRoundOverScore() {
        return result.getSCFightRoundOverScore();
      }
      public Builder setSCFightRoundOverScore(com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOverScore value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightRoundOverScore = true;
        result.sCFightRoundOverScore_ = value;
        return this;
      }
      public Builder setSCFightRoundOverScore(com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOverScore.Builder builderForValue) {
        result.hasSCFightRoundOverScore = true;
        result.sCFightRoundOverScore_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightRoundOverScore(com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOverScore value) {
        if (result.hasSCFightRoundOverScore() &&
            result.sCFightRoundOverScore_ != com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOverScore.getDefaultInstance()) {
          result.sCFightRoundOverScore_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOverScore.newBuilder(result.sCFightRoundOverScore_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightRoundOverScore_ = value;
        }
        result.hasSCFightRoundOverScore = true;
        return this;
      }
      public Builder clearSCFightRoundOverScore() {
        result.hasSCFightRoundOverScore = false;
        result.sCFightRoundOverScore_ = com.randioo.compare_collections_server.protocol.Fight.SCFightRoundOverScore.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightNoticeBattle SCFightNoticeBattle = 95;
      public boolean hasSCFightNoticeBattle() {
        return result.hasSCFightNoticeBattle();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBattle getSCFightNoticeBattle() {
        return result.getSCFightNoticeBattle();
      }
      public Builder setSCFightNoticeBattle(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBattle value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightNoticeBattle = true;
        result.sCFightNoticeBattle_ = value;
        return this;
      }
      public Builder setSCFightNoticeBattle(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBattle.Builder builderForValue) {
        result.hasSCFightNoticeBattle = true;
        result.sCFightNoticeBattle_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightNoticeBattle(com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBattle value) {
        if (result.hasSCFightNoticeBattle() &&
            result.sCFightNoticeBattle_ != com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBattle.getDefaultInstance()) {
          result.sCFightNoticeBattle_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBattle.newBuilder(result.sCFightNoticeBattle_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightNoticeBattle_ = value;
        }
        result.hasSCFightNoticeBattle = true;
        return this;
      }
      public Builder clearSCFightNoticeBattle() {
        result.hasSCFightNoticeBattle = false;
        result.sCFightNoticeBattle_ = com.randioo.compare_collections_server.protocol.Fight.SCFightNoticeBattle.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.FightReconnectDataResponse FightReconnectDataResponse = 96;
      public boolean hasFightReconnectDataResponse() {
        return result.hasFightReconnectDataResponse();
      }
      public com.randioo.compare_collections_server.protocol.Fight.FightReconnectDataResponse getFightReconnectDataResponse() {
        return result.getFightReconnectDataResponse();
      }
      public Builder setFightReconnectDataResponse(com.randioo.compare_collections_server.protocol.Fight.FightReconnectDataResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightReconnectDataResponse = true;
        result.fightReconnectDataResponse_ = value;
        return this;
      }
      public Builder setFightReconnectDataResponse(com.randioo.compare_collections_server.protocol.Fight.FightReconnectDataResponse.Builder builderForValue) {
        result.hasFightReconnectDataResponse = true;
        result.fightReconnectDataResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightReconnectDataResponse(com.randioo.compare_collections_server.protocol.Fight.FightReconnectDataResponse value) {
        if (result.hasFightReconnectDataResponse() &&
            result.fightReconnectDataResponse_ != com.randioo.compare_collections_server.protocol.Fight.FightReconnectDataResponse.getDefaultInstance()) {
          result.fightReconnectDataResponse_ =
            com.randioo.compare_collections_server.protocol.Fight.FightReconnectDataResponse.newBuilder(result.fightReconnectDataResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightReconnectDataResponse_ = value;
        }
        result.hasFightReconnectDataResponse = true;
        return this;
      }
      public Builder clearFightReconnectDataResponse() {
        result.hasFightReconnectDataResponse = false;
        result.fightReconnectDataResponse_ = com.randioo.compare_collections_server.protocol.Fight.FightReconnectDataResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightMaxBet SCFightMaxBet = 97;
      public boolean hasSCFightMaxBet() {
        return result.hasSCFightMaxBet();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightMaxBet getSCFightMaxBet() {
        return result.getSCFightMaxBet();
      }
      public Builder setSCFightMaxBet(com.randioo.compare_collections_server.protocol.Fight.SCFightMaxBet value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightMaxBet = true;
        result.sCFightMaxBet_ = value;
        return this;
      }
      public Builder setSCFightMaxBet(com.randioo.compare_collections_server.protocol.Fight.SCFightMaxBet.Builder builderForValue) {
        result.hasSCFightMaxBet = true;
        result.sCFightMaxBet_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightMaxBet(com.randioo.compare_collections_server.protocol.Fight.SCFightMaxBet value) {
        if (result.hasSCFightMaxBet() &&
            result.sCFightMaxBet_ != com.randioo.compare_collections_server.protocol.Fight.SCFightMaxBet.getDefaultInstance()) {
          result.sCFightMaxBet_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightMaxBet.newBuilder(result.sCFightMaxBet_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightMaxBet_ = value;
        }
        result.hasSCFightMaxBet = true;
        return this;
      }
      public Builder clearSCFightMaxBet() {
        result.hasSCFightMaxBet = false;
        result.sCFightMaxBet_ = com.randioo.compare_collections_server.protocol.Fight.SCFightMaxBet.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.MatchResponse MatchResponse = 98;
      public boolean hasMatchResponse() {
        return result.hasMatchResponse();
      }
      public com.randioo.compare_collections_server.protocol.Match.MatchResponse getMatchResponse() {
        return result.getMatchResponse();
      }
      public Builder setMatchResponse(com.randioo.compare_collections_server.protocol.Match.MatchResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMatchResponse = true;
        result.matchResponse_ = value;
        return this;
      }
      public Builder setMatchResponse(com.randioo.compare_collections_server.protocol.Match.MatchResponse.Builder builderForValue) {
        result.hasMatchResponse = true;
        result.matchResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMatchResponse(com.randioo.compare_collections_server.protocol.Match.MatchResponse value) {
        if (result.hasMatchResponse() &&
            result.matchResponse_ != com.randioo.compare_collections_server.protocol.Match.MatchResponse.getDefaultInstance()) {
          result.matchResponse_ =
            com.randioo.compare_collections_server.protocol.Match.MatchResponse.newBuilder(result.matchResponse_).mergeFrom(value).buildPartial();
        } else {
          result.matchResponse_ = value;
        }
        result.hasMatchResponse = true;
        return this;
      }
      public Builder clearMatchResponse() {
        result.hasMatchResponse = false;
        result.matchResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.MatchCancelResponse MatchCancelResponse = 99;
      public boolean hasMatchCancelResponse() {
        return result.hasMatchCancelResponse();
      }
      public com.randioo.compare_collections_server.protocol.Match.MatchCancelResponse getMatchCancelResponse() {
        return result.getMatchCancelResponse();
      }
      public Builder setMatchCancelResponse(com.randioo.compare_collections_server.protocol.Match.MatchCancelResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMatchCancelResponse = true;
        result.matchCancelResponse_ = value;
        return this;
      }
      public Builder setMatchCancelResponse(com.randioo.compare_collections_server.protocol.Match.MatchCancelResponse.Builder builderForValue) {
        result.hasMatchCancelResponse = true;
        result.matchCancelResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMatchCancelResponse(com.randioo.compare_collections_server.protocol.Match.MatchCancelResponse value) {
        if (result.hasMatchCancelResponse() &&
            result.matchCancelResponse_ != com.randioo.compare_collections_server.protocol.Match.MatchCancelResponse.getDefaultInstance()) {
          result.matchCancelResponse_ =
            com.randioo.compare_collections_server.protocol.Match.MatchCancelResponse.newBuilder(result.matchCancelResponse_).mergeFrom(value).buildPartial();
        } else {
          result.matchCancelResponse_ = value;
        }
        result.hasMatchCancelResponse = true;
        return this;
      }
      public Builder clearMatchCancelResponse() {
        result.hasMatchCancelResponse = false;
        result.matchCancelResponse_ = com.randioo.compare_collections_server.protocol.Match.MatchCancelResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightGameRoleData SCFightGameRoleData = 100;
      public boolean hasSCFightGameRoleData() {
        return result.hasSCFightGameRoleData();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightGameRoleData getSCFightGameRoleData() {
        return result.getSCFightGameRoleData();
      }
      public Builder setSCFightGameRoleData(com.randioo.compare_collections_server.protocol.Fight.SCFightGameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightGameRoleData = true;
        result.sCFightGameRoleData_ = value;
        return this;
      }
      public Builder setSCFightGameRoleData(com.randioo.compare_collections_server.protocol.Fight.SCFightGameRoleData.Builder builderForValue) {
        result.hasSCFightGameRoleData = true;
        result.sCFightGameRoleData_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightGameRoleData(com.randioo.compare_collections_server.protocol.Fight.SCFightGameRoleData value) {
        if (result.hasSCFightGameRoleData() &&
            result.sCFightGameRoleData_ != com.randioo.compare_collections_server.protocol.Fight.SCFightGameRoleData.getDefaultInstance()) {
          result.sCFightGameRoleData_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightGameRoleData.newBuilder(result.sCFightGameRoleData_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightGameRoleData_ = value;
        }
        result.hasSCFightGameRoleData = true;
        return this;
      }
      public Builder clearSCFightGameRoleData() {
        result.hasSCFightGameRoleData = false;
        result.sCFightGameRoleData_ = com.randioo.compare_collections_server.protocol.Fight.SCFightGameRoleData.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCMatchResult SCMatchResult = 101;
      public boolean hasSCMatchResult() {
        return result.hasSCMatchResult();
      }
      public com.randioo.compare_collections_server.protocol.Match.SCMatchResult getSCMatchResult() {
        return result.getSCMatchResult();
      }
      public Builder setSCMatchResult(com.randioo.compare_collections_server.protocol.Match.SCMatchResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCMatchResult = true;
        result.sCMatchResult_ = value;
        return this;
      }
      public Builder setSCMatchResult(com.randioo.compare_collections_server.protocol.Match.SCMatchResult.Builder builderForValue) {
        result.hasSCMatchResult = true;
        result.sCMatchResult_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCMatchResult(com.randioo.compare_collections_server.protocol.Match.SCMatchResult value) {
        if (result.hasSCMatchResult() &&
            result.sCMatchResult_ != com.randioo.compare_collections_server.protocol.Match.SCMatchResult.getDefaultInstance()) {
          result.sCMatchResult_ =
            com.randioo.compare_collections_server.protocol.Match.SCMatchResult.newBuilder(result.sCMatchResult_).mergeFrom(value).buildPartial();
        } else {
          result.sCMatchResult_ = value;
        }
        result.hasSCMatchResult = true;
        return this;
      }
      public Builder clearSCMatchResult() {
        result.hasSCMatchResult = false;
        result.sCMatchResult_ = com.randioo.compare_collections_server.protocol.Match.SCMatchResult.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCMatchKickGame SCMatchKickGame = 102;
      public boolean hasSCMatchKickGame() {
        return result.hasSCMatchKickGame();
      }
      public com.randioo.compare_collections_server.protocol.Match.SCMatchKickGame getSCMatchKickGame() {
        return result.getSCMatchKickGame();
      }
      public Builder setSCMatchKickGame(com.randioo.compare_collections_server.protocol.Match.SCMatchKickGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCMatchKickGame = true;
        result.sCMatchKickGame_ = value;
        return this;
      }
      public Builder setSCMatchKickGame(com.randioo.compare_collections_server.protocol.Match.SCMatchKickGame.Builder builderForValue) {
        result.hasSCMatchKickGame = true;
        result.sCMatchKickGame_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCMatchKickGame(com.randioo.compare_collections_server.protocol.Match.SCMatchKickGame value) {
        if (result.hasSCMatchKickGame() &&
            result.sCMatchKickGame_ != com.randioo.compare_collections_server.protocol.Match.SCMatchKickGame.getDefaultInstance()) {
          result.sCMatchKickGame_ =
            com.randioo.compare_collections_server.protocol.Match.SCMatchKickGame.newBuilder(result.sCMatchKickGame_).mergeFrom(value).buildPartial();
        } else {
          result.sCMatchKickGame_ = value;
        }
        result.hasSCMatchKickGame = true;
        return this;
      }
      public Builder clearSCMatchKickGame() {
        result.hasSCMatchKickGame = false;
        result.sCMatchKickGame_ = com.randioo.compare_collections_server.protocol.Match.SCMatchKickGame.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.SCFightBattleOutCards SCFightBattleOutCards = 103;
      public boolean hasSCFightBattleOutCards() {
        return result.hasSCFightBattleOutCards();
      }
      public com.randioo.compare_collections_server.protocol.Fight.SCFightBattleOutCards getSCFightBattleOutCards() {
        return result.getSCFightBattleOutCards();
      }
      public Builder setSCFightBattleOutCards(com.randioo.compare_collections_server.protocol.Fight.SCFightBattleOutCards value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightBattleOutCards = true;
        result.sCFightBattleOutCards_ = value;
        return this;
      }
      public Builder setSCFightBattleOutCards(com.randioo.compare_collections_server.protocol.Fight.SCFightBattleOutCards.Builder builderForValue) {
        result.hasSCFightBattleOutCards = true;
        result.sCFightBattleOutCards_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightBattleOutCards(com.randioo.compare_collections_server.protocol.Fight.SCFightBattleOutCards value) {
        if (result.hasSCFightBattleOutCards() &&
            result.sCFightBattleOutCards_ != com.randioo.compare_collections_server.protocol.Fight.SCFightBattleOutCards.getDefaultInstance()) {
          result.sCFightBattleOutCards_ =
            com.randioo.compare_collections_server.protocol.Fight.SCFightBattleOutCards.newBuilder(result.sCFightBattleOutCards_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightBattleOutCards_ = value;
        }
        result.hasSCFightBattleOutCards = true;
        return this;
      }
      public Builder clearSCFightBattleOutCards() {
        result.hasSCFightBattleOutCards = false;
        result.sCFightBattleOutCards_ = com.randioo.compare_collections_server.protocol.Fight.SCFightBattleOutCards.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.SC)
    }
    
    static {
      defaultInstance = new SC(true);
      com.randioo.compare_collections_server.protocol.ServerMessage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.SC)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_SC_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_SC_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023ServerMessage.proto\022/com.randioo.compa" +
      "re_collections_server.protocol\032\013Login.pr" +
      "oto\032\nRole.proto\032\013Match.proto\032\013Fight.prot" +
      "o\032\016Settings.proto\032\nRace.proto\032\013Heart.pro" +
      "to\032\010Gm.proto\"\243N\n\002SC\022U\n\rHeartResponse\030\001 \001" +
      "(\0132>.com.randioo.compare_collections_ser" +
      "ver.protocol.HeartResponse\022I\n\007SCHeart\030\002 " +
      "\001(\01328.com.randioo.compare_collections_se" +
      "rver.protocol.SCHeart\022k\n\030LoginGetRoleDat" +
      "aResponse\030\003 \001(\0132I.com.randioo.compare_co",
      "llections_server.protocol.LoginGetRoleDa" +
      "taResponse\022[\n\020SCLoginOtherSide\030\004 \001(\0132A.c" +
      "om.randioo.compare_collections_server.pr" +
      "otocol.SCLoginOtherSide\022_\n\022RoleRenameRes" +
      "ponse\030\005 \001(\0132C.com.randioo.compare_collec" +
      "tions_server.protocol.RoleRenameResponse" +
      "\022i\n\027RoleGetRoleDataResponse\030\006 \001(\0132H.com." +
      "randioo.compare_collections_server.proto" +
      "col.RoleGetRoleDataResponse\022i\n\027SCRoleRan" +
      "diooCoinChange\030\007 \001(\0132H.com.randioo.compa",
      "re_collections_server.protocol.SCRoleRan" +
      "diooCoinChange\022i\n\027MatchCreateGameRespons" +
      "e\030\010 \001(\0132H.com.randioo.compare_collection" +
      "s_server.protocol.MatchCreateGameRespons" +
      "e\022e\n\025MatchJoinGameResponse\030\t \001(\0132F.com.r" +
      "andioo.compare_collections_server.protoc" +
      "ol.MatchJoinGameResponse\022Y\n\017SCMatchJoinG" +
      "ame\030\n \001(\0132@.com.randioo.compare_collecti" +
      "ons_server.protocol.SCMatchJoinGame\022Y\n\017S" +
      "CMatchMineInfo\030\013 \001(\0132@.com.randioo.compa",
      "re_collections_server.protocol.SCMatchMi" +
      "neInfo\022]\n\021SCMatchCreateGame\030\014 \001(\0132B.com." +
      "randioo.compare_collections_server.proto" +
      "col.SCMatchCreateGame\022c\n\024MatchPreJoinRes" +
      "ponse\030\r \001(\0132E.com.randioo.compare_collec" +
      "tions_server.protocol.MatchPreJoinRespon" +
      "se\022_\n\022SCFightNoticeReady\030\016 \001(\0132C.com.ran" +
      "dioo.compare_collections_server.protocol" +
      ".SCFightNoticeReady\022_\n\022FightReadyRespons" +
      "e\030\017 \001(\0132C.com.randioo.compare_collection",
      "s_server.protocol.FightReadyResponse\022S\n\014" +
      "SCFightReady\030\020 \001(\0132=.com.randioo.compare" +
      "_collections_server.protocol.SCFightRead" +
      "y\022S\n\014SCFightStart\030\021 \001(\0132=.com.randioo.co" +
      "mpare_collections_server.protocol.SCFigh" +
      "tStart\022e\n\025FightExitGameResponse\030\022 \001(\0132F." +
      "com.randioo.compare_collections_server.p" +
      "rotocol.FightExitGameResponse\022Y\n\017SCFight" +
      "ExitGame\030\023 \001(\0132@.com.randioo.compare_col" +
      "lections_server.protocol.SCFightExitGame",
      "\022_\n\022SCFightClearRoomId\030\024 \001(\0132C.com.randi" +
      "oo.compare_collections_server.protocol.S" +
      "CFightClearRoomId\022a\n\023SCFightLoadResource" +
      "\030\025 \001(\0132D.com.randioo.compare_collections" +
      "_server.protocol.SCFightLoadResource\022e\n\025" +
      "SCFightNoticeSendCard\030\026 \001(\0132F.com.randio" +
      "o.compare_collections_server.protocol.SC" +
      "FightNoticeSendCard\022e\n\025FightSendCardResp" +
      "onse\030\027 \001(\0132F.com.randioo.compare_collect" +
      "ions_server.protocol.FightSendCardRespon",
      "se\022o\n\032FightApplyExitGameResponse\030\030 \001(\0132K" +
      ".com.randioo.compare_collections_server." +
      "protocol.FightApplyExitGameResponse\022c\n\024S" +
      "CFightApplyExitGame\030\031 \001(\0132E.com.randioo." +
      "compare_collections_server.protocol.SCFi" +
      "ghtApplyExitGame\022o\n\032FightAgreeExitGameRe" +
      "sponse\030\032 \001(\0132K.com.randioo.compare_colle" +
      "ctions_server.protocol.FightAgreeExitGam" +
      "eResponse\022g\n\026SCFightNoticeAgreeExit\030\033 \001(" +
      "\0132G.com.randioo.compare_collections_serv",
      "er.protocol.SCFightNoticeAgreeExit\022g\n\026SC" +
      "FightApplyExitResult\030\034 \001(\0132G.com.randioo" +
      ".compare_collections_server.protocol.SCF" +
      "ightApplyExitResult\022Y\n\017SCFightSendCard\030\035" +
      " \001(\0132@.com.randioo.compare_collections_s" +
      "erver.protocol.SCFightSendCard\022[\n\020SCFigh" +
      "tRoundOver\030\036 \001(\0132A.com.randioo.compare_c" +
      "ollections_server.protocol.SCFightRoundO" +
      "ver\022Y\n\017SCFightGameOver\030\037 \001(\0132@.com.randi" +
      "oo.compare_collections_server.protocol.S",
      "CFightGameOver\022m\n\031FightGetlastRoundRespo" +
      "nse\030  \001(\0132J.com.randioo.compare_collecti" +
      "ons_server.protocol.FightGetlastRoundRes" +
      "ponse\022[\n\020SCFightTouchCard\030! \001(\0132A.com.ra" +
      "ndioo.compare_collections_server.protoco" +
      "l.SCFightTouchCard\022[\n\020FightGuoResponse\030\"" +
      " \001(\0132A.com.randioo.compare_collections_s" +
      "erver.protocol.FightGuoResponse\022O\n\nSCFig" +
      "htGuo\030# \001(\0132;.com.randioo.compare_collec" +
      "tions_server.protocol.SCFightGuo\022[\n\020SCFi",
      "ghtCountdown\030$ \001(\0132A.com.randioo.compare" +
      "_collections_server.protocol.SCFightCoun" +
      "tdown\022[\n\020SCFightPointSeat\030% \001(\0132A.com.ra" +
      "ndioo.compare_collections_server.protoco" +
      "l.SCFightPointSeat\022]\n\021SCFightDisconnect\030" +
      "& \001(\0132B.com.randioo.compare_collections_" +
      "server.protocol.SCFightDisconnect\022_\n\022SCF" +
      "ightPublicScore\030\' \001(\0132C.com.randioo.comp" +
      "are_collections_server.protocol.SCFightP" +
      "ublicScore\022S\n\014SCFightScore\030( \001(\0132=.com.r",
      "andioo.compare_collections_server.protoc" +
      "ol.SCFightScore\022s\n\034FightQueryGameConfigR" +
      "esponse\030) \001(\0132M.com.randioo.compare_coll" +
      "ections_server.protocol.FightQueryGameCo" +
      "nfigResponse\022q\n\033FightClientDispatchRespo" +
      "nse\030* \001(\0132L.com.randioo.compare_collecti" +
      "ons_server.protocol.FightClientDispatchR" +
      "esponse\022s\n\034FightClientTouchCardResponse\030" +
      "+ \001(\0132M.com.randioo.compare_collections_" +
      "server.protocol.FightClientTouchCardResp",
      "onse\022_\n\022SCFightRoomDismiss\030, \001(\0132C.com.r" +
      "andioo.compare_collections_server.protoc" +
      "ol.SCFightRoomDismiss\022s\n\034FightConfirmGam" +
      "eOverResponse\030- \001(\0132M.com.randioo.compar" +
      "e_collections_server.protocol.FightConfi" +
      "rmGameOverResponse\022k\n\030FightGetRoomDataRe" +
      "sponse\030. \001(\0132I.com.randioo.compare_colle" +
      "ctions_server.protocol.FightGetRoomDataR" +
      "esponse\022[\n\020SettingsResponse\030/ \001(\0132A.com." +
      "randioo.compare_collections_server.proto",
      "col.SettingsResponse\022c\n\024SettingsShowResp" +
      "onse\0300 \001(\0132E.com.randioo.compare_collect" +
      "ions_server.protocol.SettingsShowRespons" +
      "e\022c\n\024RaceJoinRaceResponse\0301 \001(\0132E.com.ra" +
      "ndioo.compare_collections_server.protoco" +
      "l.RaceJoinRaceResponse\022W\n\016SCRaceJoinRace" +
      "\0302 \001(\0132?.com.randioo.compare_collections" +
      "_server.protocol.SCRaceJoinRace\022e\n\025RaceS" +
      "howQueueResponse\0303 \001(\0132F.com.randioo.com" +
      "pare_collections_server.protocol.RaceSho",
      "wQueueResponse\022]\n\021SCRaceQueueChange\0304 \001(" +
      "\0132B.com.randioo.compare_collections_serv" +
      "er.protocol.SCRaceQueueChange\022g\n\026MatchCh" +
      "eckRoomResponse\0305 \001(\0132G.com.randioo.comp" +
      "are_collections_server.protocol.MatchChe" +
      "ckRoomResponse\022[\n\020SCFightNoticeBet\0306 \001(\013" +
      "2A.com.randioo.compare_collections_serve" +
      "r.protocol.SCFightNoticeBet\022[\n\020FightBetR" +
      "esponse\0307 \001(\0132A.com.randioo.compare_coll" +
      "ections_server.protocol.FightBetResponse",
      "\022Y\n\017SCFightBetScore\0308 \001(\0132@.com.randioo." +
      "compare_collections_server.protocol.SCFi" +
      "ghtBetScore\022Y\n\017SCFightDispatch\0309 \001(\0132@.c" +
      "om.randioo.compare_collections_server.pr" +
      "otocol.SCFightDispatch\022W\n\016SCFightAddCard" +
      "\030: \001(\0132?.com.randioo.compare_collections" +
      "_server.protocol.SCFightAddCard\022c\n\024SCFig" +
      "htChooseAddCard\030; \001(\0132E.com.randioo.comp" +
      "are_collections_server.protocol.SCFightC" +
      "hooseAddCard\022o\n\032FightChooseAddCardRespon",
      "se\030< \001(\0132K.com.randioo.compare_collectio" +
      "ns_server.protocol.FightChooseAddCardRes" +
      "ponse\022Y\n\017SCFightCardType\030= \001(\0132@.com.ran" +
      "dioo.compare_collections_server.protocol" +
      ".SCFightCardType\022]\n\021GmEnvVarsResponse\030> " +
      "\001(\0132B.com.randioo.compare_collections_se" +
      "rver.protocol.GmEnvVarsResponse\022_\n\022GmGam" +
      "eInfoResponse\030? \001(\0132C.com.randioo.compar" +
      "e_collections_server.protocol.GmGameInfo" +
      "Response\022g\n\026GmDispatchCardResponse\030@ \001(\013",
      "2G.com.randioo.compare_collections_serve" +
      "r.protocol.GmDispatchCardResponse\022Y\n\017GmR" +
      "oundResponse\030A \001(\0132@.com.randioo.compare" +
      "_collections_server.protocol.GmRoundResp" +
      "onse\022]\n\021SCFightWatchCards\030B \001(\0132B.com.ra" +
      "ndioo.compare_collections_server.protoco" +
      "l.SCFightWatchCards\022c\n\024FightLookPaiRespo" +
      "nse\030C \001(\0132E.com.randioo.compare_collecti" +
      "ons_server.protocol.FightLookPaiResponse" +
      "\022[\n\020FightGenResponse\030D \001(\0132A.com.randioo",
      ".compare_collections_server.protocol.Fig" +
      "htGenResponse\022W\n\016SCFightAutoBet\030E \001(\0132?." +
      "com.randioo.compare_collections_server.p" +
      "rotocol.SCFightAutoBet\022U\n\rSCFightBigger\030" +
      "F \001(\0132>.com.randioo.compare_collections_" +
      "server.protocol.SCFightBigger\022a\n\023FightBi" +
      "ggerResponse\030G \001(\0132D.com.randioo.compare" +
      "_collections_server.protocol.FightBigger" +
      "Response\022a\n\023FightGiveUpResponse\030H \001(\0132D." +
      "com.randioo.compare_collections_server.p",
      "rotocol.FightGiveUpResponse\022[\n\020FightTwoR" +
      "esponse\030I \001(\0132A.com.randioo.compare_coll" +
      "ections_server.protocol.FightTwoResponse" +
      "\022O\n\nSCFightTwo\030J \001(\0132;.com.randioo.compa" +
      "re_collections_server.protocol.SCFightTw" +
      "o\022U\n\rSCFightGiveUp\030K \001(\0132>.com.randioo.c" +
      "ompare_collections_server.protocol.SCFig" +
      "htGiveUp\022O\n\nSCFightGen\030L \001(\0132;.com.randi" +
      "oo.compare_collections_server.protocol.S" +
      "CFightGen\022g\n\026SCFightButtonDisappear\030M \001(",
      "\0132G.com.randioo.compare_collections_serv" +
      "er.protocol.SCFightButtonDisappear\022W\n\016SC" +
      "FightMingPai\030N \001(\0132?.com.randioo.compare" +
      "_collections_server.protocol.SCFightMing" +
      "Pai\022W\n\016SCFightAllSeat\030O \001(\0132?.com.randio" +
      "o.compare_collections_server.protocol.SC" +
      "FightAllSeat\022a\n\023SCFightBiggerButton\030P \001(" +
      "\0132D.com.randioo.compare_collections_serv" +
      "er.protocol.SCFightBiggerButton\022]\n\021SCFig" +
      "htRoundCount\030Q \001(\0132B.com.randioo.compare",
      "_collections_server.protocol.SCFightRoun" +
      "dCount\022Y\n\017SCMatchExitGame\030R \001(\0132@.com.ra" +
      "ndioo.compare_collections_server.protoco" +
      "l.SCMatchExitGame\022e\n\025MatchExitGameRespon" +
      "se\030S \001(\0132F.com.randioo.compare_collectio" +
      "ns_server.protocol.MatchExitGameResponse" +
      "\022]\n\021SCMatchJoinInGame\030T \001(\0132B.com.randio" +
      "o.compare_collections_server.protocol.SC" +
      "MatchJoinInGame\022i\n\027MatchJoinInGameRespon" +
      "se\030U \001(\0132H.com.randioo.compare_collectio",
      "ns_server.protocol.MatchJoinInGameRespon" +
      "se\022U\n\rSCFightBetAll\030V \001(\0132>.com.randioo." +
      "compare_collections_server.protocol.SCFi" +
      "ghtBetAll\022a\n\023FightBetAllResponse\030W \001(\0132D" +
      ".com.randioo.compare_collections_server." +
      "protocol.FightBetAllResponse\022g\n\026FightGam" +
      "eStartResponse\030X \001(\0132G.com.randioo.compa" +
      "re_collections_server.protocol.FightGame" +
      "StartResponse\022Y\n\017SCFightPlayTalk\030Y \001(\0132@" +
      ".com.randioo.compare_collections_server.",
      "protocol.SCFightPlayTalk\022e\n\025SCFightNotic" +
      "eCallType\030Z \001(\0132F.com.randioo.compare_co" +
      "llections_server.protocol.SCFightNoticeC" +
      "allType\022e\n\025FightCutCardsResponse\030[ \001(\0132F" +
      ".com.randioo.compare_collections_server." +
      "protocol.FightCutCardsResponse\022Y\n\017SCFigh" +
      "tCutCards\030\\ \001(\0132@.com.randioo.compare_co" +
      "llections_server.protocol.SCFightCutCard" +
      "s\022g\n\026SCFightOpenCardsResult\030] \001(\0132G.com." +
      "randioo.compare_collections_server.proto",
      "col.SCFightOpenCardsResult\022e\n\025SCFightRou" +
      "ndOverScore\030^ \001(\0132F.com.randioo.compare_" +
      "collections_server.protocol.SCFightRound" +
      "OverScore\022a\n\023SCFightNoticeBattle\030_ \001(\0132D" +
      ".com.randioo.compare_collections_server." +
      "protocol.SCFightNoticeBattle\022o\n\032FightRec" +
      "onnectDataResponse\030` \001(\0132K.com.randioo.c" +
      "ompare_collections_server.protocol.Fight" +
      "ReconnectDataResponse\022U\n\rSCFightMaxBet\030a" +
      " \001(\0132>.com.randioo.compare_collections_s",
      "erver.protocol.SCFightMaxBet\022U\n\rMatchRes" +
      "ponse\030b \001(\0132>.com.randioo.compare_collec" +
      "tions_server.protocol.MatchResponse\022a\n\023M" +
      "atchCancelResponse\030c \001(\0132D.com.randioo.c" +
      "ompare_collections_server.protocol.Match" +
      "CancelResponse\022a\n\023SCFightGameRoleData\030d " +
      "\001(\0132D.com.randioo.compare_collections_se" +
      "rver.protocol.SCFightGameRoleData\022U\n\rSCM" +
      "atchResult\030e \001(\0132>.com.randioo.compare_c" +
      "ollections_server.protocol.SCMatchResult",
      "\022Y\n\017SCMatchKickGame\030f \001(\0132@.com.randioo." +
      "compare_collections_server.protocol.SCMa" +
      "tchKickGame\022e\n\025SCFightBattleOutCards\030g \001" +
      "(\0132F.com.randioo.compare_collections_ser" +
      "ver.protocol.SCFightBattleOutCards"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_randioo_compare_collections_server_protocol_SC_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_randioo_compare_collections_server_protocol_SC_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_SC_descriptor,
              new java.lang.String[] { "HeartResponse", "SCHeart", "LoginGetRoleDataResponse", "SCLoginOtherSide", "RoleRenameResponse", "RoleGetRoleDataResponse", "SCRoleRandiooCoinChange", "MatchCreateGameResponse", "MatchJoinGameResponse", "SCMatchJoinGame", "SCMatchMineInfo", "SCMatchCreateGame", "MatchPreJoinResponse", "SCFightNoticeReady", "FightReadyResponse", "SCFightReady", "SCFightStart", "FightExitGameResponse", "SCFightExitGame", "SCFightClearRoomId", "SCFightLoadResource", "SCFightNoticeSendCard", "FightSendCardResponse", "FightApplyExitGameResponse", "SCFightApplyExitGame", "FightAgreeExitGameResponse", "SCFightNoticeAgreeExit", "SCFightApplyExitResult", "SCFightSendCard", "SCFightRoundOver", "SCFightGameOver", "FightGetlastRoundResponse", "SCFightTouchCard", "FightGuoResponse", "SCFightGuo", "SCFightCountdown", "SCFightPointSeat", "SCFightDisconnect", "SCFightPublicScore", "SCFightScore", "FightQueryGameConfigResponse", "FightClientDispatchResponse", "FightClientTouchCardResponse", "SCFightRoomDismiss", "FightConfirmGameOverResponse", "FightGetRoomDataResponse", "SettingsResponse", "SettingsShowResponse", "RaceJoinRaceResponse", "SCRaceJoinRace", "RaceShowQueueResponse", "SCRaceQueueChange", "MatchCheckRoomResponse", "SCFightNoticeBet", "FightBetResponse", "SCFightBetScore", "SCFightDispatch", "SCFightAddCard", "SCFightChooseAddCard", "FightChooseAddCardResponse", "SCFightCardType", "GmEnvVarsResponse", "GmGameInfoResponse", "GmDispatchCardResponse", "GmRoundResponse", "SCFightWatchCards", "FightLookPaiResponse", "FightGenResponse", "SCFightAutoBet", "SCFightBigger", "FightBiggerResponse", "FightGiveUpResponse", "FightTwoResponse", "SCFightTwo", "SCFightGiveUp", "SCFightGen", "SCFightButtonDisappear", "SCFightMingPai", "SCFightAllSeat", "SCFightBiggerButton", "SCFightRoundCount", "SCMatchExitGame", "MatchExitGameResponse", "SCMatchJoinInGame", "MatchJoinInGameResponse", "SCFightBetAll", "FightBetAllResponse", "FightGameStartResponse", "SCFightPlayTalk", "SCFightNoticeCallType", "FightCutCardsResponse", "SCFightCutCards", "SCFightOpenCardsResult", "SCFightRoundOverScore", "SCFightNoticeBattle", "FightReconnectDataResponse", "SCFightMaxBet", "MatchResponse", "MatchCancelResponse", "SCFightGameRoleData", "SCMatchResult", "SCMatchKickGame", "SCFightBattleOutCards", },
              com.randioo.compare_collections_server.protocol.ServerMessage.SC.class,
              com.randioo.compare_collections_server.protocol.ServerMessage.SC.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.randioo.compare_collections_server.protocol.Login.getDescriptor(),
          com.randioo.compare_collections_server.protocol.Role.getDescriptor(),
          com.randioo.compare_collections_server.protocol.Match.getDescriptor(),
          com.randioo.compare_collections_server.protocol.Fight.getDescriptor(),
          com.randioo.compare_collections_server.protocol.Settings.getDescriptor(),
          com.randioo.compare_collections_server.protocol.Race.getDescriptor(),
          com.randioo.compare_collections_server.protocol.Heart.getDescriptor(),
          com.randioo.compare_collections_server.protocol.Gm.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
