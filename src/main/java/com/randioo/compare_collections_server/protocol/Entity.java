// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Entity.proto

package com.randioo.compare_collections_server.protocol;

public final class Entity {
  private Entity() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum PayMode
      implements com.google.protobuf.ProtocolMessageEnum {
    MASTER_MODE(0, 1),
    AA_MODE(1, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static PayMode valueOf(int value) {
      switch (value) {
        case 1: return MASTER_MODE;
        case 2: return AA_MODE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<PayMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PayMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PayMode>() {
            public PayMode findValueByNumber(int number) {
              return PayMode.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final PayMode[] VALUES = {
      MASTER_MODE, AA_MODE, 
    };
    public static PayMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private PayMode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.randioo.compare_collections_server.protocol.Entity.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.randioo.compare_collections_server.protocol.PayMode)
  }
  
  public enum ZhuangType
      implements com.google.protobuf.ProtocolMessageEnum {
    ZHUANG_FREEDOM(0, 1),
    ZHUANG_ROOM_OWNER(1, 2),
    ZHUANG_ORDER(2, 3),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static ZhuangType valueOf(int value) {
      switch (value) {
        case 1: return ZHUANG_FREEDOM;
        case 2: return ZHUANG_ROOM_OWNER;
        case 3: return ZHUANG_ORDER;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ZhuangType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ZhuangType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ZhuangType>() {
            public ZhuangType findValueByNumber(int number) {
              return ZhuangType.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final ZhuangType[] VALUES = {
      ZHUANG_FREEDOM, ZHUANG_ROOM_OWNER, ZHUANG_ORDER, 
    };
    public static ZhuangType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private ZhuangType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.randioo.compare_collections_server.protocol.Entity.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.randioo.compare_collections_server.protocol.ZhuangType)
  }
  
  public enum SpecialCardType
      implements com.google.protobuf.ProtocolMessageEnum {
    SHUNZI(0, 1),
    WUHUA(1, 2),
    TONGHUA(2, 3),
    HULU(3, 4),
    ZHADAN(4, 5),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static SpecialCardType valueOf(int value) {
      switch (value) {
        case 1: return SHUNZI;
        case 2: return WUHUA;
        case 3: return TONGHUA;
        case 4: return HULU;
        case 5: return ZHADAN;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<SpecialCardType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SpecialCardType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SpecialCardType>() {
            public SpecialCardType findValueByNumber(int number) {
              return SpecialCardType.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.getDescriptor().getEnumTypes().get(2);
    }
    
    private static final SpecialCardType[] VALUES = {
      SHUNZI, WUHUA, TONGHUA, HULU, ZHADAN, 
    };
    public static SpecialCardType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private SpecialCardType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.randioo.compare_collections_server.protocol.Entity.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.randioo.compare_collections_server.protocol.SpecialCardType)
  }
  
  public enum GameOverMethod
      implements com.google.protobuf.ProtocolMessageEnum {
    GAME_OVER_TIME(0, 1),
    GAME_OVER_ROUND(1, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static GameOverMethod valueOf(int value) {
      switch (value) {
        case 1: return GAME_OVER_TIME;
        case 2: return GAME_OVER_ROUND;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<GameOverMethod>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GameOverMethod>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameOverMethod>() {
            public GameOverMethod findValueByNumber(int number) {
              return GameOverMethod.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.getDescriptor().getEnumTypes().get(3);
    }
    
    private static final GameOverMethod[] VALUES = {
      GAME_OVER_TIME, GAME_OVER_ROUND, 
    };
    public static GameOverMethod valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private GameOverMethod(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.randioo.compare_collections_server.protocol.Entity.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.randioo.compare_collections_server.protocol.GameOverMethod)
  }
  
  public enum GameType
      implements com.google.protobuf.ProtocolMessageEnum {
    GAME_TYPE_MATCH(0, 1),
    GAME_TYPE_FRIEND(1, 2),
    GAME_TYPE_GOLD(2, 3),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static GameType valueOf(int value) {
      switch (value) {
        case 1: return GAME_TYPE_MATCH;
        case 2: return GAME_TYPE_FRIEND;
        case 3: return GAME_TYPE_GOLD;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<GameType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GameType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameType>() {
            public GameType findValueByNumber(int number) {
              return GameType.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.getDescriptor().getEnumTypes().get(4);
    }
    
    private static final GameType[] VALUES = {
      GAME_TYPE_MATCH, GAME_TYPE_FRIEND, GAME_TYPE_GOLD, 
    };
    public static GameType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private GameType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.randioo.compare_collections_server.protocol.Entity.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.randioo.compare_collections_server.protocol.GameType)
  }
  
  public enum GameState
      implements com.google.protobuf.ProtocolMessageEnum {
    GAME_STATE_PREPARE(0, 1),
    GAME_STATE_START(1, 2),
    GAME_STATE_END(2, 3),
    GAME_STATE_WAIT(3, 4),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static GameState valueOf(int value) {
      switch (value) {
        case 1: return GAME_STATE_PREPARE;
        case 2: return GAME_STATE_START;
        case 3: return GAME_STATE_END;
        case 4: return GAME_STATE_WAIT;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<GameState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GameState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameState>() {
            public GameState findValueByNumber(int number) {
              return GameState.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.getDescriptor().getEnumTypes().get(5);
    }
    
    private static final GameState[] VALUES = {
      GAME_STATE_PREPARE, GAME_STATE_START, GAME_STATE_END, GAME_STATE_WAIT, 
    };
    public static GameState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private GameState(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.randioo.compare_collections_server.protocol.Entity.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.randioo.compare_collections_server.protocol.GameState)
  }
  
  public enum KickReason
      implements com.google.protobuf.ProtocolMessageEnum {
    GOLD_NOT_ENOUGH(0, 1),
    NOT_IN_GAME(1, 2),
    NOT_ONLINE(2, 3),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static KickReason valueOf(int value) {
      switch (value) {
        case 1: return GOLD_NOT_ENOUGH;
        case 2: return NOT_IN_GAME;
        case 3: return NOT_ONLINE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<KickReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<KickReason>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<KickReason>() {
            public KickReason findValueByNumber(int number) {
              return KickReason.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.getDescriptor().getEnumTypes().get(6);
    }
    
    private static final KickReason[] VALUES = {
      GOLD_NOT_ENOUGH, NOT_IN_GAME, NOT_ONLINE, 
    };
    public static KickReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private KickReason(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.randioo.compare_collections_server.protocol.Entity.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.randioo.compare_collections_server.protocol.KickReason)
  }
  
  public enum OverMethod
      implements com.google.protobuf.ProtocolMessageEnum {
    LOSS(0, 0),
    WIN(1, 1),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static OverMethod valueOf(int value) {
      switch (value) {
        case 0: return LOSS;
        case 1: return WIN;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<OverMethod>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<OverMethod>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OverMethod>() {
            public OverMethod findValueByNumber(int number) {
              return OverMethod.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.getDescriptor().getEnumTypes().get(7);
    }
    
    private static final OverMethod[] VALUES = {
      LOSS, WIN, 
    };
    public static OverMethod valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private OverMethod(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.randioo.compare_collections_server.protocol.Entity.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.randioo.compare_collections_server.protocol.OverMethod)
  }
  
  public enum FightVoteApplyExit
      implements com.google.protobuf.ProtocolMessageEnum {
    VOTE_IDLE(0, 0),
    VOTE_AGREE(1, 1),
    VOTE_REJECT(2, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static FightVoteApplyExit valueOf(int value) {
      switch (value) {
        case 0: return VOTE_IDLE;
        case 1: return VOTE_AGREE;
        case 2: return VOTE_REJECT;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<FightVoteApplyExit>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<FightVoteApplyExit>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FightVoteApplyExit>() {
            public FightVoteApplyExit findValueByNumber(int number) {
              return FightVoteApplyExit.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.getDescriptor().getEnumTypes().get(8);
    }
    
    private static final FightVoteApplyExit[] VALUES = {
      VOTE_IDLE, VOTE_AGREE, VOTE_REJECT, 
    };
    public static FightVoteApplyExit valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private FightVoteApplyExit(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.randioo.compare_collections_server.protocol.Entity.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.randioo.compare_collections_server.protocol.FightVoteApplyExit)
  }
  
  public static final class RoleData extends
      com.google.protobuf.GeneratedMessage {
    // Use RoleData.newBuilder() to construct.
    private RoleData() {
      initFields();
    }
    private RoleData(boolean noInit) {}
    
    private static final RoleData defaultInstance;
    public static RoleData getDefaultInstance() {
      return defaultInstance;
    }
    
    public RoleData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_RoleData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_RoleData_fieldAccessorTable;
    }
    
    // optional int32 roleId = 1;
    public static final int ROLEID_FIELD_NUMBER = 1;
    private boolean hasRoleId;
    private int roleId_ = 0;
    public boolean hasRoleId() { return hasRoleId; }
    public int getRoleId() { return roleId_; }
    
    // optional string roomId = 2;
    public static final int ROOMID_FIELD_NUMBER = 2;
    private boolean hasRoomId;
    private java.lang.String roomId_ = "";
    public boolean hasRoomId() { return hasRoomId; }
    public java.lang.String getRoomId() { return roomId_; }
    
    // optional int32 point = 3;
    public static final int POINT_FIELD_NUMBER = 3;
    private boolean hasPoint;
    private int point_ = 0;
    public boolean hasPoint() { return hasPoint; }
    public int getPoint() { return point_; }
    
    // optional int32 sex = 4;
    public static final int SEX_FIELD_NUMBER = 4;
    private boolean hasSex;
    private int sex_ = 0;
    public boolean hasSex() { return hasSex; }
    public int getSex() { return sex_; }
    
    // optional int32 serverTime = 5;
    public static final int SERVERTIME_FIELD_NUMBER = 5;
    private boolean hasServerTime;
    private int serverTime_ = 0;
    public boolean hasServerTime() { return hasServerTime; }
    public int getServerTime() { return serverTime_; }
    
    // optional string name = 6;
    public static final int NAME_FIELD_NUMBER = 6;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional string headImageUrl = 7;
    public static final int HEADIMAGEURL_FIELD_NUMBER = 7;
    private boolean hasHeadImageUrl;
    private java.lang.String headImageUrl_ = "";
    public boolean hasHeadImageUrl() { return hasHeadImageUrl; }
    public java.lang.String getHeadImageUrl() { return headImageUrl_; }
    
    // optional bytes gameOverSC = 8;
    public static final int GAMEOVERSC_FIELD_NUMBER = 8;
    private boolean hasGameOverSC;
    private com.google.protobuf.ByteString gameOverSC_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasGameOverSC() { return hasGameOverSC; }
    public com.google.protobuf.ByteString getGameOverSC() { return gameOverSC_; }
    
    // optional int32 randiooCoin = 9;
    public static final int RANDIOOCOIN_FIELD_NUMBER = 9;
    private boolean hasRandiooCoin;
    private int randiooCoin_ = 0;
    public boolean hasRandiooCoin() { return hasRandiooCoin; }
    public int getRandiooCoin() { return randiooCoin_; }
    
    // optional int32 gold = 10;
    public static final int GOLD_FIELD_NUMBER = 10;
    private boolean hasGold;
    private int gold_ = 0;
    public boolean hasGold() { return hasGold; }
    public int getGold() { return gold_; }
    
    // optional int32 roomCard = 11;
    public static final int ROOMCARD_FIELD_NUMBER = 11;
    private boolean hasRoomCard;
    private int roomCard_ = 0;
    public boolean hasRoomCard() { return hasRoomCard; }
    public int getRoomCard() { return roomCard_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRoleId()) {
        output.writeInt32(1, getRoleId());
      }
      if (hasRoomId()) {
        output.writeString(2, getRoomId());
      }
      if (hasPoint()) {
        output.writeInt32(3, getPoint());
      }
      if (hasSex()) {
        output.writeInt32(4, getSex());
      }
      if (hasServerTime()) {
        output.writeInt32(5, getServerTime());
      }
      if (hasName()) {
        output.writeString(6, getName());
      }
      if (hasHeadImageUrl()) {
        output.writeString(7, getHeadImageUrl());
      }
      if (hasGameOverSC()) {
        output.writeBytes(8, getGameOverSC());
      }
      if (hasRandiooCoin()) {
        output.writeInt32(9, getRandiooCoin());
      }
      if (hasGold()) {
        output.writeInt32(10, getGold());
      }
      if (hasRoomCard()) {
        output.writeInt32(11, getRoomCard());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRoleId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getRoleId());
      }
      if (hasRoomId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getRoomId());
      }
      if (hasPoint()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getPoint());
      }
      if (hasSex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getSex());
      }
      if (hasServerTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getServerTime());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getName());
      }
      if (hasHeadImageUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getHeadImageUrl());
      }
      if (hasGameOverSC()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getGameOverSC());
      }
      if (hasRandiooCoin()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, getRandiooCoin());
      }
      if (hasGold()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, getGold());
      }
      if (hasRoomCard()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, getRoomCard());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.RoleData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.RoleData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.RoleData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.RoleData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.RoleData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.RoleData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.RoleData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.RoleData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.RoleData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.RoleData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.RoleData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.RoleData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.RoleData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.compare_collections_server.protocol.Entity.RoleData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.RoleData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.RoleData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.RoleData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.RoleData.getDefaultInstance()) return this;
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasPoint()) {
          setPoint(other.getPoint());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasServerTime()) {
          setServerTime(other.getServerTime());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasHeadImageUrl()) {
          setHeadImageUrl(other.getHeadImageUrl());
        }
        if (other.hasGameOverSC()) {
          setGameOverSC(other.getGameOverSC());
        }
        if (other.hasRandiooCoin()) {
          setRandiooCoin(other.getRandiooCoin());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasRoomCard()) {
          setRoomCard(other.getRoomCard());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setRoleId(input.readInt32());
              break;
            }
            case 18: {
              setRoomId(input.readString());
              break;
            }
            case 24: {
              setPoint(input.readInt32());
              break;
            }
            case 32: {
              setSex(input.readInt32());
              break;
            }
            case 40: {
              setServerTime(input.readInt32());
              break;
            }
            case 50: {
              setName(input.readString());
              break;
            }
            case 58: {
              setHeadImageUrl(input.readString());
              break;
            }
            case 66: {
              setGameOverSC(input.readBytes());
              break;
            }
            case 72: {
              setRandiooCoin(input.readInt32());
              break;
            }
            case 80: {
              setGold(input.readInt32());
              break;
            }
            case 88: {
              setRoomCard(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 roleId = 1;
      public boolean hasRoleId() {
        return result.hasRoleId();
      }
      public int getRoleId() {
        return result.getRoleId();
      }
      public Builder setRoleId(int value) {
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder clearRoleId() {
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      // optional string roomId = 2;
      public boolean hasRoomId() {
        return result.hasRoomId();
      }
      public java.lang.String getRoomId() {
        return result.getRoomId();
      }
      public Builder setRoomId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder clearRoomId() {
        result.hasRoomId = false;
        result.roomId_ = getDefaultInstance().getRoomId();
        return this;
      }
      
      // optional int32 point = 3;
      public boolean hasPoint() {
        return result.hasPoint();
      }
      public int getPoint() {
        return result.getPoint();
      }
      public Builder setPoint(int value) {
        result.hasPoint = true;
        result.point_ = value;
        return this;
      }
      public Builder clearPoint() {
        result.hasPoint = false;
        result.point_ = 0;
        return this;
      }
      
      // optional int32 sex = 4;
      public boolean hasSex() {
        return result.hasSex();
      }
      public int getSex() {
        return result.getSex();
      }
      public Builder setSex(int value) {
        result.hasSex = true;
        result.sex_ = value;
        return this;
      }
      public Builder clearSex() {
        result.hasSex = false;
        result.sex_ = 0;
        return this;
      }
      
      // optional int32 serverTime = 5;
      public boolean hasServerTime() {
        return result.hasServerTime();
      }
      public int getServerTime() {
        return result.getServerTime();
      }
      public Builder setServerTime(int value) {
        result.hasServerTime = true;
        result.serverTime_ = value;
        return this;
      }
      public Builder clearServerTime() {
        result.hasServerTime = false;
        result.serverTime_ = 0;
        return this;
      }
      
      // optional string name = 6;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional string headImageUrl = 7;
      public boolean hasHeadImageUrl() {
        return result.hasHeadImageUrl();
      }
      public java.lang.String getHeadImageUrl() {
        return result.getHeadImageUrl();
      }
      public Builder setHeadImageUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHeadImageUrl = true;
        result.headImageUrl_ = value;
        return this;
      }
      public Builder clearHeadImageUrl() {
        result.hasHeadImageUrl = false;
        result.headImageUrl_ = getDefaultInstance().getHeadImageUrl();
        return this;
      }
      
      // optional bytes gameOverSC = 8;
      public boolean hasGameOverSC() {
        return result.hasGameOverSC();
      }
      public com.google.protobuf.ByteString getGameOverSC() {
        return result.getGameOverSC();
      }
      public Builder setGameOverSC(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameOverSC = true;
        result.gameOverSC_ = value;
        return this;
      }
      public Builder clearGameOverSC() {
        result.hasGameOverSC = false;
        result.gameOverSC_ = getDefaultInstance().getGameOverSC();
        return this;
      }
      
      // optional int32 randiooCoin = 9;
      public boolean hasRandiooCoin() {
        return result.hasRandiooCoin();
      }
      public int getRandiooCoin() {
        return result.getRandiooCoin();
      }
      public Builder setRandiooCoin(int value) {
        result.hasRandiooCoin = true;
        result.randiooCoin_ = value;
        return this;
      }
      public Builder clearRandiooCoin() {
        result.hasRandiooCoin = false;
        result.randiooCoin_ = 0;
        return this;
      }
      
      // optional int32 gold = 10;
      public boolean hasGold() {
        return result.hasGold();
      }
      public int getGold() {
        return result.getGold();
      }
      public Builder setGold(int value) {
        result.hasGold = true;
        result.gold_ = value;
        return this;
      }
      public Builder clearGold() {
        result.hasGold = false;
        result.gold_ = 0;
        return this;
      }
      
      // optional int32 roomCard = 11;
      public boolean hasRoomCard() {
        return result.hasRoomCard();
      }
      public int getRoomCard() {
        return result.getRoomCard();
      }
      public Builder setRoomCard(int value) {
        result.hasRoomCard = true;
        result.roomCard_ = value;
        return this;
      }
      public Builder clearRoomCard() {
        result.hasRoomCard = false;
        result.roomCard_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.RoleData)
    }
    
    static {
      defaultInstance = new RoleData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.RoleData)
  }
  
  public static final class GameConfigData extends
      com.google.protobuf.GeneratedMessage {
    // Use GameConfigData.newBuilder() to construct.
    private GameConfigData() {
      initFields();
    }
    private GameConfigData(boolean noInit) {}
    
    private static final GameConfigData defaultInstance;
    public static GameConfigData getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameConfigData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_GameConfigData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_GameConfigData_fieldAccessorTable;
    }
    
    // optional int32 roundCount = 1;
    public static final int ROUNDCOUNT_FIELD_NUMBER = 1;
    private boolean hasRoundCount;
    private int roundCount_ = 0;
    public boolean hasRoundCount() { return hasRoundCount; }
    public int getRoundCount() { return roundCount_; }
    
    // optional int32 maxCount = 2;
    public static final int MAXCOUNT_FIELD_NUMBER = 2;
    private boolean hasMaxCount;
    private int maxCount_ = 0;
    public boolean hasMaxCount() { return hasMaxCount; }
    public int getMaxCount() { return maxCount_; }
    
    // optional int32 roomCard = 3;
    public static final int ROOMCARD_FIELD_NUMBER = 3;
    private boolean hasRoomCard;
    private int roomCard_ = 0;
    public boolean hasRoomCard() { return hasRoomCard; }
    public int getRoomCard() { return roomCard_; }
    
    // optional string roomId = 4;
    public static final int ROOMID_FIELD_NUMBER = 4;
    private boolean hasRoomId;
    private java.lang.String roomId_ = "";
    public boolean hasRoomId() { return hasRoomId; }
    public java.lang.String getRoomId() { return roomId_; }
    
    // optional int32 zhuangType = 5;
    public static final int ZHUANGTYPE_FIELD_NUMBER = 5;
    private boolean hasZhuangType;
    private int zhuangType_ = 0;
    public boolean hasZhuangType() { return hasZhuangType; }
    public int getZhuangType() { return zhuangType_; }
    
    // optional int32 outLookCount = 6;
    public static final int OUTLOOKCOUNT_FIELD_NUMBER = 6;
    private boolean hasOutLookCount;
    private int outLookCount_ = 0;
    public boolean hasOutLookCount() { return hasOutLookCount; }
    public int getOutLookCount() { return outLookCount_; }
    
    // optional int32 topCount = 7;
    public static final int TOPCOUNT_FIELD_NUMBER = 7;
    private boolean hasTopCount;
    private int topCount_ = 0;
    public boolean hasTopCount() { return hasTopCount; }
    public int getTopCount() { return topCount_; }
    
    // optional int32 fightRound = 8;
    public static final int FIGHTROUND_FIELD_NUMBER = 8;
    private boolean hasFightRound;
    private int fightRound_ = 0;
    public boolean hasFightRound() { return hasFightRound; }
    public int getFightRound() { return fightRound_; }
    
    // optional int32 bet = 9;
    public static final int BET_FIELD_NUMBER = 9;
    private boolean hasBet;
    private int bet_ = 0;
    public boolean hasBet() { return hasBet; }
    public int getBet() { return bet_; }
    
    // optional int32 betMax = 10;
    public static final int BETMAX_FIELD_NUMBER = 10;
    private boolean hasBetMax;
    private int betMax_ = 0;
    public boolean hasBetMax() { return hasBetMax; }
    public int getBetMax() { return betMax_; }
    
    // optional int32 minCount = 11;
    public static final int MINCOUNT_FIELD_NUMBER = 11;
    private boolean hasMinCount;
    private int minCount_ = 0;
    public boolean hasMinCount() { return hasMinCount; }
    public int getMinCount() { return minCount_; }
    
    // optional int32 cardsPay = 12;
    public static final int CARDSPAY_FIELD_NUMBER = 12;
    private boolean hasCardsPay;
    private int cardsPay_ = 0;
    public boolean hasCardsPay() { return hasCardsPay; }
    public int getCardsPay() { return cardsPay_; }
    
    // optional int32 payMode = 13;
    public static final int PAYMODE_FIELD_NUMBER = 13;
    private boolean hasPayMode;
    private int payMode_ = 0;
    public boolean hasPayMode() { return hasPayMode; }
    public int getPayMode() { return payMode_; }
    
    // optional int32 gameType = 14;
    public static final int GAMETYPE_FIELD_NUMBER = 14;
    private boolean hasGameType;
    private int gameType_ = 0;
    public boolean hasGameType() { return hasGameType; }
    public int getGameType() { return gameType_; }
    
    // optional int32 goldId = 15;
    public static final int GOLDID_FIELD_NUMBER = 15;
    private boolean hasGoldId;
    private int goldId_ = 0;
    public boolean hasGoldId() { return hasGoldId; }
    public int getGoldId() { return goldId_; }
    
    // repeated int32 battleList = 16;
    public static final int BATTLELIST_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> battleList_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getBattleListList() {
      return battleList_;
    }
    public int getBattleListCount() { return battleList_.size(); }
    public int getBattleList(int index) {
      return battleList_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRoundCount()) {
        output.writeInt32(1, getRoundCount());
      }
      if (hasMaxCount()) {
        output.writeInt32(2, getMaxCount());
      }
      if (hasRoomCard()) {
        output.writeInt32(3, getRoomCard());
      }
      if (hasRoomId()) {
        output.writeString(4, getRoomId());
      }
      if (hasZhuangType()) {
        output.writeInt32(5, getZhuangType());
      }
      if (hasOutLookCount()) {
        output.writeInt32(6, getOutLookCount());
      }
      if (hasTopCount()) {
        output.writeInt32(7, getTopCount());
      }
      if (hasFightRound()) {
        output.writeInt32(8, getFightRound());
      }
      if (hasBet()) {
        output.writeInt32(9, getBet());
      }
      if (hasBetMax()) {
        output.writeInt32(10, getBetMax());
      }
      if (hasMinCount()) {
        output.writeInt32(11, getMinCount());
      }
      if (hasCardsPay()) {
        output.writeInt32(12, getCardsPay());
      }
      if (hasPayMode()) {
        output.writeInt32(13, getPayMode());
      }
      if (hasGameType()) {
        output.writeInt32(14, getGameType());
      }
      if (hasGoldId()) {
        output.writeInt32(15, getGoldId());
      }
      for (int element : getBattleListList()) {
        output.writeInt32(16, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRoundCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getRoundCount());
      }
      if (hasMaxCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getMaxCount());
      }
      if (hasRoomCard()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getRoomCard());
      }
      if (hasRoomId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getRoomId());
      }
      if (hasZhuangType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getZhuangType());
      }
      if (hasOutLookCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getOutLookCount());
      }
      if (hasTopCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getTopCount());
      }
      if (hasFightRound()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, getFightRound());
      }
      if (hasBet()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, getBet());
      }
      if (hasBetMax()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, getBetMax());
      }
      if (hasMinCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, getMinCount());
      }
      if (hasCardsPay()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, getCardsPay());
      }
      if (hasPayMode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, getPayMode());
      }
      if (hasGameType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, getGameType());
      }
      if (hasGoldId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, getGoldId());
      }
      {
        int dataSize = 0;
        for (int element : getBattleListList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 2 * getBattleListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.GameConfigData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameConfigData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameConfigData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameConfigData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameConfigData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameConfigData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameConfigData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameConfigData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameConfigData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameConfigData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.GameConfigData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.GameConfigData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.GameConfigData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.GameConfigData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.GameConfigData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.GameConfigData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.GameConfigData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.GameConfigData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.GameConfigData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.GameConfigData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.battleList_ != java.util.Collections.EMPTY_LIST) {
          result.battleList_ =
            java.util.Collections.unmodifiableList(result.battleList_);
        }
        com.randioo.compare_collections_server.protocol.Entity.GameConfigData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.GameConfigData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.GameConfigData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.GameConfigData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDefaultInstance()) return this;
        if (other.hasRoundCount()) {
          setRoundCount(other.getRoundCount());
        }
        if (other.hasMaxCount()) {
          setMaxCount(other.getMaxCount());
        }
        if (other.hasRoomCard()) {
          setRoomCard(other.getRoomCard());
        }
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasZhuangType()) {
          setZhuangType(other.getZhuangType());
        }
        if (other.hasOutLookCount()) {
          setOutLookCount(other.getOutLookCount());
        }
        if (other.hasTopCount()) {
          setTopCount(other.getTopCount());
        }
        if (other.hasFightRound()) {
          setFightRound(other.getFightRound());
        }
        if (other.hasBet()) {
          setBet(other.getBet());
        }
        if (other.hasBetMax()) {
          setBetMax(other.getBetMax());
        }
        if (other.hasMinCount()) {
          setMinCount(other.getMinCount());
        }
        if (other.hasCardsPay()) {
          setCardsPay(other.getCardsPay());
        }
        if (other.hasPayMode()) {
          setPayMode(other.getPayMode());
        }
        if (other.hasGameType()) {
          setGameType(other.getGameType());
        }
        if (other.hasGoldId()) {
          setGoldId(other.getGoldId());
        }
        if (!other.battleList_.isEmpty()) {
          if (result.battleList_.isEmpty()) {
            result.battleList_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.battleList_.addAll(other.battleList_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setRoundCount(input.readInt32());
              break;
            }
            case 16: {
              setMaxCount(input.readInt32());
              break;
            }
            case 24: {
              setRoomCard(input.readInt32());
              break;
            }
            case 34: {
              setRoomId(input.readString());
              break;
            }
            case 40: {
              setZhuangType(input.readInt32());
              break;
            }
            case 48: {
              setOutLookCount(input.readInt32());
              break;
            }
            case 56: {
              setTopCount(input.readInt32());
              break;
            }
            case 64: {
              setFightRound(input.readInt32());
              break;
            }
            case 72: {
              setBet(input.readInt32());
              break;
            }
            case 80: {
              setBetMax(input.readInt32());
              break;
            }
            case 88: {
              setMinCount(input.readInt32());
              break;
            }
            case 96: {
              setCardsPay(input.readInt32());
              break;
            }
            case 104: {
              setPayMode(input.readInt32());
              break;
            }
            case 112: {
              setGameType(input.readInt32());
              break;
            }
            case 120: {
              setGoldId(input.readInt32());
              break;
            }
            case 128: {
              addBattleList(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addBattleList(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // optional int32 roundCount = 1;
      public boolean hasRoundCount() {
        return result.hasRoundCount();
      }
      public int getRoundCount() {
        return result.getRoundCount();
      }
      public Builder setRoundCount(int value) {
        result.hasRoundCount = true;
        result.roundCount_ = value;
        return this;
      }
      public Builder clearRoundCount() {
        result.hasRoundCount = false;
        result.roundCount_ = 0;
        return this;
      }
      
      // optional int32 maxCount = 2;
      public boolean hasMaxCount() {
        return result.hasMaxCount();
      }
      public int getMaxCount() {
        return result.getMaxCount();
      }
      public Builder setMaxCount(int value) {
        result.hasMaxCount = true;
        result.maxCount_ = value;
        return this;
      }
      public Builder clearMaxCount() {
        result.hasMaxCount = false;
        result.maxCount_ = 0;
        return this;
      }
      
      // optional int32 roomCard = 3;
      public boolean hasRoomCard() {
        return result.hasRoomCard();
      }
      public int getRoomCard() {
        return result.getRoomCard();
      }
      public Builder setRoomCard(int value) {
        result.hasRoomCard = true;
        result.roomCard_ = value;
        return this;
      }
      public Builder clearRoomCard() {
        result.hasRoomCard = false;
        result.roomCard_ = 0;
        return this;
      }
      
      // optional string roomId = 4;
      public boolean hasRoomId() {
        return result.hasRoomId();
      }
      public java.lang.String getRoomId() {
        return result.getRoomId();
      }
      public Builder setRoomId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder clearRoomId() {
        result.hasRoomId = false;
        result.roomId_ = getDefaultInstance().getRoomId();
        return this;
      }
      
      // optional int32 zhuangType = 5;
      public boolean hasZhuangType() {
        return result.hasZhuangType();
      }
      public int getZhuangType() {
        return result.getZhuangType();
      }
      public Builder setZhuangType(int value) {
        result.hasZhuangType = true;
        result.zhuangType_ = value;
        return this;
      }
      public Builder clearZhuangType() {
        result.hasZhuangType = false;
        result.zhuangType_ = 0;
        return this;
      }
      
      // optional int32 outLookCount = 6;
      public boolean hasOutLookCount() {
        return result.hasOutLookCount();
      }
      public int getOutLookCount() {
        return result.getOutLookCount();
      }
      public Builder setOutLookCount(int value) {
        result.hasOutLookCount = true;
        result.outLookCount_ = value;
        return this;
      }
      public Builder clearOutLookCount() {
        result.hasOutLookCount = false;
        result.outLookCount_ = 0;
        return this;
      }
      
      // optional int32 topCount = 7;
      public boolean hasTopCount() {
        return result.hasTopCount();
      }
      public int getTopCount() {
        return result.getTopCount();
      }
      public Builder setTopCount(int value) {
        result.hasTopCount = true;
        result.topCount_ = value;
        return this;
      }
      public Builder clearTopCount() {
        result.hasTopCount = false;
        result.topCount_ = 0;
        return this;
      }
      
      // optional int32 fightRound = 8;
      public boolean hasFightRound() {
        return result.hasFightRound();
      }
      public int getFightRound() {
        return result.getFightRound();
      }
      public Builder setFightRound(int value) {
        result.hasFightRound = true;
        result.fightRound_ = value;
        return this;
      }
      public Builder clearFightRound() {
        result.hasFightRound = false;
        result.fightRound_ = 0;
        return this;
      }
      
      // optional int32 bet = 9;
      public boolean hasBet() {
        return result.hasBet();
      }
      public int getBet() {
        return result.getBet();
      }
      public Builder setBet(int value) {
        result.hasBet = true;
        result.bet_ = value;
        return this;
      }
      public Builder clearBet() {
        result.hasBet = false;
        result.bet_ = 0;
        return this;
      }
      
      // optional int32 betMax = 10;
      public boolean hasBetMax() {
        return result.hasBetMax();
      }
      public int getBetMax() {
        return result.getBetMax();
      }
      public Builder setBetMax(int value) {
        result.hasBetMax = true;
        result.betMax_ = value;
        return this;
      }
      public Builder clearBetMax() {
        result.hasBetMax = false;
        result.betMax_ = 0;
        return this;
      }
      
      // optional int32 minCount = 11;
      public boolean hasMinCount() {
        return result.hasMinCount();
      }
      public int getMinCount() {
        return result.getMinCount();
      }
      public Builder setMinCount(int value) {
        result.hasMinCount = true;
        result.minCount_ = value;
        return this;
      }
      public Builder clearMinCount() {
        result.hasMinCount = false;
        result.minCount_ = 0;
        return this;
      }
      
      // optional int32 cardsPay = 12;
      public boolean hasCardsPay() {
        return result.hasCardsPay();
      }
      public int getCardsPay() {
        return result.getCardsPay();
      }
      public Builder setCardsPay(int value) {
        result.hasCardsPay = true;
        result.cardsPay_ = value;
        return this;
      }
      public Builder clearCardsPay() {
        result.hasCardsPay = false;
        result.cardsPay_ = 0;
        return this;
      }
      
      // optional int32 payMode = 13;
      public boolean hasPayMode() {
        return result.hasPayMode();
      }
      public int getPayMode() {
        return result.getPayMode();
      }
      public Builder setPayMode(int value) {
        result.hasPayMode = true;
        result.payMode_ = value;
        return this;
      }
      public Builder clearPayMode() {
        result.hasPayMode = false;
        result.payMode_ = 0;
        return this;
      }
      
      // optional int32 gameType = 14;
      public boolean hasGameType() {
        return result.hasGameType();
      }
      public int getGameType() {
        return result.getGameType();
      }
      public Builder setGameType(int value) {
        result.hasGameType = true;
        result.gameType_ = value;
        return this;
      }
      public Builder clearGameType() {
        result.hasGameType = false;
        result.gameType_ = 0;
        return this;
      }
      
      // optional int32 goldId = 15;
      public boolean hasGoldId() {
        return result.hasGoldId();
      }
      public int getGoldId() {
        return result.getGoldId();
      }
      public Builder setGoldId(int value) {
        result.hasGoldId = true;
        result.goldId_ = value;
        return this;
      }
      public Builder clearGoldId() {
        result.hasGoldId = false;
        result.goldId_ = 0;
        return this;
      }
      
      // repeated int32 battleList = 16;
      public java.util.List<java.lang.Integer> getBattleListList() {
        return java.util.Collections.unmodifiableList(result.battleList_);
      }
      public int getBattleListCount() {
        return result.getBattleListCount();
      }
      public int getBattleList(int index) {
        return result.getBattleList(index);
      }
      public Builder setBattleList(int index, int value) {
        result.battleList_.set(index, value);
        return this;
      }
      public Builder addBattleList(int value) {
        if (result.battleList_.isEmpty()) {
          result.battleList_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.battleList_.add(value);
        return this;
      }
      public Builder addAllBattleList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.battleList_.isEmpty()) {
          result.battleList_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.battleList_);
        return this;
      }
      public Builder clearBattleList() {
        result.battleList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.GameConfigData)
    }
    
    static {
      defaultInstance = new GameConfigData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.GameConfigData)
  }
  
  public static final class PaiNum extends
      com.google.protobuf.GeneratedMessage {
    // Use PaiNum.newBuilder() to construct.
    private PaiNum() {
      initFields();
    }
    private PaiNum(boolean noInit) {}
    
    private static final PaiNum defaultInstance;
    public static PaiNum getDefaultInstance() {
      return defaultInstance;
    }
    
    public PaiNum getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_PaiNum_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_PaiNum_fieldAccessorTable;
    }
    
    // optional int32 seat = 1;
    public static final int SEAT_FIELD_NUMBER = 1;
    private boolean hasSeat;
    private int seat_ = 0;
    public boolean hasSeat() { return hasSeat; }
    public int getSeat() { return seat_; }
    
    // optional int32 num = 3;
    public static final int NUM_FIELD_NUMBER = 3;
    private boolean hasNum;
    private int num_ = 0;
    public boolean hasNum() { return hasNum; }
    public int getNum() { return num_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSeat()) {
        output.writeInt32(1, getSeat());
      }
      if (hasNum()) {
        output.writeInt32(3, getNum());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getSeat());
      }
      if (hasNum()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getNum());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.PaiNum parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.PaiNum parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.PaiNum parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.PaiNum parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.PaiNum parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.PaiNum parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.PaiNum parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.PaiNum parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.PaiNum parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.PaiNum parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.PaiNum prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.PaiNum result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.PaiNum.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.PaiNum();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.PaiNum internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.PaiNum();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.PaiNum.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.PaiNum getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.PaiNum.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.PaiNum build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.PaiNum buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.PaiNum buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.compare_collections_server.protocol.Entity.PaiNum returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.PaiNum) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.PaiNum)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.PaiNum other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.PaiNum.getDefaultInstance()) return this;
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setSeat(input.readInt32());
              break;
            }
            case 24: {
              setNum(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 seat = 1;
      public boolean hasSeat() {
        return result.hasSeat();
      }
      public int getSeat() {
        return result.getSeat();
      }
      public Builder setSeat(int value) {
        result.hasSeat = true;
        result.seat_ = value;
        return this;
      }
      public Builder clearSeat() {
        result.hasSeat = false;
        result.seat_ = 0;
        return this;
      }
      
      // optional int32 num = 3;
      public boolean hasNum() {
        return result.hasNum();
      }
      public int getNum() {
        return result.getNum();
      }
      public Builder setNum(int value) {
        result.hasNum = true;
        result.num_ = value;
        return this;
      }
      public Builder clearNum() {
        result.hasNum = false;
        result.num_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.PaiNum)
    }
    
    static {
      defaultInstance = new PaiNum(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.PaiNum)
  }
  
  public static final class ScoreData extends
      com.google.protobuf.GeneratedMessage {
    // Use ScoreData.newBuilder() to construct.
    private ScoreData() {
      initFields();
    }
    private ScoreData(boolean noInit) {}
    
    private static final ScoreData defaultInstance;
    public static ScoreData getDefaultInstance() {
      return defaultInstance;
    }
    
    public ScoreData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_ScoreData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_ScoreData_fieldAccessorTable;
    }
    
    // optional int32 seat = 1;
    public static final int SEAT_FIELD_NUMBER = 1;
    private boolean hasSeat;
    private int seat_ = 0;
    public boolean hasSeat() { return hasSeat; }
    public int getSeat() { return seat_; }
    
    // optional int32 score = 2;
    public static final int SCORE_FIELD_NUMBER = 2;
    private boolean hasScore;
    private int score_ = 0;
    public boolean hasScore() { return hasScore; }
    public int getScore() { return score_; }
    
    // optional int32 chipMoney = 3;
    public static final int CHIPMONEY_FIELD_NUMBER = 3;
    private boolean hasChipMoney;
    private int chipMoney_ = 0;
    public boolean hasChipMoney() { return hasChipMoney; }
    public int getChipMoney() { return chipMoney_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSeat()) {
        output.writeInt32(1, getSeat());
      }
      if (hasScore()) {
        output.writeInt32(2, getScore());
      }
      if (hasChipMoney()) {
        output.writeInt32(3, getChipMoney());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getSeat());
      }
      if (hasScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getScore());
      }
      if (hasChipMoney()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getChipMoney());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.ScoreData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ScoreData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ScoreData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ScoreData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ScoreData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ScoreData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ScoreData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ScoreData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ScoreData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ScoreData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.ScoreData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.ScoreData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.ScoreData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.ScoreData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.ScoreData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.ScoreData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.ScoreData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.ScoreData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.ScoreData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.ScoreData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.ScoreData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.ScoreData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.compare_collections_server.protocol.Entity.ScoreData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.ScoreData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.ScoreData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.ScoreData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.ScoreData.getDefaultInstance()) return this;
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasChipMoney()) {
          setChipMoney(other.getChipMoney());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setSeat(input.readInt32());
              break;
            }
            case 16: {
              setScore(input.readInt32());
              break;
            }
            case 24: {
              setChipMoney(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 seat = 1;
      public boolean hasSeat() {
        return result.hasSeat();
      }
      public int getSeat() {
        return result.getSeat();
      }
      public Builder setSeat(int value) {
        result.hasSeat = true;
        result.seat_ = value;
        return this;
      }
      public Builder clearSeat() {
        result.hasSeat = false;
        result.seat_ = 0;
        return this;
      }
      
      // optional int32 score = 2;
      public boolean hasScore() {
        return result.hasScore();
      }
      public int getScore() {
        return result.getScore();
      }
      public Builder setScore(int value) {
        result.hasScore = true;
        result.score_ = value;
        return this;
      }
      public Builder clearScore() {
        result.hasScore = false;
        result.score_ = 0;
        return this;
      }
      
      // optional int32 chipMoney = 3;
      public boolean hasChipMoney() {
        return result.hasChipMoney();
      }
      public int getChipMoney() {
        return result.getChipMoney();
      }
      public Builder setChipMoney(int value) {
        result.hasChipMoney = true;
        result.chipMoney_ = value;
        return this;
      }
      public Builder clearChipMoney() {
        result.hasChipMoney = false;
        result.chipMoney_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.ScoreData)
    }
    
    static {
      defaultInstance = new ScoreData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.ScoreData)
  }
  
  public static final class Record extends
      com.google.protobuf.GeneratedMessage {
    // Use Record.newBuilder() to construct.
    private Record() {
      initFields();
    }
    private Record(boolean noInit) {}
    
    private static final Record defaultInstance;
    public static Record getDefaultInstance() {
      return defaultInstance;
    }
    
    public Record getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_Record_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_Record_fieldAccessorTable;
    }
    
    // optional int32 seat = 1;
    public static final int SEAT_FIELD_NUMBER = 1;
    private boolean hasSeat;
    private int seat_ = 0;
    public boolean hasSeat() { return hasSeat; }
    public int getSeat() { return seat_; }
    
    // repeated int32 pai = 2;
    public static final int PAI_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> pai_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getPaiList() {
      return pai_;
    }
    public int getPaiCount() { return pai_.size(); }
    public int getPai(int index) {
      return pai_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSeat()) {
        output.writeInt32(1, getSeat());
      }
      for (int element : getPaiList()) {
        output.writeInt32(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getSeat());
      }
      {
        int dataSize = 0;
        for (int element : getPaiList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPaiList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.Record parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.Record parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.Record parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.Record parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.Record parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.Record parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.Record parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.Record parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.Record parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.Record parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.Record prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.Record result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.Record.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.Record();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.Record internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.Record();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.Record.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.Record getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.Record.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.Record build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.Record buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.Record buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.pai_ != java.util.Collections.EMPTY_LIST) {
          result.pai_ =
            java.util.Collections.unmodifiableList(result.pai_);
        }
        com.randioo.compare_collections_server.protocol.Entity.Record returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.Record) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.Record)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.Record other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.Record.getDefaultInstance()) return this;
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (!other.pai_.isEmpty()) {
          if (result.pai_.isEmpty()) {
            result.pai_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.pai_.addAll(other.pai_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setSeat(input.readInt32());
              break;
            }
            case 16: {
              addPai(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPai(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // optional int32 seat = 1;
      public boolean hasSeat() {
        return result.hasSeat();
      }
      public int getSeat() {
        return result.getSeat();
      }
      public Builder setSeat(int value) {
        result.hasSeat = true;
        result.seat_ = value;
        return this;
      }
      public Builder clearSeat() {
        result.hasSeat = false;
        result.seat_ = 0;
        return this;
      }
      
      // repeated int32 pai = 2;
      public java.util.List<java.lang.Integer> getPaiList() {
        return java.util.Collections.unmodifiableList(result.pai_);
      }
      public int getPaiCount() {
        return result.getPaiCount();
      }
      public int getPai(int index) {
        return result.getPai(index);
      }
      public Builder setPai(int index, int value) {
        result.pai_.set(index, value);
        return this;
      }
      public Builder addPai(int value) {
        if (result.pai_.isEmpty()) {
          result.pai_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.pai_.add(value);
        return this;
      }
      public Builder addAllPai(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.pai_.isEmpty()) {
          result.pai_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.pai_);
        return this;
      }
      public Builder clearPai() {
        result.pai_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.Record)
    }
    
    static {
      defaultInstance = new Record(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.Record)
  }
  
  public static final class GameRoleData extends
      com.google.protobuf.GeneratedMessage {
    // Use GameRoleData.newBuilder() to construct.
    private GameRoleData() {
      initFields();
    }
    private GameRoleData(boolean noInit) {}
    
    private static final GameRoleData defaultInstance;
    public static GameRoleData getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameRoleData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_GameRoleData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_GameRoleData_fieldAccessorTable;
    }
    
    // optional string gameRoleId = 1;
    public static final int GAMEROLEID_FIELD_NUMBER = 1;
    private boolean hasGameRoleId;
    private java.lang.String gameRoleId_ = "";
    public boolean hasGameRoleId() { return hasGameRoleId; }
    public java.lang.String getGameRoleId() { return gameRoleId_; }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional int32 seat = 3;
    public static final int SEAT_FIELD_NUMBER = 3;
    private boolean hasSeat;
    private int seat_ = 0;
    public boolean hasSeat() { return hasSeat; }
    public int getSeat() { return seat_; }
    
    // optional bool ready = 4;
    public static final int READY_FIELD_NUMBER = 4;
    private boolean hasReady;
    private boolean ready_ = false;
    public boolean hasReady() { return hasReady; }
    public boolean getReady() { return ready_; }
    
    // optional string headImgUrl = 5;
    public static final int HEADIMGURL_FIELD_NUMBER = 5;
    private boolean hasHeadImgUrl;
    private java.lang.String headImgUrl_ = "";
    public boolean hasHeadImgUrl() { return hasHeadImgUrl; }
    public java.lang.String getHeadImgUrl() { return headImgUrl_; }
    
    // optional int32 money = 6;
    public static final int MONEY_FIELD_NUMBER = 6;
    private boolean hasMoney;
    private int money_ = 0;
    public boolean hasMoney() { return hasMoney; }
    public int getMoney() { return money_; }
    
    // optional int32 point = 7;
    public static final int POINT_FIELD_NUMBER = 7;
    private boolean hasPoint;
    private int point_ = 0;
    public boolean hasPoint() { return hasPoint; }
    public int getPoint() { return point_; }
    
    // optional int32 sex = 8;
    public static final int SEX_FIELD_NUMBER = 8;
    private boolean hasSex;
    private int sex_ = 0;
    public boolean hasSex() { return hasSex; }
    public int getSex() { return sex_; }
    
    // optional bool online = 9;
    public static final int ONLINE_FIELD_NUMBER = 9;
    private boolean hasOnline;
    private boolean online_ = false;
    public boolean hasOnline() { return hasOnline; }
    public boolean getOnline() { return online_; }
    
    // optional string platformRoleId = 10;
    public static final int PLATFORMROLEID_FIELD_NUMBER = 10;
    private boolean hasPlatformRoleId;
    private java.lang.String platformRoleId_ = "";
    public boolean hasPlatformRoleId() { return hasPlatformRoleId; }
    public java.lang.String getPlatformRoleId() { return platformRoleId_; }
    
    // optional bool master = 11;
    public static final int MASTER_FIELD_NUMBER = 11;
    private boolean hasMaster;
    private boolean master_ = false;
    public boolean hasMaster() { return hasMaster; }
    public boolean getMaster() { return master_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameRoleId()) {
        output.writeString(1, getGameRoleId());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      if (hasSeat()) {
        output.writeInt32(3, getSeat());
      }
      if (hasReady()) {
        output.writeBool(4, getReady());
      }
      if (hasHeadImgUrl()) {
        output.writeString(5, getHeadImgUrl());
      }
      if (hasMoney()) {
        output.writeInt32(6, getMoney());
      }
      if (hasPoint()) {
        output.writeInt32(7, getPoint());
      }
      if (hasSex()) {
        output.writeInt32(8, getSex());
      }
      if (hasOnline()) {
        output.writeBool(9, getOnline());
      }
      if (hasPlatformRoleId()) {
        output.writeString(10, getPlatformRoleId());
      }
      if (hasMaster()) {
        output.writeBool(11, getMaster());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameRoleId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getGameRoleId());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      if (hasSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getSeat());
      }
      if (hasReady()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, getReady());
      }
      if (hasHeadImgUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getHeadImgUrl());
      }
      if (hasMoney()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getMoney());
      }
      if (hasPoint()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getPoint());
      }
      if (hasSex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, getSex());
      }
      if (hasOnline()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, getOnline());
      }
      if (hasPlatformRoleId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getPlatformRoleId());
      }
      if (hasMaster()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, getMaster());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.GameRoleData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameRoleData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameRoleData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameRoleData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameRoleData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameRoleData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameRoleData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameRoleData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameRoleData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameRoleData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.GameRoleData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.GameRoleData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.GameRoleData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.GameRoleData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.GameRoleData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.GameRoleData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.GameRoleData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.GameRoleData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.GameRoleData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.GameRoleData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.GameRoleData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.GameRoleData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.compare_collections_server.protocol.Entity.GameRoleData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.GameRoleData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.GameRoleData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.GameRoleData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.GameRoleData.getDefaultInstance()) return this;
        if (other.hasGameRoleId()) {
          setGameRoleId(other.getGameRoleId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasReady()) {
          setReady(other.getReady());
        }
        if (other.hasHeadImgUrl()) {
          setHeadImgUrl(other.getHeadImgUrl());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasPoint()) {
          setPoint(other.getPoint());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasOnline()) {
          setOnline(other.getOnline());
        }
        if (other.hasPlatformRoleId()) {
          setPlatformRoleId(other.getPlatformRoleId());
        }
        if (other.hasMaster()) {
          setMaster(other.getMaster());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setGameRoleId(input.readString());
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 24: {
              setSeat(input.readInt32());
              break;
            }
            case 32: {
              setReady(input.readBool());
              break;
            }
            case 42: {
              setHeadImgUrl(input.readString());
              break;
            }
            case 48: {
              setMoney(input.readInt32());
              break;
            }
            case 56: {
              setPoint(input.readInt32());
              break;
            }
            case 64: {
              setSex(input.readInt32());
              break;
            }
            case 72: {
              setOnline(input.readBool());
              break;
            }
            case 82: {
              setPlatformRoleId(input.readString());
              break;
            }
            case 88: {
              setMaster(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional string gameRoleId = 1;
      public boolean hasGameRoleId() {
        return result.hasGameRoleId();
      }
      public java.lang.String getGameRoleId() {
        return result.getGameRoleId();
      }
      public Builder setGameRoleId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameRoleId = true;
        result.gameRoleId_ = value;
        return this;
      }
      public Builder clearGameRoleId() {
        result.hasGameRoleId = false;
        result.gameRoleId_ = getDefaultInstance().getGameRoleId();
        return this;
      }
      
      // optional string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional int32 seat = 3;
      public boolean hasSeat() {
        return result.hasSeat();
      }
      public int getSeat() {
        return result.getSeat();
      }
      public Builder setSeat(int value) {
        result.hasSeat = true;
        result.seat_ = value;
        return this;
      }
      public Builder clearSeat() {
        result.hasSeat = false;
        result.seat_ = 0;
        return this;
      }
      
      // optional bool ready = 4;
      public boolean hasReady() {
        return result.hasReady();
      }
      public boolean getReady() {
        return result.getReady();
      }
      public Builder setReady(boolean value) {
        result.hasReady = true;
        result.ready_ = value;
        return this;
      }
      public Builder clearReady() {
        result.hasReady = false;
        result.ready_ = false;
        return this;
      }
      
      // optional string headImgUrl = 5;
      public boolean hasHeadImgUrl() {
        return result.hasHeadImgUrl();
      }
      public java.lang.String getHeadImgUrl() {
        return result.getHeadImgUrl();
      }
      public Builder setHeadImgUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHeadImgUrl = true;
        result.headImgUrl_ = value;
        return this;
      }
      public Builder clearHeadImgUrl() {
        result.hasHeadImgUrl = false;
        result.headImgUrl_ = getDefaultInstance().getHeadImgUrl();
        return this;
      }
      
      // optional int32 money = 6;
      public boolean hasMoney() {
        return result.hasMoney();
      }
      public int getMoney() {
        return result.getMoney();
      }
      public Builder setMoney(int value) {
        result.hasMoney = true;
        result.money_ = value;
        return this;
      }
      public Builder clearMoney() {
        result.hasMoney = false;
        result.money_ = 0;
        return this;
      }
      
      // optional int32 point = 7;
      public boolean hasPoint() {
        return result.hasPoint();
      }
      public int getPoint() {
        return result.getPoint();
      }
      public Builder setPoint(int value) {
        result.hasPoint = true;
        result.point_ = value;
        return this;
      }
      public Builder clearPoint() {
        result.hasPoint = false;
        result.point_ = 0;
        return this;
      }
      
      // optional int32 sex = 8;
      public boolean hasSex() {
        return result.hasSex();
      }
      public int getSex() {
        return result.getSex();
      }
      public Builder setSex(int value) {
        result.hasSex = true;
        result.sex_ = value;
        return this;
      }
      public Builder clearSex() {
        result.hasSex = false;
        result.sex_ = 0;
        return this;
      }
      
      // optional bool online = 9;
      public boolean hasOnline() {
        return result.hasOnline();
      }
      public boolean getOnline() {
        return result.getOnline();
      }
      public Builder setOnline(boolean value) {
        result.hasOnline = true;
        result.online_ = value;
        return this;
      }
      public Builder clearOnline() {
        result.hasOnline = false;
        result.online_ = false;
        return this;
      }
      
      // optional string platformRoleId = 10;
      public boolean hasPlatformRoleId() {
        return result.hasPlatformRoleId();
      }
      public java.lang.String getPlatformRoleId() {
        return result.getPlatformRoleId();
      }
      public Builder setPlatformRoleId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPlatformRoleId = true;
        result.platformRoleId_ = value;
        return this;
      }
      public Builder clearPlatformRoleId() {
        result.hasPlatformRoleId = false;
        result.platformRoleId_ = getDefaultInstance().getPlatformRoleId();
        return this;
      }
      
      // optional bool master = 11;
      public boolean hasMaster() {
        return result.hasMaster();
      }
      public boolean getMaster() {
        return result.getMaster();
      }
      public Builder setMaster(boolean value) {
        result.hasMaster = true;
        result.master_ = value;
        return this;
      }
      public Builder clearMaster() {
        result.hasMaster = false;
        result.master_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.GameRoleData)
    }
    
    static {
      defaultInstance = new GameRoleData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.GameRoleData)
  }
  
  public static final class RoleRoundOverInfoData extends
      com.google.protobuf.GeneratedMessage {
    // Use RoleRoundOverInfoData.newBuilder() to construct.
    private RoleRoundOverInfoData() {
      initFields();
    }
    private RoleRoundOverInfoData(boolean noInit) {}
    
    private static final RoleRoundOverInfoData defaultInstance;
    public static RoleRoundOverInfoData getDefaultInstance() {
      return defaultInstance;
    }
    
    public RoleRoundOverInfoData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_RoleRoundOverInfoData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_RoleRoundOverInfoData_fieldAccessorTable;
    }
    
    // optional .com.randioo.compare_collections_server.protocol.GameRoleData gameRoleData = 1;
    public static final int GAMEROLEDATA_FIELD_NUMBER = 1;
    private boolean hasGameRoleData;
    private com.randioo.compare_collections_server.protocol.Entity.GameRoleData gameRoleData_;
    public boolean hasGameRoleData() { return hasGameRoleData; }
    public com.randioo.compare_collections_server.protocol.Entity.GameRoleData getGameRoleData() { return gameRoleData_; }
    
    // optional .com.randioo.compare_collections_server.protocol.CardData cardData = 2;
    public static final int CARDDATA_FIELD_NUMBER = 2;
    private boolean hasCardData;
    private com.randioo.compare_collections_server.protocol.Entity.CardData cardData_;
    public boolean hasCardData() { return hasCardData; }
    public com.randioo.compare_collections_server.protocol.Entity.CardData getCardData() { return cardData_; }
    
    // optional int32 overMethod = 3;
    public static final int OVERMETHOD_FIELD_NUMBER = 3;
    private boolean hasOverMethod;
    private int overMethod_ = 0;
    public boolean hasOverMethod() { return hasOverMethod; }
    public int getOverMethod() { return overMethod_; }
    
    // optional int32 roundScore = 4;
    public static final int ROUNDSCORE_FIELD_NUMBER = 4;
    private boolean hasRoundScore;
    private int roundScore_ = 0;
    public boolean hasRoundScore() { return hasRoundScore; }
    public int getRoundScore() { return roundScore_; }
    
    // optional int32 chipMoney = 5;
    public static final int CHIPMONEY_FIELD_NUMBER = 5;
    private boolean hasChipMoney;
    private int chipMoney_ = 0;
    public boolean hasChipMoney() { return hasChipMoney; }
    public int getChipMoney() { return chipMoney_; }
    
    // optional bool zhuang = 6;
    public static final int ZHUANG_FIELD_NUMBER = 6;
    private boolean hasZhuang;
    private boolean zhuang_ = false;
    public boolean hasZhuang() { return hasZhuang; }
    public boolean getZhuang() { return zhuang_; }
    
    // optional int32 betMoney = 7;
    public static final int BETMONEY_FIELD_NUMBER = 7;
    private boolean hasBetMoney;
    private int betMoney_ = 0;
    public boolean hasBetMoney() { return hasBetMoney; }
    public int getBetMoney() { return betMoney_; }
    
    // optional int32 roleId = 8;
    public static final int ROLEID_FIELD_NUMBER = 8;
    private boolean hasRoleId;
    private int roleId_ = 0;
    public boolean hasRoleId() { return hasRoleId; }
    public int getRoleId() { return roleId_; }
    
    private void initFields() {
      gameRoleData_ = com.randioo.compare_collections_server.protocol.Entity.GameRoleData.getDefaultInstance();
      cardData_ = com.randioo.compare_collections_server.protocol.Entity.CardData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameRoleData()) {
        output.writeMessage(1, getGameRoleData());
      }
      if (hasCardData()) {
        output.writeMessage(2, getCardData());
      }
      if (hasOverMethod()) {
        output.writeInt32(3, getOverMethod());
      }
      if (hasRoundScore()) {
        output.writeInt32(4, getRoundScore());
      }
      if (hasChipMoney()) {
        output.writeInt32(5, getChipMoney());
      }
      if (hasZhuang()) {
        output.writeBool(6, getZhuang());
      }
      if (hasBetMoney()) {
        output.writeInt32(7, getBetMoney());
      }
      if (hasRoleId()) {
        output.writeInt32(8, getRoleId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameRoleData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGameRoleData());
      }
      if (hasCardData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCardData());
      }
      if (hasOverMethod()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getOverMethod());
      }
      if (hasRoundScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getRoundScore());
      }
      if (hasChipMoney()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getChipMoney());
      }
      if (hasZhuang()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, getZhuang());
      }
      if (hasBetMoney()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getBetMoney());
      }
      if (hasRoleId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, getRoleId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.getDefaultInstance()) return this;
        if (other.hasGameRoleData()) {
          mergeGameRoleData(other.getGameRoleData());
        }
        if (other.hasCardData()) {
          mergeCardData(other.getCardData());
        }
        if (other.hasOverMethod()) {
          setOverMethod(other.getOverMethod());
        }
        if (other.hasRoundScore()) {
          setRoundScore(other.getRoundScore());
        }
        if (other.hasChipMoney()) {
          setChipMoney(other.getChipMoney());
        }
        if (other.hasZhuang()) {
          setZhuang(other.getZhuang());
        }
        if (other.hasBetMoney()) {
          setBetMoney(other.getBetMoney());
        }
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.GameRoleData.newBuilder();
              if (hasGameRoleData()) {
                subBuilder.mergeFrom(getGameRoleData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameRoleData(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.randioo.compare_collections_server.protocol.Entity.CardData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.CardData.newBuilder();
              if (hasCardData()) {
                subBuilder.mergeFrom(getCardData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCardData(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setOverMethod(input.readInt32());
              break;
            }
            case 32: {
              setRoundScore(input.readInt32());
              break;
            }
            case 40: {
              setChipMoney(input.readInt32());
              break;
            }
            case 48: {
              setZhuang(input.readBool());
              break;
            }
            case 56: {
              setBetMoney(input.readInt32());
              break;
            }
            case 64: {
              setRoleId(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional .com.randioo.compare_collections_server.protocol.GameRoleData gameRoleData = 1;
      public boolean hasGameRoleData() {
        return result.hasGameRoleData();
      }
      public com.randioo.compare_collections_server.protocol.Entity.GameRoleData getGameRoleData() {
        return result.getGameRoleData();
      }
      public Builder setGameRoleData(com.randioo.compare_collections_server.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameRoleData = true;
        result.gameRoleData_ = value;
        return this;
      }
      public Builder setGameRoleData(com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder builderForValue) {
        result.hasGameRoleData = true;
        result.gameRoleData_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameRoleData(com.randioo.compare_collections_server.protocol.Entity.GameRoleData value) {
        if (result.hasGameRoleData() &&
            result.gameRoleData_ != com.randioo.compare_collections_server.protocol.Entity.GameRoleData.getDefaultInstance()) {
          result.gameRoleData_ =
            com.randioo.compare_collections_server.protocol.Entity.GameRoleData.newBuilder(result.gameRoleData_).mergeFrom(value).buildPartial();
        } else {
          result.gameRoleData_ = value;
        }
        result.hasGameRoleData = true;
        return this;
      }
      public Builder clearGameRoleData() {
        result.hasGameRoleData = false;
        result.gameRoleData_ = com.randioo.compare_collections_server.protocol.Entity.GameRoleData.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.CardData cardData = 2;
      public boolean hasCardData() {
        return result.hasCardData();
      }
      public com.randioo.compare_collections_server.protocol.Entity.CardData getCardData() {
        return result.getCardData();
      }
      public Builder setCardData(com.randioo.compare_collections_server.protocol.Entity.CardData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCardData = true;
        result.cardData_ = value;
        return this;
      }
      public Builder setCardData(com.randioo.compare_collections_server.protocol.Entity.CardData.Builder builderForValue) {
        result.hasCardData = true;
        result.cardData_ = builderForValue.build();
        return this;
      }
      public Builder mergeCardData(com.randioo.compare_collections_server.protocol.Entity.CardData value) {
        if (result.hasCardData() &&
            result.cardData_ != com.randioo.compare_collections_server.protocol.Entity.CardData.getDefaultInstance()) {
          result.cardData_ =
            com.randioo.compare_collections_server.protocol.Entity.CardData.newBuilder(result.cardData_).mergeFrom(value).buildPartial();
        } else {
          result.cardData_ = value;
        }
        result.hasCardData = true;
        return this;
      }
      public Builder clearCardData() {
        result.hasCardData = false;
        result.cardData_ = com.randioo.compare_collections_server.protocol.Entity.CardData.getDefaultInstance();
        return this;
      }
      
      // optional int32 overMethod = 3;
      public boolean hasOverMethod() {
        return result.hasOverMethod();
      }
      public int getOverMethod() {
        return result.getOverMethod();
      }
      public Builder setOverMethod(int value) {
        result.hasOverMethod = true;
        result.overMethod_ = value;
        return this;
      }
      public Builder clearOverMethod() {
        result.hasOverMethod = false;
        result.overMethod_ = 0;
        return this;
      }
      
      // optional int32 roundScore = 4;
      public boolean hasRoundScore() {
        return result.hasRoundScore();
      }
      public int getRoundScore() {
        return result.getRoundScore();
      }
      public Builder setRoundScore(int value) {
        result.hasRoundScore = true;
        result.roundScore_ = value;
        return this;
      }
      public Builder clearRoundScore() {
        result.hasRoundScore = false;
        result.roundScore_ = 0;
        return this;
      }
      
      // optional int32 chipMoney = 5;
      public boolean hasChipMoney() {
        return result.hasChipMoney();
      }
      public int getChipMoney() {
        return result.getChipMoney();
      }
      public Builder setChipMoney(int value) {
        result.hasChipMoney = true;
        result.chipMoney_ = value;
        return this;
      }
      public Builder clearChipMoney() {
        result.hasChipMoney = false;
        result.chipMoney_ = 0;
        return this;
      }
      
      // optional bool zhuang = 6;
      public boolean hasZhuang() {
        return result.hasZhuang();
      }
      public boolean getZhuang() {
        return result.getZhuang();
      }
      public Builder setZhuang(boolean value) {
        result.hasZhuang = true;
        result.zhuang_ = value;
        return this;
      }
      public Builder clearZhuang() {
        result.hasZhuang = false;
        result.zhuang_ = false;
        return this;
      }
      
      // optional int32 betMoney = 7;
      public boolean hasBetMoney() {
        return result.hasBetMoney();
      }
      public int getBetMoney() {
        return result.getBetMoney();
      }
      public Builder setBetMoney(int value) {
        result.hasBetMoney = true;
        result.betMoney_ = value;
        return this;
      }
      public Builder clearBetMoney() {
        result.hasBetMoney = false;
        result.betMoney_ = 0;
        return this;
      }
      
      // optional int32 roleId = 8;
      public boolean hasRoleId() {
        return result.hasRoleId();
      }
      public int getRoleId() {
        return result.getRoleId();
      }
      public Builder setRoleId(int value) {
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder clearRoleId() {
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.RoleRoundOverInfoData)
    }
    
    static {
      defaultInstance = new RoleRoundOverInfoData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.RoleRoundOverInfoData)
  }
  
  public static final class CardData extends
      com.google.protobuf.GeneratedMessage {
    // Use CardData.newBuilder() to construct.
    private CardData() {
      initFields();
    }
    private CardData(boolean noInit) {}
    
    private static final CardData defaultInstance;
    public static CardData getDefaultInstance() {
      return defaultInstance;
    }
    
    public CardData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_CardData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_CardData_fieldAccessorTable;
    }
    
    // repeated int32 cards = 1;
    public static final int CARDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cards_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getCardsList() {
      return cards_;
    }
    public int getCardsCount() { return cards_.size(); }
    public int getCards(int index) {
      return cards_.get(index);
    }
    
    // optional int32 cardType = 2;
    public static final int CARDTYPE_FIELD_NUMBER = 2;
    private boolean hasCardType;
    private int cardType_ = 0;
    public boolean hasCardType() { return hasCardType; }
    public int getCardType() { return cardType_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getCardsList()) {
        output.writeInt32(1, element);
      }
      if (hasCardType()) {
        output.writeInt32(2, getCardType());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int element : getCardsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (hasCardType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getCardType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.CardData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CardData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CardData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CardData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CardData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CardData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CardData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CardData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CardData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CardData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.CardData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.CardData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.CardData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.CardData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.CardData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.CardData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.CardData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.CardData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.CardData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.CardData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.CardData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.CardData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.cards_ != java.util.Collections.EMPTY_LIST) {
          result.cards_ =
            java.util.Collections.unmodifiableList(result.cards_);
        }
        com.randioo.compare_collections_server.protocol.Entity.CardData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.CardData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.CardData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.CardData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.CardData.getDefaultInstance()) return this;
        if (!other.cards_.isEmpty()) {
          if (result.cards_.isEmpty()) {
            result.cards_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.cards_.addAll(other.cards_);
        }
        if (other.hasCardType()) {
          setCardType(other.getCardType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              addCards(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCards(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              setCardType(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // repeated int32 cards = 1;
      public java.util.List<java.lang.Integer> getCardsList() {
        return java.util.Collections.unmodifiableList(result.cards_);
      }
      public int getCardsCount() {
        return result.getCardsCount();
      }
      public int getCards(int index) {
        return result.getCards(index);
      }
      public Builder setCards(int index, int value) {
        result.cards_.set(index, value);
        return this;
      }
      public Builder addCards(int value) {
        if (result.cards_.isEmpty()) {
          result.cards_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.cards_.add(value);
        return this;
      }
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.cards_.isEmpty()) {
          result.cards_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.cards_);
        return this;
      }
      public Builder clearCards() {
        result.cards_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 cardType = 2;
      public boolean hasCardType() {
        return result.hasCardType();
      }
      public int getCardType() {
        return result.getCardType();
      }
      public Builder setCardType(int value) {
        result.hasCardType = true;
        result.cardType_ = value;
        return this;
      }
      public Builder clearCardType() {
        result.hasCardType = false;
        result.cardType_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.CardData)
    }
    
    static {
      defaultInstance = new CardData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.CardData)
  }
  
  public static final class RoleCardData extends
      com.google.protobuf.GeneratedMessage {
    // Use RoleCardData.newBuilder() to construct.
    private RoleCardData() {
      initFields();
    }
    private RoleCardData(boolean noInit) {}
    
    private static final RoleCardData defaultInstance;
    public static RoleCardData getDefaultInstance() {
      return defaultInstance;
    }
    
    public RoleCardData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_RoleCardData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_RoleCardData_fieldAccessorTable;
    }
    
    // repeated int32 card = 1;
    public static final int CARD_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> card_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getCardList() {
      return card_;
    }
    public int getCardCount() { return card_.size(); }
    public int getCard(int index) {
      return card_.get(index);
    }
    
    // optional int32 seat = 2;
    public static final int SEAT_FIELD_NUMBER = 2;
    private boolean hasSeat;
    private int seat_ = 0;
    public boolean hasSeat() { return hasSeat; }
    public int getSeat() { return seat_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getCardList()) {
        output.writeInt32(1, element);
      }
      if (hasSeat()) {
        output.writeInt32(2, getSeat());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int element : getCardList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCardList().size();
      }
      if (hasSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getSeat());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.RoleCardData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleCardData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleCardData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleCardData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleCardData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleCardData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleCardData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleCardData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleCardData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleCardData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.RoleCardData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.RoleCardData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.RoleCardData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.RoleCardData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.RoleCardData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.RoleCardData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.RoleCardData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.RoleCardData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.RoleCardData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.RoleCardData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.RoleCardData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.RoleCardData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.card_ != java.util.Collections.EMPTY_LIST) {
          result.card_ =
            java.util.Collections.unmodifiableList(result.card_);
        }
        com.randioo.compare_collections_server.protocol.Entity.RoleCardData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.RoleCardData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.RoleCardData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.RoleCardData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.RoleCardData.getDefaultInstance()) return this;
        if (!other.card_.isEmpty()) {
          if (result.card_.isEmpty()) {
            result.card_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.card_.addAll(other.card_);
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              addCard(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCard(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              setSeat(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // repeated int32 card = 1;
      public java.util.List<java.lang.Integer> getCardList() {
        return java.util.Collections.unmodifiableList(result.card_);
      }
      public int getCardCount() {
        return result.getCardCount();
      }
      public int getCard(int index) {
        return result.getCard(index);
      }
      public Builder setCard(int index, int value) {
        result.card_.set(index, value);
        return this;
      }
      public Builder addCard(int value) {
        if (result.card_.isEmpty()) {
          result.card_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.card_.add(value);
        return this;
      }
      public Builder addAllCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.card_.isEmpty()) {
          result.card_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.card_);
        return this;
      }
      public Builder clearCard() {
        result.card_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 seat = 2;
      public boolean hasSeat() {
        return result.hasSeat();
      }
      public int getSeat() {
        return result.getSeat();
      }
      public Builder setSeat(int value) {
        result.hasSeat = true;
        result.seat_ = value;
        return this;
      }
      public Builder clearSeat() {
        result.hasSeat = false;
        result.seat_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.RoleCardData)
    }
    
    static {
      defaultInstance = new RoleCardData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.RoleCardData)
  }
  
  public static final class GameData extends
      com.google.protobuf.GeneratedMessage {
    // Use GameData.newBuilder() to construct.
    private GameData() {
      initFields();
    }
    private GameData(boolean noInit) {}
    
    private static final GameData defaultInstance;
    public static GameData getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_GameData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_GameData_fieldAccessorTable;
    }
    
    // optional string roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomId;
    private java.lang.String roomId_ = "";
    public boolean hasRoomId() { return hasRoomId; }
    public java.lang.String getRoomId() { return roomId_; }
    
    // repeated .com.randioo.compare_collections_server.protocol.GameRoleData gameRoleData = 2;
    public static final int GAMEROLEDATA_FIELD_NUMBER = 2;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.GameRoleData> gameRoleData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.GameRoleData> getGameRoleDataList() {
      return gameRoleData_;
    }
    public int getGameRoleDataCount() { return gameRoleData_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.GameRoleData getGameRoleData(int index) {
      return gameRoleData_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRoomId()) {
        output.writeString(1, getRoomId());
      }
      for (com.randioo.compare_collections_server.protocol.Entity.GameRoleData element : getGameRoleDataList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRoomId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getRoomId());
      }
      for (com.randioo.compare_collections_server.protocol.Entity.GameRoleData element : getGameRoleDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.GameData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.GameData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.GameData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.GameData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.GameData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.GameData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.GameData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.GameData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.GameData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.GameData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.GameData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.GameData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.GameData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.gameRoleData_ != java.util.Collections.EMPTY_LIST) {
          result.gameRoleData_ =
            java.util.Collections.unmodifiableList(result.gameRoleData_);
        }
        com.randioo.compare_collections_server.protocol.Entity.GameData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.GameData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.GameData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.GameData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.GameData.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (!other.gameRoleData_.isEmpty()) {
          if (result.gameRoleData_.isEmpty()) {
            result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
          }
          result.gameRoleData_.addAll(other.gameRoleData_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setRoomId(input.readString());
              break;
            }
            case 18: {
              com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.GameRoleData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGameRoleData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional string roomId = 1;
      public boolean hasRoomId() {
        return result.hasRoomId();
      }
      public java.lang.String getRoomId() {
        return result.getRoomId();
      }
      public Builder setRoomId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder clearRoomId() {
        result.hasRoomId = false;
        result.roomId_ = getDefaultInstance().getRoomId();
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.GameRoleData gameRoleData = 2;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.GameRoleData> getGameRoleDataList() {
        return java.util.Collections.unmodifiableList(result.gameRoleData_);
      }
      public int getGameRoleDataCount() {
        return result.getGameRoleDataCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.GameRoleData getGameRoleData(int index) {
        return result.getGameRoleData(index);
      }
      public Builder setGameRoleData(int index, com.randioo.compare_collections_server.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.gameRoleData_.set(index, value);
        return this;
      }
      public Builder setGameRoleData(int index, com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder builderForValue) {
        result.gameRoleData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addGameRoleData(com.randioo.compare_collections_server.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
        }
        result.gameRoleData_.add(value);
        return this;
      }
      public Builder addGameRoleData(com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder builderForValue) {
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
        }
        result.gameRoleData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllGameRoleData(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.GameRoleData> values) {
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
        }
        super.addAll(values, result.gameRoleData_);
        return this;
      }
      public Builder clearGameRoleData() {
        result.gameRoleData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.GameData)
    }
    
    static {
      defaultInstance = new GameData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.GameData)
  }
  
  public static final class AudienceData extends
      com.google.protobuf.GeneratedMessage {
    // Use AudienceData.newBuilder() to construct.
    private AudienceData() {
      initFields();
    }
    private AudienceData(boolean noInit) {}
    
    private static final AudienceData defaultInstance;
    public static AudienceData getDefaultInstance() {
      return defaultInstance;
    }
    
    public AudienceData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_AudienceData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_AudienceData_fieldAccessorTable;
    }
    
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional int32 score = 2;
    public static final int SCORE_FIELD_NUMBER = 2;
    private boolean hasScore;
    private int score_ = 0;
    public boolean hasScore() { return hasScore; }
    public int getScore() { return score_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasScore()) {
        output.writeInt32(2, getScore());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getScore());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.AudienceData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.AudienceData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.AudienceData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.AudienceData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.AudienceData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.AudienceData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.AudienceData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.AudienceData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.AudienceData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.AudienceData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.AudienceData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.AudienceData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.AudienceData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.AudienceData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.AudienceData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.AudienceData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.AudienceData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.AudienceData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.AudienceData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.AudienceData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.AudienceData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.AudienceData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.compare_collections_server.protocol.Entity.AudienceData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.AudienceData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.AudienceData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.AudienceData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.AudienceData.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 16: {
              setScore(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional int32 score = 2;
      public boolean hasScore() {
        return result.hasScore();
      }
      public int getScore() {
        return result.getScore();
      }
      public Builder setScore(int value) {
        result.hasScore = true;
        result.score_ = value;
        return this;
      }
      public Builder clearScore() {
        result.hasScore = false;
        result.score_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.AudienceData)
    }
    
    static {
      defaultInstance = new AudienceData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.AudienceData)
  }
  
  public static final class RoundVideoData extends
      com.google.protobuf.GeneratedMessage {
    // Use RoundVideoData.newBuilder() to construct.
    private RoundVideoData() {
      initFields();
    }
    private RoundVideoData(boolean noInit) {}
    
    private static final RoundVideoData defaultInstance;
    public static RoundVideoData getDefaultInstance() {
      return defaultInstance;
    }
    
    public RoundVideoData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_RoundVideoData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_RoundVideoData_fieldAccessorTable;
    }
    
    // repeated bytes sc = 1;
    public static final int SC_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> sc_ =
      java.util.Collections.emptyList();
    public java.util.List<com.google.protobuf.ByteString> getScList() {
      return sc_;
    }
    public int getScCount() { return sc_.size(); }
    public com.google.protobuf.ByteString getSc(int index) {
      return sc_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.google.protobuf.ByteString element : getScList()) {
        output.writeBytes(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (com.google.protobuf.ByteString element : getScList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getScList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.RoundVideoData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoundVideoData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoundVideoData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoundVideoData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoundVideoData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoundVideoData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoundVideoData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoundVideoData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoundVideoData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoundVideoData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.RoundVideoData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.RoundVideoData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.RoundVideoData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.RoundVideoData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.RoundVideoData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.RoundVideoData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.RoundVideoData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.RoundVideoData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.RoundVideoData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.RoundVideoData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.RoundVideoData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.RoundVideoData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.sc_ != java.util.Collections.EMPTY_LIST) {
          result.sc_ =
            java.util.Collections.unmodifiableList(result.sc_);
        }
        com.randioo.compare_collections_server.protocol.Entity.RoundVideoData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.RoundVideoData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.RoundVideoData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.RoundVideoData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.RoundVideoData.getDefaultInstance()) return this;
        if (!other.sc_.isEmpty()) {
          if (result.sc_.isEmpty()) {
            result.sc_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
          }
          result.sc_.addAll(other.sc_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              addSc(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // repeated bytes sc = 1;
      public java.util.List<com.google.protobuf.ByteString> getScList() {
        return java.util.Collections.unmodifiableList(result.sc_);
      }
      public int getScCount() {
        return result.getScCount();
      }
      public com.google.protobuf.ByteString getSc(int index) {
        return result.getSc(index);
      }
      public Builder setSc(int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.sc_.set(index, value);
        return this;
      }
      public Builder addSc(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.sc_.isEmpty()) {
          result.sc_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        result.sc_.add(value);
        return this;
      }
      public Builder addAllSc(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        if (result.sc_.isEmpty()) {
          result.sc_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        super.addAll(values, result.sc_);
        return this;
      }
      public Builder clearSc() {
        result.sc_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.RoundVideoData)
    }
    
    static {
      defaultInstance = new RoundVideoData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.RoundVideoData)
  }
  
  public static final class GameVideoData extends
      com.google.protobuf.GeneratedMessage {
    // Use GameVideoData.newBuilder() to construct.
    private GameVideoData() {
      initFields();
    }
    private GameVideoData(boolean noInit) {}
    
    private static final GameVideoData defaultInstance;
    public static GameVideoData getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameVideoData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_GameVideoData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_GameVideoData_fieldAccessorTable;
    }
    
    // repeated .com.randioo.compare_collections_server.protocol.RoundVideoData roundVideoData = 1;
    public static final int ROUNDVIDEODATA_FIELD_NUMBER = 1;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoundVideoData> roundVideoData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoundVideoData> getRoundVideoDataList() {
      return roundVideoData_;
    }
    public int getRoundVideoDataCount() { return roundVideoData_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.RoundVideoData getRoundVideoData(int index) {
      return roundVideoData_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.randioo.compare_collections_server.protocol.Entity.RoundVideoData element : getRoundVideoDataList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.randioo.compare_collections_server.protocol.Entity.RoundVideoData element : getRoundVideoDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.GameVideoData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameVideoData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameVideoData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameVideoData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameVideoData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameVideoData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameVideoData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameVideoData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameVideoData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.GameVideoData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.GameVideoData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.GameVideoData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.GameVideoData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.GameVideoData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.GameVideoData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.GameVideoData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.GameVideoData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.GameVideoData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.GameVideoData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.GameVideoData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.GameVideoData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.GameVideoData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.roundVideoData_ != java.util.Collections.EMPTY_LIST) {
          result.roundVideoData_ =
            java.util.Collections.unmodifiableList(result.roundVideoData_);
        }
        com.randioo.compare_collections_server.protocol.Entity.GameVideoData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.GameVideoData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.GameVideoData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.GameVideoData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.GameVideoData.getDefaultInstance()) return this;
        if (!other.roundVideoData_.isEmpty()) {
          if (result.roundVideoData_.isEmpty()) {
            result.roundVideoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoundVideoData>();
          }
          result.roundVideoData_.addAll(other.roundVideoData_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.randioo.compare_collections_server.protocol.Entity.RoundVideoData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.RoundVideoData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoundVideoData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .com.randioo.compare_collections_server.protocol.RoundVideoData roundVideoData = 1;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoundVideoData> getRoundVideoDataList() {
        return java.util.Collections.unmodifiableList(result.roundVideoData_);
      }
      public int getRoundVideoDataCount() {
        return result.getRoundVideoDataCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.RoundVideoData getRoundVideoData(int index) {
        return result.getRoundVideoData(index);
      }
      public Builder setRoundVideoData(int index, com.randioo.compare_collections_server.protocol.Entity.RoundVideoData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.roundVideoData_.set(index, value);
        return this;
      }
      public Builder setRoundVideoData(int index, com.randioo.compare_collections_server.protocol.Entity.RoundVideoData.Builder builderForValue) {
        result.roundVideoData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRoundVideoData(com.randioo.compare_collections_server.protocol.Entity.RoundVideoData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.roundVideoData_.isEmpty()) {
          result.roundVideoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoundVideoData>();
        }
        result.roundVideoData_.add(value);
        return this;
      }
      public Builder addRoundVideoData(com.randioo.compare_collections_server.protocol.Entity.RoundVideoData.Builder builderForValue) {
        if (result.roundVideoData_.isEmpty()) {
          result.roundVideoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoundVideoData>();
        }
        result.roundVideoData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRoundVideoData(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.RoundVideoData> values) {
        if (result.roundVideoData_.isEmpty()) {
          result.roundVideoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoundVideoData>();
        }
        super.addAll(values, result.roundVideoData_);
        return this;
      }
      public Builder clearRoundVideoData() {
        result.roundVideoData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.GameVideoData)
    }
    
    static {
      defaultInstance = new GameVideoData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.GameVideoData)
  }
  
  public static final class ClientCard extends
      com.google.protobuf.GeneratedMessage {
    // Use ClientCard.newBuilder() to construct.
    private ClientCard() {
      initFields();
    }
    private ClientCard(boolean noInit) {}
    
    private static final ClientCard defaultInstance;
    public static ClientCard getDefaultInstance() {
      return defaultInstance;
    }
    
    public ClientCard getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_ClientCard_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_ClientCard_fieldAccessorTable;
    }
    
    // repeated int32 cards = 1;
    public static final int CARDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cards_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getCardsList() {
      return cards_;
    }
    public int getCardsCount() { return cards_.size(); }
    public int getCards(int index) {
      return cards_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getCardsList()) {
        output.writeInt32(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int element : getCardsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.ClientCard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ClientCard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ClientCard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ClientCard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ClientCard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ClientCard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ClientCard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ClientCard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ClientCard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ClientCard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.ClientCard prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.ClientCard result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.ClientCard.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.ClientCard();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.ClientCard internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.ClientCard();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.ClientCard.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.ClientCard getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.ClientCard.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.ClientCard build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.ClientCard buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.ClientCard buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.cards_ != java.util.Collections.EMPTY_LIST) {
          result.cards_ =
            java.util.Collections.unmodifiableList(result.cards_);
        }
        com.randioo.compare_collections_server.protocol.Entity.ClientCard returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.ClientCard) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.ClientCard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.ClientCard other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.ClientCard.getDefaultInstance()) return this;
        if (!other.cards_.isEmpty()) {
          if (result.cards_.isEmpty()) {
            result.cards_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.cards_.addAll(other.cards_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              addCards(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCards(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated int32 cards = 1;
      public java.util.List<java.lang.Integer> getCardsList() {
        return java.util.Collections.unmodifiableList(result.cards_);
      }
      public int getCardsCount() {
        return result.getCardsCount();
      }
      public int getCards(int index) {
        return result.getCards(index);
      }
      public Builder setCards(int index, int value) {
        result.cards_.set(index, value);
        return this;
      }
      public Builder addCards(int value) {
        if (result.cards_.isEmpty()) {
          result.cards_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.cards_.add(value);
        return this;
      }
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.cards_.isEmpty()) {
          result.cards_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.cards_);
        return this;
      }
      public Builder clearCards() {
        result.cards_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.ClientCard)
    }
    
    static {
      defaultInstance = new ClientCard(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.ClientCard)
  }
  
  public static final class EnvVarsData extends
      com.google.protobuf.GeneratedMessage {
    // Use EnvVarsData.newBuilder() to construct.
    private EnvVarsData() {
      initFields();
    }
    private EnvVarsData(boolean noInit) {}
    
    private static final EnvVarsData defaultInstance;
    public static EnvVarsData getDefaultInstance() {
      return defaultInstance;
    }
    
    public EnvVarsData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_EnvVarsData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_EnvVarsData_fieldAccessorTable;
    }
    
    // optional string key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private boolean hasKey;
    private java.lang.String key_ = "";
    public boolean hasKey() { return hasKey; }
    public java.lang.String getKey() { return key_; }
    
    // optional string value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private boolean hasValue;
    private java.lang.String value_ = "";
    public boolean hasValue() { return hasValue; }
    public java.lang.String getValue() { return value_; }
    
    // optional string type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private boolean hasType;
    private java.lang.String type_ = "";
    public boolean hasType() { return hasType; }
    public java.lang.String getType() { return type_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasKey()) {
        output.writeString(1, getKey());
      }
      if (hasValue()) {
        output.writeString(2, getValue());
      }
      if (hasType()) {
        output.writeString(3, getType());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getKey());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getValue());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.EnvVarsData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.EnvVarsData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.EnvVarsData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.EnvVarsData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.EnvVarsData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.EnvVarsData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.EnvVarsData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.EnvVarsData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.EnvVarsData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.EnvVarsData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.EnvVarsData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.EnvVarsData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.EnvVarsData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.EnvVarsData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.EnvVarsData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.EnvVarsData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.EnvVarsData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.EnvVarsData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.EnvVarsData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.EnvVarsData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.EnvVarsData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.EnvVarsData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.compare_collections_server.protocol.Entity.EnvVarsData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.EnvVarsData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.EnvVarsData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.EnvVarsData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.EnvVarsData.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setKey(input.readString());
              break;
            }
            case 18: {
              setValue(input.readString());
              break;
            }
            case 26: {
              setType(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string key = 1;
      public boolean hasKey() {
        return result.hasKey();
      }
      public java.lang.String getKey() {
        return result.getKey();
      }
      public Builder setKey(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder clearKey() {
        result.hasKey = false;
        result.key_ = getDefaultInstance().getKey();
        return this;
      }
      
      // optional string value = 2;
      public boolean hasValue() {
        return result.hasValue();
      }
      public java.lang.String getValue() {
        return result.getValue();
      }
      public Builder setValue(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = getDefaultInstance().getValue();
        return this;
      }
      
      // optional string type = 3;
      public boolean hasType() {
        return result.hasType();
      }
      public java.lang.String getType() {
        return result.getType();
      }
      public Builder setType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = getDefaultInstance().getType();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.EnvVarsData)
    }
    
    static {
      defaultInstance = new EnvVarsData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.EnvVarsData)
  }
  
  public static final class RoleGameOverInfoData extends
      com.google.protobuf.GeneratedMessage {
    // Use RoleGameOverInfoData.newBuilder() to construct.
    private RoleGameOverInfoData() {
      initFields();
    }
    private RoleGameOverInfoData(boolean noInit) {}
    
    private static final RoleGameOverInfoData defaultInstance;
    public static RoleGameOverInfoData getDefaultInstance() {
      return defaultInstance;
    }
    
    public RoleGameOverInfoData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_RoleGameOverInfoData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_RoleGameOverInfoData_fieldAccessorTable;
    }
    
    // optional .com.randioo.compare_collections_server.protocol.GameRoleData gameRoleData = 1;
    public static final int GAMEROLEDATA_FIELD_NUMBER = 1;
    private boolean hasGameRoleData;
    private com.randioo.compare_collections_server.protocol.Entity.GameRoleData gameRoleData_;
    public boolean hasGameRoleData() { return hasGameRoleData; }
    public com.randioo.compare_collections_server.protocol.Entity.GameRoleData getGameRoleData() { return gameRoleData_; }
    
    // optional int32 score = 2;
    public static final int SCORE_FIELD_NUMBER = 2;
    private boolean hasScore;
    private int score_ = 0;
    public boolean hasScore() { return hasScore; }
    public int getScore() { return score_; }
    
    // optional int32 chipMoney = 3;
    public static final int CHIPMONEY_FIELD_NUMBER = 3;
    private boolean hasChipMoney;
    private int chipMoney_ = 0;
    public boolean hasChipMoney() { return hasChipMoney; }
    public int getChipMoney() { return chipMoney_; }
    
    // optional int32 winCount = 4;
    public static final int WINCOUNT_FIELD_NUMBER = 4;
    private boolean hasWinCount;
    private int winCount_ = 0;
    public boolean hasWinCount() { return hasWinCount; }
    public int getWinCount() { return winCount_; }
    
    // optional int32 lossCount = 5;
    public static final int LOSSCOUNT_FIELD_NUMBER = 5;
    private boolean hasLossCount;
    private int lossCount_ = 0;
    public boolean hasLossCount() { return hasLossCount; }
    public int getLossCount() { return lossCount_; }
    
    // optional bool master = 6;
    public static final int MASTER_FIELD_NUMBER = 6;
    private boolean hasMaster;
    private boolean master_ = false;
    public boolean hasMaster() { return hasMaster; }
    public boolean getMaster() { return master_; }
    
    // optional int32 roleId = 7;
    public static final int ROLEID_FIELD_NUMBER = 7;
    private boolean hasRoleId;
    private int roleId_ = 0;
    public boolean hasRoleId() { return hasRoleId; }
    public int getRoleId() { return roleId_; }
    
    private void initFields() {
      gameRoleData_ = com.randioo.compare_collections_server.protocol.Entity.GameRoleData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameRoleData()) {
        output.writeMessage(1, getGameRoleData());
      }
      if (hasScore()) {
        output.writeInt32(2, getScore());
      }
      if (hasChipMoney()) {
        output.writeInt32(3, getChipMoney());
      }
      if (hasWinCount()) {
        output.writeInt32(4, getWinCount());
      }
      if (hasLossCount()) {
        output.writeInt32(5, getLossCount());
      }
      if (hasMaster()) {
        output.writeBool(6, getMaster());
      }
      if (hasRoleId()) {
        output.writeInt32(7, getRoleId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameRoleData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGameRoleData());
      }
      if (hasScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getScore());
      }
      if (hasChipMoney()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getChipMoney());
      }
      if (hasWinCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getWinCount());
      }
      if (hasLossCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getLossCount());
      }
      if (hasMaster()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, getMaster());
      }
      if (hasRoleId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getRoleId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData.getDefaultInstance()) return this;
        if (other.hasGameRoleData()) {
          mergeGameRoleData(other.getGameRoleData());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasChipMoney()) {
          setChipMoney(other.getChipMoney());
        }
        if (other.hasWinCount()) {
          setWinCount(other.getWinCount());
        }
        if (other.hasLossCount()) {
          setLossCount(other.getLossCount());
        }
        if (other.hasMaster()) {
          setMaster(other.getMaster());
        }
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.GameRoleData.newBuilder();
              if (hasGameRoleData()) {
                subBuilder.mergeFrom(getGameRoleData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameRoleData(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setScore(input.readInt32());
              break;
            }
            case 24: {
              setChipMoney(input.readInt32());
              break;
            }
            case 32: {
              setWinCount(input.readInt32());
              break;
            }
            case 40: {
              setLossCount(input.readInt32());
              break;
            }
            case 48: {
              setMaster(input.readBool());
              break;
            }
            case 56: {
              setRoleId(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional .com.randioo.compare_collections_server.protocol.GameRoleData gameRoleData = 1;
      public boolean hasGameRoleData() {
        return result.hasGameRoleData();
      }
      public com.randioo.compare_collections_server.protocol.Entity.GameRoleData getGameRoleData() {
        return result.getGameRoleData();
      }
      public Builder setGameRoleData(com.randioo.compare_collections_server.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameRoleData = true;
        result.gameRoleData_ = value;
        return this;
      }
      public Builder setGameRoleData(com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder builderForValue) {
        result.hasGameRoleData = true;
        result.gameRoleData_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameRoleData(com.randioo.compare_collections_server.protocol.Entity.GameRoleData value) {
        if (result.hasGameRoleData() &&
            result.gameRoleData_ != com.randioo.compare_collections_server.protocol.Entity.GameRoleData.getDefaultInstance()) {
          result.gameRoleData_ =
            com.randioo.compare_collections_server.protocol.Entity.GameRoleData.newBuilder(result.gameRoleData_).mergeFrom(value).buildPartial();
        } else {
          result.gameRoleData_ = value;
        }
        result.hasGameRoleData = true;
        return this;
      }
      public Builder clearGameRoleData() {
        result.hasGameRoleData = false;
        result.gameRoleData_ = com.randioo.compare_collections_server.protocol.Entity.GameRoleData.getDefaultInstance();
        return this;
      }
      
      // optional int32 score = 2;
      public boolean hasScore() {
        return result.hasScore();
      }
      public int getScore() {
        return result.getScore();
      }
      public Builder setScore(int value) {
        result.hasScore = true;
        result.score_ = value;
        return this;
      }
      public Builder clearScore() {
        result.hasScore = false;
        result.score_ = 0;
        return this;
      }
      
      // optional int32 chipMoney = 3;
      public boolean hasChipMoney() {
        return result.hasChipMoney();
      }
      public int getChipMoney() {
        return result.getChipMoney();
      }
      public Builder setChipMoney(int value) {
        result.hasChipMoney = true;
        result.chipMoney_ = value;
        return this;
      }
      public Builder clearChipMoney() {
        result.hasChipMoney = false;
        result.chipMoney_ = 0;
        return this;
      }
      
      // optional int32 winCount = 4;
      public boolean hasWinCount() {
        return result.hasWinCount();
      }
      public int getWinCount() {
        return result.getWinCount();
      }
      public Builder setWinCount(int value) {
        result.hasWinCount = true;
        result.winCount_ = value;
        return this;
      }
      public Builder clearWinCount() {
        result.hasWinCount = false;
        result.winCount_ = 0;
        return this;
      }
      
      // optional int32 lossCount = 5;
      public boolean hasLossCount() {
        return result.hasLossCount();
      }
      public int getLossCount() {
        return result.getLossCount();
      }
      public Builder setLossCount(int value) {
        result.hasLossCount = true;
        result.lossCount_ = value;
        return this;
      }
      public Builder clearLossCount() {
        result.hasLossCount = false;
        result.lossCount_ = 0;
        return this;
      }
      
      // optional bool master = 6;
      public boolean hasMaster() {
        return result.hasMaster();
      }
      public boolean getMaster() {
        return result.getMaster();
      }
      public Builder setMaster(boolean value) {
        result.hasMaster = true;
        result.master_ = value;
        return this;
      }
      public Builder clearMaster() {
        result.hasMaster = false;
        result.master_ = false;
        return this;
      }
      
      // optional int32 roleId = 7;
      public boolean hasRoleId() {
        return result.hasRoleId();
      }
      public int getRoleId() {
        return result.getRoleId();
      }
      public Builder setRoleId(int value) {
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder clearRoleId() {
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.RoleGameOverInfoData)
    }
    
    static {
      defaultInstance = new RoleGameOverInfoData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.RoleGameOverInfoData)
  }
  
  public static final class ResultGameOverData extends
      com.google.protobuf.GeneratedMessage {
    // Use ResultGameOverData.newBuilder() to construct.
    private ResultGameOverData() {
      initFields();
    }
    private ResultGameOverData(boolean noInit) {}
    
    private static final ResultGameOverData defaultInstance;
    public static ResultGameOverData getDefaultInstance() {
      return defaultInstance;
    }
    
    public ResultGameOverData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_ResultGameOverData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_ResultGameOverData_fieldAccessorTable;
    }
    
    // repeated .com.randioo.compare_collections_server.protocol.RoleGameOverInfoData roleGameOverInfoData = 1;
    public static final int ROLEGAMEOVERINFODATA_FIELD_NUMBER = 1;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData> roleGameOverInfoData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData> getRoleGameOverInfoDataList() {
      return roleGameOverInfoData_;
    }
    public int getRoleGameOverInfoDataCount() { return roleGameOverInfoData_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData getRoleGameOverInfoData(int index) {
      return roleGameOverInfoData_.get(index);
    }
    
    // optional .com.randioo.compare_collections_server.protocol.GameConfigData gameConfigData = 2;
    public static final int GAMECONFIGDATA_FIELD_NUMBER = 2;
    private boolean hasGameConfigData;
    private com.randioo.compare_collections_server.protocol.Entity.GameConfigData gameConfigData_;
    public boolean hasGameConfigData() { return hasGameConfigData; }
    public com.randioo.compare_collections_server.protocol.Entity.GameConfigData getGameConfigData() { return gameConfigData_; }
    
    // optional string gameOverTimestamp = 3;
    public static final int GAMEOVERTIMESTAMP_FIELD_NUMBER = 3;
    private boolean hasGameOverTimestamp;
    private java.lang.String gameOverTimestamp_ = "";
    public boolean hasGameOverTimestamp() { return hasGameOverTimestamp; }
    public java.lang.String getGameOverTimestamp() { return gameOverTimestamp_; }
    
    private void initFields() {
      gameConfigData_ = com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData element : getRoleGameOverInfoDataList()) {
        output.writeMessage(1, element);
      }
      if (hasGameConfigData()) {
        output.writeMessage(2, getGameConfigData());
      }
      if (hasGameOverTimestamp()) {
        output.writeString(3, getGameOverTimestamp());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData element : getRoleGameOverInfoDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasGameConfigData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGameConfigData());
      }
      if (hasGameOverTimestamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getGameOverTimestamp());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.roleGameOverInfoData_ != java.util.Collections.EMPTY_LIST) {
          result.roleGameOverInfoData_ =
            java.util.Collections.unmodifiableList(result.roleGameOverInfoData_);
        }
        com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.getDefaultInstance()) return this;
        if (!other.roleGameOverInfoData_.isEmpty()) {
          if (result.roleGameOverInfoData_.isEmpty()) {
            result.roleGameOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData>();
          }
          result.roleGameOverInfoData_.addAll(other.roleGameOverInfoData_);
        }
        if (other.hasGameConfigData()) {
          mergeGameConfigData(other.getGameConfigData());
        }
        if (other.hasGameOverTimestamp()) {
          setGameOverTimestamp(other.getGameOverTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoleGameOverInfoData(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.randioo.compare_collections_server.protocol.Entity.GameConfigData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.GameConfigData.newBuilder();
              if (hasGameConfigData()) {
                subBuilder.mergeFrom(getGameConfigData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameConfigData(subBuilder.buildPartial());
              break;
            }
            case 26: {
              setGameOverTimestamp(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated .com.randioo.compare_collections_server.protocol.RoleGameOverInfoData roleGameOverInfoData = 1;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData> getRoleGameOverInfoDataList() {
        return java.util.Collections.unmodifiableList(result.roleGameOverInfoData_);
      }
      public int getRoleGameOverInfoDataCount() {
        return result.getRoleGameOverInfoDataCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData getRoleGameOverInfoData(int index) {
        return result.getRoleGameOverInfoData(index);
      }
      public Builder setRoleGameOverInfoData(int index, com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.roleGameOverInfoData_.set(index, value);
        return this;
      }
      public Builder setRoleGameOverInfoData(int index, com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData.Builder builderForValue) {
        result.roleGameOverInfoData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRoleGameOverInfoData(com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.roleGameOverInfoData_.isEmpty()) {
          result.roleGameOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData>();
        }
        result.roleGameOverInfoData_.add(value);
        return this;
      }
      public Builder addRoleGameOverInfoData(com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData.Builder builderForValue) {
        if (result.roleGameOverInfoData_.isEmpty()) {
          result.roleGameOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData>();
        }
        result.roleGameOverInfoData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRoleGameOverInfoData(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData> values) {
        if (result.roleGameOverInfoData_.isEmpty()) {
          result.roleGameOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData>();
        }
        super.addAll(values, result.roleGameOverInfoData_);
        return this;
      }
      public Builder clearRoleGameOverInfoData() {
        result.roleGameOverInfoData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.GameConfigData gameConfigData = 2;
      public boolean hasGameConfigData() {
        return result.hasGameConfigData();
      }
      public com.randioo.compare_collections_server.protocol.Entity.GameConfigData getGameConfigData() {
        return result.getGameConfigData();
      }
      public Builder setGameConfigData(com.randioo.compare_collections_server.protocol.Entity.GameConfigData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameConfigData = true;
        result.gameConfigData_ = value;
        return this;
      }
      public Builder setGameConfigData(com.randioo.compare_collections_server.protocol.Entity.GameConfigData.Builder builderForValue) {
        result.hasGameConfigData = true;
        result.gameConfigData_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameConfigData(com.randioo.compare_collections_server.protocol.Entity.GameConfigData value) {
        if (result.hasGameConfigData() &&
            result.gameConfigData_ != com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDefaultInstance()) {
          result.gameConfigData_ =
            com.randioo.compare_collections_server.protocol.Entity.GameConfigData.newBuilder(result.gameConfigData_).mergeFrom(value).buildPartial();
        } else {
          result.gameConfigData_ = value;
        }
        result.hasGameConfigData = true;
        return this;
      }
      public Builder clearGameConfigData() {
        result.hasGameConfigData = false;
        result.gameConfigData_ = com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDefaultInstance();
        return this;
      }
      
      // optional string gameOverTimestamp = 3;
      public boolean hasGameOverTimestamp() {
        return result.hasGameOverTimestamp();
      }
      public java.lang.String getGameOverTimestamp() {
        return result.getGameOverTimestamp();
      }
      public Builder setGameOverTimestamp(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameOverTimestamp = true;
        result.gameOverTimestamp_ = value;
        return this;
      }
      public Builder clearGameOverTimestamp() {
        result.hasGameOverTimestamp = false;
        result.gameOverTimestamp_ = getDefaultInstance().getGameOverTimestamp();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.ResultGameOverData)
    }
    
    static {
      defaultInstance = new ResultGameOverData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.ResultGameOverData)
  }
  
  public static final class CxReconnectedData extends
      com.google.protobuf.GeneratedMessage {
    // Use CxReconnectedData.newBuilder() to construct.
    private CxReconnectedData() {
      initFields();
    }
    private CxReconnectedData(boolean noInit) {}
    
    private static final CxReconnectedData defaultInstance;
    public static CxReconnectedData getDefaultInstance() {
      return defaultInstance;
    }
    
    public CxReconnectedData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_CxReconnectedData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_CxReconnectedData_fieldAccessorTable;
    }
    
    // optional int32 mySeat = 1;
    public static final int MYSEAT_FIELD_NUMBER = 1;
    private boolean hasMySeat;
    private int mySeat_ = 0;
    public boolean hasMySeat() { return hasMySeat; }
    public int getMySeat() { return mySeat_; }
    
    // repeated .com.randioo.compare_collections_server.protocol.GameRoleData gameRoleData = 2;
    public static final int GAMEROLEDATA_FIELD_NUMBER = 2;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.GameRoleData> gameRoleData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.GameRoleData> getGameRoleDataList() {
      return gameRoleData_;
    }
    public int getGameRoleDataCount() { return gameRoleData_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.GameRoleData getGameRoleData(int index) {
      return gameRoleData_.get(index);
    }
    
    // repeated .com.randioo.compare_collections_server.protocol.RoleCardData roleCardData = 3;
    public static final int ROLECARDDATA_FIELD_NUMBER = 3;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleCardData> roleCardData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleCardData> getRoleCardDataList() {
      return roleCardData_;
    }
    public int getRoleCardDataCount() { return roleCardData_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.RoleCardData getRoleCardData(int index) {
      return roleCardData_.get(index);
    }
    
    // repeated .com.randioo.compare_collections_server.protocol.ScoreData tableChips = 4;
    public static final int TABLECHIPS_FIELD_NUMBER = 4;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> tableChips_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> getTableChipsList() {
      return tableChips_;
    }
    public int getTableChipsCount() { return tableChips_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.ScoreData getTableChips(int index) {
      return tableChips_.get(index);
    }
    
    // repeated .com.randioo.compare_collections_server.protocol.ScoreData roleChips = 5;
    public static final int ROLECHIPS_FIELD_NUMBER = 5;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> roleChips_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> getRoleChipsList() {
      return roleChips_;
    }
    public int getRoleChipsCount() { return roleChips_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.ScoreData getRoleChips(int index) {
      return roleChips_.get(index);
    }
    
    // repeated int32 callTypes = 6;
    public static final int CALLTYPES_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> callTypes_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getCallTypesList() {
      return callTypes_;
    }
    public int getCallTypesCount() { return callTypes_.size(); }
    public int getCallTypes(int index) {
      return callTypes_.get(index);
    }
    
    // optional int32 callSeat = 7;
    public static final int CALLSEAT_FIELD_NUMBER = 7;
    private boolean hasCallSeat;
    private int callSeat_ = 0;
    public boolean hasCallSeat() { return hasCallSeat; }
    public int getCallSeat() { return callSeat_; }
    
    // optional .com.randioo.compare_collections_server.protocol.GameConfigData gameConfigData = 8;
    public static final int GAMECONFIGDATA_FIELD_NUMBER = 8;
    private boolean hasGameConfigData;
    private com.randioo.compare_collections_server.protocol.Entity.GameConfigData gameConfigData_;
    public boolean hasGameConfigData() { return hasGameConfigData; }
    public com.randioo.compare_collections_server.protocol.Entity.GameConfigData getGameConfigData() { return gameConfigData_; }
    
    // optional int32 finishRoundCount = 9;
    public static final int FINISHROUNDCOUNT_FIELD_NUMBER = 9;
    private boolean hasFinishRoundCount;
    private int finishRoundCount_ = 0;
    public boolean hasFinishRoundCount() { return hasFinishRoundCount; }
    public int getFinishRoundCount() { return finishRoundCount_; }
    
    // optional .com.randioo.compare_collections_server.protocol.ResultGameOverData ResultGameOverData = 10;
    public static final int RESULTGAMEOVERDATA_FIELD_NUMBER = 10;
    private boolean hasResultGameOverData;
    private com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData resultGameOverData_;
    public boolean hasResultGameOverData() { return hasResultGameOverData; }
    public com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData getResultGameOverData() { return resultGameOverData_; }
    
    // repeated int32 giveUpSeat = 11;
    public static final int GIVEUPSEAT_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> giveUpSeat_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getGiveUpSeatList() {
      return giveUpSeat_;
    }
    public int getGiveUpSeatCount() { return giveUpSeat_.size(); }
    public int getGiveUpSeat(int index) {
      return giveUpSeat_.get(index);
    }
    
    // optional int32 cutCardsState = 12;
    public static final int CUTCARDSSTATE_FIELD_NUMBER = 12;
    private boolean hasCutCardsState;
    private int cutCardsState_ = 0;
    public boolean hasCutCardsState() { return hasCutCardsState; }
    public int getCutCardsState() { return cutCardsState_; }
    
    // optional int32 basePool = 13;
    public static final int BASEPOOL_FIELD_NUMBER = 13;
    private boolean hasBasePool;
    private int basePool_ = 0;
    public boolean hasBasePool() { return hasBasePool; }
    public int getBasePool() { return basePool_; }
    
    // optional int32 applyExitSeat = 14;
    public static final int APPLYEXITSEAT_FIELD_NUMBER = 14;
    private boolean hasApplyExitSeat;
    private int applyExitSeat_ = 0;
    public boolean hasApplyExitSeat() { return hasApplyExitSeat; }
    public int getApplyExitSeat() { return applyExitSeat_; }
    
    // repeated int32 rejectSeat = 15;
    public static final int REJECTSEAT_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> rejectSeat_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getRejectSeatList() {
      return rejectSeat_;
    }
    public int getRejectSeatCount() { return rejectSeat_.size(); }
    public int getRejectSeat(int index) {
      return rejectSeat_.get(index);
    }
    
    // repeated int32 agreeSeat = 16;
    public static final int AGREESEAT_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> agreeSeat_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getAgreeSeatList() {
      return agreeSeat_;
    }
    public int getAgreeSeatCount() { return agreeSeat_.size(); }
    public int getAgreeSeat(int index) {
      return agreeSeat_.get(index);
    }
    
    // repeated .com.randioo.compare_collections_server.protocol.RoleRoundOverInfoData roleRoundOverInfoData = 17;
    public static final int ROLEROUNDOVERINFODATA_FIELD_NUMBER = 17;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData> roleRoundOverInfoData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData> getRoleRoundOverInfoDataList() {
      return roleRoundOverInfoData_;
    }
    public int getRoleRoundOverInfoDataCount() { return roleRoundOverInfoData_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData getRoleRoundOverInfoData(int index) {
      return roleRoundOverInfoData_.get(index);
    }
    
    // optional int32 exitApplyId = 18;
    public static final int EXITAPPLYID_FIELD_NUMBER = 18;
    private boolean hasExitApplyId;
    private int exitApplyId_ = 0;
    public boolean hasExitApplyId() { return hasExitApplyId; }
    public int getExitApplyId() { return exitApplyId_; }
    
    private void initFields() {
      gameConfigData_ = com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDefaultInstance();
      resultGameOverData_ = com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasMySeat()) {
        output.writeInt32(1, getMySeat());
      }
      for (com.randioo.compare_collections_server.protocol.Entity.GameRoleData element : getGameRoleDataList()) {
        output.writeMessage(2, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.RoleCardData element : getRoleCardDataList()) {
        output.writeMessage(3, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.ScoreData element : getTableChipsList()) {
        output.writeMessage(4, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.ScoreData element : getRoleChipsList()) {
        output.writeMessage(5, element);
      }
      for (int element : getCallTypesList()) {
        output.writeInt32(6, element);
      }
      if (hasCallSeat()) {
        output.writeInt32(7, getCallSeat());
      }
      if (hasGameConfigData()) {
        output.writeMessage(8, getGameConfigData());
      }
      if (hasFinishRoundCount()) {
        output.writeInt32(9, getFinishRoundCount());
      }
      if (hasResultGameOverData()) {
        output.writeMessage(10, getResultGameOverData());
      }
      for (int element : getGiveUpSeatList()) {
        output.writeInt32(11, element);
      }
      if (hasCutCardsState()) {
        output.writeInt32(12, getCutCardsState());
      }
      if (hasBasePool()) {
        output.writeInt32(13, getBasePool());
      }
      if (hasApplyExitSeat()) {
        output.writeInt32(14, getApplyExitSeat());
      }
      for (int element : getRejectSeatList()) {
        output.writeInt32(15, element);
      }
      for (int element : getAgreeSeatList()) {
        output.writeInt32(16, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData element : getRoleRoundOverInfoDataList()) {
        output.writeMessage(17, element);
      }
      if (hasExitApplyId()) {
        output.writeInt32(18, getExitApplyId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMySeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getMySeat());
      }
      for (com.randioo.compare_collections_server.protocol.Entity.GameRoleData element : getGameRoleDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.RoleCardData element : getRoleCardDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.ScoreData element : getTableChipsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.ScoreData element : getRoleChipsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      {
        int dataSize = 0;
        for (int element : getCallTypesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCallTypesList().size();
      }
      if (hasCallSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getCallSeat());
      }
      if (hasGameConfigData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getGameConfigData());
      }
      if (hasFinishRoundCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, getFinishRoundCount());
      }
      if (hasResultGameOverData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getResultGameOverData());
      }
      {
        int dataSize = 0;
        for (int element : getGiveUpSeatList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getGiveUpSeatList().size();
      }
      if (hasCutCardsState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, getCutCardsState());
      }
      if (hasBasePool()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, getBasePool());
      }
      if (hasApplyExitSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, getApplyExitSeat());
      }
      {
        int dataSize = 0;
        for (int element : getRejectSeatList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getRejectSeatList().size();
      }
      {
        int dataSize = 0;
        for (int element : getAgreeSeatList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 2 * getAgreeSeatList().size();
      }
      for (com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData element : getRoleRoundOverInfoDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, element);
      }
      if (hasExitApplyId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, getExitApplyId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.gameRoleData_ != java.util.Collections.EMPTY_LIST) {
          result.gameRoleData_ =
            java.util.Collections.unmodifiableList(result.gameRoleData_);
        }
        if (result.roleCardData_ != java.util.Collections.EMPTY_LIST) {
          result.roleCardData_ =
            java.util.Collections.unmodifiableList(result.roleCardData_);
        }
        if (result.tableChips_ != java.util.Collections.EMPTY_LIST) {
          result.tableChips_ =
            java.util.Collections.unmodifiableList(result.tableChips_);
        }
        if (result.roleChips_ != java.util.Collections.EMPTY_LIST) {
          result.roleChips_ =
            java.util.Collections.unmodifiableList(result.roleChips_);
        }
        if (result.callTypes_ != java.util.Collections.EMPTY_LIST) {
          result.callTypes_ =
            java.util.Collections.unmodifiableList(result.callTypes_);
        }
        if (result.giveUpSeat_ != java.util.Collections.EMPTY_LIST) {
          result.giveUpSeat_ =
            java.util.Collections.unmodifiableList(result.giveUpSeat_);
        }
        if (result.rejectSeat_ != java.util.Collections.EMPTY_LIST) {
          result.rejectSeat_ =
            java.util.Collections.unmodifiableList(result.rejectSeat_);
        }
        if (result.agreeSeat_ != java.util.Collections.EMPTY_LIST) {
          result.agreeSeat_ =
            java.util.Collections.unmodifiableList(result.agreeSeat_);
        }
        if (result.roleRoundOverInfoData_ != java.util.Collections.EMPTY_LIST) {
          result.roleRoundOverInfoData_ =
            java.util.Collections.unmodifiableList(result.roleRoundOverInfoData_);
        }
        com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData.getDefaultInstance()) return this;
        if (other.hasMySeat()) {
          setMySeat(other.getMySeat());
        }
        if (!other.gameRoleData_.isEmpty()) {
          if (result.gameRoleData_.isEmpty()) {
            result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
          }
          result.gameRoleData_.addAll(other.gameRoleData_);
        }
        if (!other.roleCardData_.isEmpty()) {
          if (result.roleCardData_.isEmpty()) {
            result.roleCardData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleCardData>();
          }
          result.roleCardData_.addAll(other.roleCardData_);
        }
        if (!other.tableChips_.isEmpty()) {
          if (result.tableChips_.isEmpty()) {
            result.tableChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
          }
          result.tableChips_.addAll(other.tableChips_);
        }
        if (!other.roleChips_.isEmpty()) {
          if (result.roleChips_.isEmpty()) {
            result.roleChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
          }
          result.roleChips_.addAll(other.roleChips_);
        }
        if (!other.callTypes_.isEmpty()) {
          if (result.callTypes_.isEmpty()) {
            result.callTypes_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.callTypes_.addAll(other.callTypes_);
        }
        if (other.hasCallSeat()) {
          setCallSeat(other.getCallSeat());
        }
        if (other.hasGameConfigData()) {
          mergeGameConfigData(other.getGameConfigData());
        }
        if (other.hasFinishRoundCount()) {
          setFinishRoundCount(other.getFinishRoundCount());
        }
        if (other.hasResultGameOverData()) {
          mergeResultGameOverData(other.getResultGameOverData());
        }
        if (!other.giveUpSeat_.isEmpty()) {
          if (result.giveUpSeat_.isEmpty()) {
            result.giveUpSeat_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.giveUpSeat_.addAll(other.giveUpSeat_);
        }
        if (other.hasCutCardsState()) {
          setCutCardsState(other.getCutCardsState());
        }
        if (other.hasBasePool()) {
          setBasePool(other.getBasePool());
        }
        if (other.hasApplyExitSeat()) {
          setApplyExitSeat(other.getApplyExitSeat());
        }
        if (!other.rejectSeat_.isEmpty()) {
          if (result.rejectSeat_.isEmpty()) {
            result.rejectSeat_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.rejectSeat_.addAll(other.rejectSeat_);
        }
        if (!other.agreeSeat_.isEmpty()) {
          if (result.agreeSeat_.isEmpty()) {
            result.agreeSeat_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.agreeSeat_.addAll(other.agreeSeat_);
        }
        if (!other.roleRoundOverInfoData_.isEmpty()) {
          if (result.roleRoundOverInfoData_.isEmpty()) {
            result.roleRoundOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData>();
          }
          result.roleRoundOverInfoData_.addAll(other.roleRoundOverInfoData_);
        }
        if (other.hasExitApplyId()) {
          setExitApplyId(other.getExitApplyId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setMySeat(input.readInt32());
              break;
            }
            case 18: {
              com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.GameRoleData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGameRoleData(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.randioo.compare_collections_server.protocol.Entity.RoleCardData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.RoleCardData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoleCardData(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.ScoreData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTableChips(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.ScoreData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoleChips(subBuilder.buildPartial());
              break;
            }
            case 48: {
              addCallTypes(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCallTypes(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              setCallSeat(input.readInt32());
              break;
            }
            case 66: {
              com.randioo.compare_collections_server.protocol.Entity.GameConfigData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.GameConfigData.newBuilder();
              if (hasGameConfigData()) {
                subBuilder.mergeFrom(getGameConfigData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameConfigData(subBuilder.buildPartial());
              break;
            }
            case 72: {
              setFinishRoundCount(input.readInt32());
              break;
            }
            case 82: {
              com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.newBuilder();
              if (hasResultGameOverData()) {
                subBuilder.mergeFrom(getResultGameOverData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResultGameOverData(subBuilder.buildPartial());
              break;
            }
            case 88: {
              addGiveUpSeat(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addGiveUpSeat(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              setCutCardsState(input.readInt32());
              break;
            }
            case 104: {
              setBasePool(input.readInt32());
              break;
            }
            case 112: {
              setApplyExitSeat(input.readInt32());
              break;
            }
            case 120: {
              addRejectSeat(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRejectSeat(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              addAgreeSeat(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addAgreeSeat(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 138: {
              com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoleRoundOverInfoData(subBuilder.buildPartial());
              break;
            }
            case 144: {
              setExitApplyId(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 mySeat = 1;
      public boolean hasMySeat() {
        return result.hasMySeat();
      }
      public int getMySeat() {
        return result.getMySeat();
      }
      public Builder setMySeat(int value) {
        result.hasMySeat = true;
        result.mySeat_ = value;
        return this;
      }
      public Builder clearMySeat() {
        result.hasMySeat = false;
        result.mySeat_ = 0;
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.GameRoleData gameRoleData = 2;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.GameRoleData> getGameRoleDataList() {
        return java.util.Collections.unmodifiableList(result.gameRoleData_);
      }
      public int getGameRoleDataCount() {
        return result.getGameRoleDataCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.GameRoleData getGameRoleData(int index) {
        return result.getGameRoleData(index);
      }
      public Builder setGameRoleData(int index, com.randioo.compare_collections_server.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.gameRoleData_.set(index, value);
        return this;
      }
      public Builder setGameRoleData(int index, com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder builderForValue) {
        result.gameRoleData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addGameRoleData(com.randioo.compare_collections_server.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
        }
        result.gameRoleData_.add(value);
        return this;
      }
      public Builder addGameRoleData(com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder builderForValue) {
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
        }
        result.gameRoleData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllGameRoleData(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.GameRoleData> values) {
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
        }
        super.addAll(values, result.gameRoleData_);
        return this;
      }
      public Builder clearGameRoleData() {
        result.gameRoleData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.RoleCardData roleCardData = 3;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleCardData> getRoleCardDataList() {
        return java.util.Collections.unmodifiableList(result.roleCardData_);
      }
      public int getRoleCardDataCount() {
        return result.getRoleCardDataCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.RoleCardData getRoleCardData(int index) {
        return result.getRoleCardData(index);
      }
      public Builder setRoleCardData(int index, com.randioo.compare_collections_server.protocol.Entity.RoleCardData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.roleCardData_.set(index, value);
        return this;
      }
      public Builder setRoleCardData(int index, com.randioo.compare_collections_server.protocol.Entity.RoleCardData.Builder builderForValue) {
        result.roleCardData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRoleCardData(com.randioo.compare_collections_server.protocol.Entity.RoleCardData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.roleCardData_.isEmpty()) {
          result.roleCardData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleCardData>();
        }
        result.roleCardData_.add(value);
        return this;
      }
      public Builder addRoleCardData(com.randioo.compare_collections_server.protocol.Entity.RoleCardData.Builder builderForValue) {
        if (result.roleCardData_.isEmpty()) {
          result.roleCardData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleCardData>();
        }
        result.roleCardData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRoleCardData(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.RoleCardData> values) {
        if (result.roleCardData_.isEmpty()) {
          result.roleCardData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleCardData>();
        }
        super.addAll(values, result.roleCardData_);
        return this;
      }
      public Builder clearRoleCardData() {
        result.roleCardData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.ScoreData tableChips = 4;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> getTableChipsList() {
        return java.util.Collections.unmodifiableList(result.tableChips_);
      }
      public int getTableChipsCount() {
        return result.getTableChipsCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.ScoreData getTableChips(int index) {
        return result.getTableChips(index);
      }
      public Builder setTableChips(int index, com.randioo.compare_collections_server.protocol.Entity.ScoreData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.tableChips_.set(index, value);
        return this;
      }
      public Builder setTableChips(int index, com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder builderForValue) {
        result.tableChips_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTableChips(com.randioo.compare_collections_server.protocol.Entity.ScoreData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.tableChips_.isEmpty()) {
          result.tableChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        result.tableChips_.add(value);
        return this;
      }
      public Builder addTableChips(com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder builderForValue) {
        if (result.tableChips_.isEmpty()) {
          result.tableChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        result.tableChips_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTableChips(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.ScoreData> values) {
        if (result.tableChips_.isEmpty()) {
          result.tableChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        super.addAll(values, result.tableChips_);
        return this;
      }
      public Builder clearTableChips() {
        result.tableChips_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.ScoreData roleChips = 5;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> getRoleChipsList() {
        return java.util.Collections.unmodifiableList(result.roleChips_);
      }
      public int getRoleChipsCount() {
        return result.getRoleChipsCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.ScoreData getRoleChips(int index) {
        return result.getRoleChips(index);
      }
      public Builder setRoleChips(int index, com.randioo.compare_collections_server.protocol.Entity.ScoreData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.roleChips_.set(index, value);
        return this;
      }
      public Builder setRoleChips(int index, com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder builderForValue) {
        result.roleChips_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRoleChips(com.randioo.compare_collections_server.protocol.Entity.ScoreData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.roleChips_.isEmpty()) {
          result.roleChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        result.roleChips_.add(value);
        return this;
      }
      public Builder addRoleChips(com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder builderForValue) {
        if (result.roleChips_.isEmpty()) {
          result.roleChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        result.roleChips_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRoleChips(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.ScoreData> values) {
        if (result.roleChips_.isEmpty()) {
          result.roleChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        super.addAll(values, result.roleChips_);
        return this;
      }
      public Builder clearRoleChips() {
        result.roleChips_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 callTypes = 6;
      public java.util.List<java.lang.Integer> getCallTypesList() {
        return java.util.Collections.unmodifiableList(result.callTypes_);
      }
      public int getCallTypesCount() {
        return result.getCallTypesCount();
      }
      public int getCallTypes(int index) {
        return result.getCallTypes(index);
      }
      public Builder setCallTypes(int index, int value) {
        result.callTypes_.set(index, value);
        return this;
      }
      public Builder addCallTypes(int value) {
        if (result.callTypes_.isEmpty()) {
          result.callTypes_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.callTypes_.add(value);
        return this;
      }
      public Builder addAllCallTypes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.callTypes_.isEmpty()) {
          result.callTypes_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.callTypes_);
        return this;
      }
      public Builder clearCallTypes() {
        result.callTypes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 callSeat = 7;
      public boolean hasCallSeat() {
        return result.hasCallSeat();
      }
      public int getCallSeat() {
        return result.getCallSeat();
      }
      public Builder setCallSeat(int value) {
        result.hasCallSeat = true;
        result.callSeat_ = value;
        return this;
      }
      public Builder clearCallSeat() {
        result.hasCallSeat = false;
        result.callSeat_ = 0;
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.GameConfigData gameConfigData = 8;
      public boolean hasGameConfigData() {
        return result.hasGameConfigData();
      }
      public com.randioo.compare_collections_server.protocol.Entity.GameConfigData getGameConfigData() {
        return result.getGameConfigData();
      }
      public Builder setGameConfigData(com.randioo.compare_collections_server.protocol.Entity.GameConfigData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameConfigData = true;
        result.gameConfigData_ = value;
        return this;
      }
      public Builder setGameConfigData(com.randioo.compare_collections_server.protocol.Entity.GameConfigData.Builder builderForValue) {
        result.hasGameConfigData = true;
        result.gameConfigData_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameConfigData(com.randioo.compare_collections_server.protocol.Entity.GameConfigData value) {
        if (result.hasGameConfigData() &&
            result.gameConfigData_ != com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDefaultInstance()) {
          result.gameConfigData_ =
            com.randioo.compare_collections_server.protocol.Entity.GameConfigData.newBuilder(result.gameConfigData_).mergeFrom(value).buildPartial();
        } else {
          result.gameConfigData_ = value;
        }
        result.hasGameConfigData = true;
        return this;
      }
      public Builder clearGameConfigData() {
        result.hasGameConfigData = false;
        result.gameConfigData_ = com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDefaultInstance();
        return this;
      }
      
      // optional int32 finishRoundCount = 9;
      public boolean hasFinishRoundCount() {
        return result.hasFinishRoundCount();
      }
      public int getFinishRoundCount() {
        return result.getFinishRoundCount();
      }
      public Builder setFinishRoundCount(int value) {
        result.hasFinishRoundCount = true;
        result.finishRoundCount_ = value;
        return this;
      }
      public Builder clearFinishRoundCount() {
        result.hasFinishRoundCount = false;
        result.finishRoundCount_ = 0;
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.ResultGameOverData ResultGameOverData = 10;
      public boolean hasResultGameOverData() {
        return result.hasResultGameOverData();
      }
      public com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData getResultGameOverData() {
        return result.getResultGameOverData();
      }
      public Builder setResultGameOverData(com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResultGameOverData = true;
        result.resultGameOverData_ = value;
        return this;
      }
      public Builder setResultGameOverData(com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.Builder builderForValue) {
        result.hasResultGameOverData = true;
        result.resultGameOverData_ = builderForValue.build();
        return this;
      }
      public Builder mergeResultGameOverData(com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData value) {
        if (result.hasResultGameOverData() &&
            result.resultGameOverData_ != com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.getDefaultInstance()) {
          result.resultGameOverData_ =
            com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.newBuilder(result.resultGameOverData_).mergeFrom(value).buildPartial();
        } else {
          result.resultGameOverData_ = value;
        }
        result.hasResultGameOverData = true;
        return this;
      }
      public Builder clearResultGameOverData() {
        result.hasResultGameOverData = false;
        result.resultGameOverData_ = com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.getDefaultInstance();
        return this;
      }
      
      // repeated int32 giveUpSeat = 11;
      public java.util.List<java.lang.Integer> getGiveUpSeatList() {
        return java.util.Collections.unmodifiableList(result.giveUpSeat_);
      }
      public int getGiveUpSeatCount() {
        return result.getGiveUpSeatCount();
      }
      public int getGiveUpSeat(int index) {
        return result.getGiveUpSeat(index);
      }
      public Builder setGiveUpSeat(int index, int value) {
        result.giveUpSeat_.set(index, value);
        return this;
      }
      public Builder addGiveUpSeat(int value) {
        if (result.giveUpSeat_.isEmpty()) {
          result.giveUpSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.giveUpSeat_.add(value);
        return this;
      }
      public Builder addAllGiveUpSeat(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.giveUpSeat_.isEmpty()) {
          result.giveUpSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.giveUpSeat_);
        return this;
      }
      public Builder clearGiveUpSeat() {
        result.giveUpSeat_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 cutCardsState = 12;
      public boolean hasCutCardsState() {
        return result.hasCutCardsState();
      }
      public int getCutCardsState() {
        return result.getCutCardsState();
      }
      public Builder setCutCardsState(int value) {
        result.hasCutCardsState = true;
        result.cutCardsState_ = value;
        return this;
      }
      public Builder clearCutCardsState() {
        result.hasCutCardsState = false;
        result.cutCardsState_ = 0;
        return this;
      }
      
      // optional int32 basePool = 13;
      public boolean hasBasePool() {
        return result.hasBasePool();
      }
      public int getBasePool() {
        return result.getBasePool();
      }
      public Builder setBasePool(int value) {
        result.hasBasePool = true;
        result.basePool_ = value;
        return this;
      }
      public Builder clearBasePool() {
        result.hasBasePool = false;
        result.basePool_ = 0;
        return this;
      }
      
      // optional int32 applyExitSeat = 14;
      public boolean hasApplyExitSeat() {
        return result.hasApplyExitSeat();
      }
      public int getApplyExitSeat() {
        return result.getApplyExitSeat();
      }
      public Builder setApplyExitSeat(int value) {
        result.hasApplyExitSeat = true;
        result.applyExitSeat_ = value;
        return this;
      }
      public Builder clearApplyExitSeat() {
        result.hasApplyExitSeat = false;
        result.applyExitSeat_ = 0;
        return this;
      }
      
      // repeated int32 rejectSeat = 15;
      public java.util.List<java.lang.Integer> getRejectSeatList() {
        return java.util.Collections.unmodifiableList(result.rejectSeat_);
      }
      public int getRejectSeatCount() {
        return result.getRejectSeatCount();
      }
      public int getRejectSeat(int index) {
        return result.getRejectSeat(index);
      }
      public Builder setRejectSeat(int index, int value) {
        result.rejectSeat_.set(index, value);
        return this;
      }
      public Builder addRejectSeat(int value) {
        if (result.rejectSeat_.isEmpty()) {
          result.rejectSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.rejectSeat_.add(value);
        return this;
      }
      public Builder addAllRejectSeat(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.rejectSeat_.isEmpty()) {
          result.rejectSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.rejectSeat_);
        return this;
      }
      public Builder clearRejectSeat() {
        result.rejectSeat_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 agreeSeat = 16;
      public java.util.List<java.lang.Integer> getAgreeSeatList() {
        return java.util.Collections.unmodifiableList(result.agreeSeat_);
      }
      public int getAgreeSeatCount() {
        return result.getAgreeSeatCount();
      }
      public int getAgreeSeat(int index) {
        return result.getAgreeSeat(index);
      }
      public Builder setAgreeSeat(int index, int value) {
        result.agreeSeat_.set(index, value);
        return this;
      }
      public Builder addAgreeSeat(int value) {
        if (result.agreeSeat_.isEmpty()) {
          result.agreeSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.agreeSeat_.add(value);
        return this;
      }
      public Builder addAllAgreeSeat(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.agreeSeat_.isEmpty()) {
          result.agreeSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.agreeSeat_);
        return this;
      }
      public Builder clearAgreeSeat() {
        result.agreeSeat_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.RoleRoundOverInfoData roleRoundOverInfoData = 17;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData> getRoleRoundOverInfoDataList() {
        return java.util.Collections.unmodifiableList(result.roleRoundOverInfoData_);
      }
      public int getRoleRoundOverInfoDataCount() {
        return result.getRoleRoundOverInfoDataCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData getRoleRoundOverInfoData(int index) {
        return result.getRoleRoundOverInfoData(index);
      }
      public Builder setRoleRoundOverInfoData(int index, com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.roleRoundOverInfoData_.set(index, value);
        return this;
      }
      public Builder setRoleRoundOverInfoData(int index, com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.Builder builderForValue) {
        result.roleRoundOverInfoData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRoleRoundOverInfoData(com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.roleRoundOverInfoData_.isEmpty()) {
          result.roleRoundOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData>();
        }
        result.roleRoundOverInfoData_.add(value);
        return this;
      }
      public Builder addRoleRoundOverInfoData(com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.Builder builderForValue) {
        if (result.roleRoundOverInfoData_.isEmpty()) {
          result.roleRoundOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData>();
        }
        result.roleRoundOverInfoData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRoleRoundOverInfoData(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData> values) {
        if (result.roleRoundOverInfoData_.isEmpty()) {
          result.roleRoundOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData>();
        }
        super.addAll(values, result.roleRoundOverInfoData_);
        return this;
      }
      public Builder clearRoleRoundOverInfoData() {
        result.roleRoundOverInfoData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 exitApplyId = 18;
      public boolean hasExitApplyId() {
        return result.hasExitApplyId();
      }
      public int getExitApplyId() {
        return result.getExitApplyId();
      }
      public Builder setExitApplyId(int value) {
        result.hasExitApplyId = true;
        result.exitApplyId_ = value;
        return this;
      }
      public Builder clearExitApplyId() {
        result.hasExitApplyId = false;
        result.exitApplyId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.CxReconnectedData)
    }
    
    static {
      defaultInstance = new CxReconnectedData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.CxReconnectedData)
  }
  
  public static final class ZjhReconnectedData extends
      com.google.protobuf.GeneratedMessage {
    // Use ZjhReconnectedData.newBuilder() to construct.
    private ZjhReconnectedData() {
      initFields();
    }
    private ZjhReconnectedData(boolean noInit) {}
    
    private static final ZjhReconnectedData defaultInstance;
    public static ZjhReconnectedData getDefaultInstance() {
      return defaultInstance;
    }
    
    public ZjhReconnectedData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_ZjhReconnectedData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_ZjhReconnectedData_fieldAccessorTable;
    }
    
    // optional int32 mySeat = 1;
    public static final int MYSEAT_FIELD_NUMBER = 1;
    private boolean hasMySeat;
    private int mySeat_ = 0;
    public boolean hasMySeat() { return hasMySeat; }
    public int getMySeat() { return mySeat_; }
    
    // repeated .com.randioo.compare_collections_server.protocol.GameRoleData gameRoleData = 2;
    public static final int GAMEROLEDATA_FIELD_NUMBER = 2;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.GameRoleData> gameRoleData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.GameRoleData> getGameRoleDataList() {
      return gameRoleData_;
    }
    public int getGameRoleDataCount() { return gameRoleData_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.GameRoleData getGameRoleData(int index) {
      return gameRoleData_.get(index);
    }
    
    // repeated .com.randioo.compare_collections_server.protocol.RoleCardData roleCardData = 3;
    public static final int ROLECARDDATA_FIELD_NUMBER = 3;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleCardData> roleCardData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleCardData> getRoleCardDataList() {
      return roleCardData_;
    }
    public int getRoleCardDataCount() { return roleCardData_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.RoleCardData getRoleCardData(int index) {
      return roleCardData_.get(index);
    }
    
    // repeated .com.randioo.compare_collections_server.protocol.ScoreData tableChips = 4;
    public static final int TABLECHIPS_FIELD_NUMBER = 4;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> tableChips_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> getTableChipsList() {
      return tableChips_;
    }
    public int getTableChipsCount() { return tableChips_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.ScoreData getTableChips(int index) {
      return tableChips_.get(index);
    }
    
    // repeated .com.randioo.compare_collections_server.protocol.ScoreData roleChips = 5;
    public static final int ROLECHIPS_FIELD_NUMBER = 5;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> roleChips_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> getRoleChipsList() {
      return roleChips_;
    }
    public int getRoleChipsCount() { return roleChips_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.ScoreData getRoleChips(int index) {
      return roleChips_.get(index);
    }
    
    // repeated int32 callTypes = 6;
    public static final int CALLTYPES_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> callTypes_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getCallTypesList() {
      return callTypes_;
    }
    public int getCallTypesCount() { return callTypes_.size(); }
    public int getCallTypes(int index) {
      return callTypes_.get(index);
    }
    
    // optional int32 callSeat = 7;
    public static final int CALLSEAT_FIELD_NUMBER = 7;
    private boolean hasCallSeat;
    private int callSeat_ = 0;
    public boolean hasCallSeat() { return hasCallSeat; }
    public int getCallSeat() { return callSeat_; }
    
    // optional .com.randioo.compare_collections_server.protocol.GameConfigData gameConfigData = 8;
    public static final int GAMECONFIGDATA_FIELD_NUMBER = 8;
    private boolean hasGameConfigData;
    private com.randioo.compare_collections_server.protocol.Entity.GameConfigData gameConfigData_;
    public boolean hasGameConfigData() { return hasGameConfigData; }
    public com.randioo.compare_collections_server.protocol.Entity.GameConfigData getGameConfigData() { return gameConfigData_; }
    
    // optional int32 finishRoundCount = 9;
    public static final int FINISHROUNDCOUNT_FIELD_NUMBER = 9;
    private boolean hasFinishRoundCount;
    private int finishRoundCount_ = 0;
    public boolean hasFinishRoundCount() { return hasFinishRoundCount; }
    public int getFinishRoundCount() { return finishRoundCount_; }
    
    // optional .com.randioo.compare_collections_server.protocol.ResultGameOverData ResultGameOverData = 10;
    public static final int RESULTGAMEOVERDATA_FIELD_NUMBER = 10;
    private boolean hasResultGameOverData;
    private com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData resultGameOverData_;
    public boolean hasResultGameOverData() { return hasResultGameOverData; }
    public com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData getResultGameOverData() { return resultGameOverData_; }
    
    // repeated int32 giveUpSeat = 11;
    public static final int GIVEUPSEAT_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> giveUpSeat_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getGiveUpSeatList() {
      return giveUpSeat_;
    }
    public int getGiveUpSeatCount() { return giveUpSeat_.size(); }
    public int getGiveUpSeat(int index) {
      return giveUpSeat_.get(index);
    }
    
    // repeated int32 ficeGiveUpSeat = 12;
    public static final int FICEGIVEUPSEAT_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> ficeGiveUpSeat_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getFiceGiveUpSeatList() {
      return ficeGiveUpSeat_;
    }
    public int getFiceGiveUpSeatCount() { return ficeGiveUpSeat_.size(); }
    public int getFiceGiveUpSeat(int index) {
      return ficeGiveUpSeat_.get(index);
    }
    
    // repeated int32 LookCardsSeat = 13;
    public static final int LOOKCARDSSEAT_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> lookCardsSeat_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getLookCardsSeatList() {
      return lookCardsSeat_;
    }
    public int getLookCardsSeatCount() { return lookCardsSeat_.size(); }
    public int getLookCardsSeat(int index) {
      return lookCardsSeat_.get(index);
    }
    
    // optional int32 stepState = 14;
    public static final int STEPSTATE_FIELD_NUMBER = 14;
    private boolean hasStepState;
    private int stepState_ = 0;
    public boolean hasStepState() { return hasStepState; }
    public int getStepState() { return stepState_; }
    
    // optional int32 basePool = 15;
    public static final int BASEPOOL_FIELD_NUMBER = 15;
    private boolean hasBasePool;
    private int basePool_ = 0;
    public boolean hasBasePool() { return hasBasePool; }
    public int getBasePool() { return basePool_; }
    
    // optional int32 applyExitSeat = 16;
    public static final int APPLYEXITSEAT_FIELD_NUMBER = 16;
    private boolean hasApplyExitSeat;
    private int applyExitSeat_ = 0;
    public boolean hasApplyExitSeat() { return hasApplyExitSeat; }
    public int getApplyExitSeat() { return applyExitSeat_; }
    
    // repeated int32 rejectSeat = 17;
    public static final int REJECTSEAT_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> rejectSeat_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getRejectSeatList() {
      return rejectSeat_;
    }
    public int getRejectSeatCount() { return rejectSeat_.size(); }
    public int getRejectSeat(int index) {
      return rejectSeat_.get(index);
    }
    
    // repeated int32 agreeSeat = 18;
    public static final int AGREESEAT_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Integer> agreeSeat_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getAgreeSeatList() {
      return agreeSeat_;
    }
    public int getAgreeSeatCount() { return agreeSeat_.size(); }
    public int getAgreeSeat(int index) {
      return agreeSeat_.get(index);
    }
    
    // repeated .com.randioo.compare_collections_server.protocol.RoleRoundOverInfoData roleRoundOverInfoData = 19;
    public static final int ROLEROUNDOVERINFODATA_FIELD_NUMBER = 19;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData> roleRoundOverInfoData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData> getRoleRoundOverInfoDataList() {
      return roleRoundOverInfoData_;
    }
    public int getRoleRoundOverInfoDataCount() { return roleRoundOverInfoData_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData getRoleRoundOverInfoData(int index) {
      return roleRoundOverInfoData_.get(index);
    }
    
    // optional int32 exitApplyId = 20;
    public static final int EXITAPPLYID_FIELD_NUMBER = 20;
    private boolean hasExitApplyId;
    private int exitApplyId_ = 0;
    public boolean hasExitApplyId() { return hasExitApplyId; }
    public int getExitApplyId() { return exitApplyId_; }
    
    private void initFields() {
      gameConfigData_ = com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDefaultInstance();
      resultGameOverData_ = com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasMySeat()) {
        output.writeInt32(1, getMySeat());
      }
      for (com.randioo.compare_collections_server.protocol.Entity.GameRoleData element : getGameRoleDataList()) {
        output.writeMessage(2, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.RoleCardData element : getRoleCardDataList()) {
        output.writeMessage(3, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.ScoreData element : getTableChipsList()) {
        output.writeMessage(4, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.ScoreData element : getRoleChipsList()) {
        output.writeMessage(5, element);
      }
      for (int element : getCallTypesList()) {
        output.writeInt32(6, element);
      }
      if (hasCallSeat()) {
        output.writeInt32(7, getCallSeat());
      }
      if (hasGameConfigData()) {
        output.writeMessage(8, getGameConfigData());
      }
      if (hasFinishRoundCount()) {
        output.writeInt32(9, getFinishRoundCount());
      }
      if (hasResultGameOverData()) {
        output.writeMessage(10, getResultGameOverData());
      }
      for (int element : getGiveUpSeatList()) {
        output.writeInt32(11, element);
      }
      for (int element : getFiceGiveUpSeatList()) {
        output.writeInt32(12, element);
      }
      for (int element : getLookCardsSeatList()) {
        output.writeInt32(13, element);
      }
      if (hasStepState()) {
        output.writeInt32(14, getStepState());
      }
      if (hasBasePool()) {
        output.writeInt32(15, getBasePool());
      }
      if (hasApplyExitSeat()) {
        output.writeInt32(16, getApplyExitSeat());
      }
      for (int element : getRejectSeatList()) {
        output.writeInt32(17, element);
      }
      for (int element : getAgreeSeatList()) {
        output.writeInt32(18, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData element : getRoleRoundOverInfoDataList()) {
        output.writeMessage(19, element);
      }
      if (hasExitApplyId()) {
        output.writeInt32(20, getExitApplyId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMySeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getMySeat());
      }
      for (com.randioo.compare_collections_server.protocol.Entity.GameRoleData element : getGameRoleDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.RoleCardData element : getRoleCardDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.ScoreData element : getTableChipsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.ScoreData element : getRoleChipsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      {
        int dataSize = 0;
        for (int element : getCallTypesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCallTypesList().size();
      }
      if (hasCallSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getCallSeat());
      }
      if (hasGameConfigData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getGameConfigData());
      }
      if (hasFinishRoundCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, getFinishRoundCount());
      }
      if (hasResultGameOverData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getResultGameOverData());
      }
      {
        int dataSize = 0;
        for (int element : getGiveUpSeatList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getGiveUpSeatList().size();
      }
      {
        int dataSize = 0;
        for (int element : getFiceGiveUpSeatList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getFiceGiveUpSeatList().size();
      }
      {
        int dataSize = 0;
        for (int element : getLookCardsSeatList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getLookCardsSeatList().size();
      }
      if (hasStepState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, getStepState());
      }
      if (hasBasePool()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, getBasePool());
      }
      if (hasApplyExitSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, getApplyExitSeat());
      }
      {
        int dataSize = 0;
        for (int element : getRejectSeatList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 2 * getRejectSeatList().size();
      }
      {
        int dataSize = 0;
        for (int element : getAgreeSeatList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 2 * getAgreeSeatList().size();
      }
      for (com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData element : getRoleRoundOverInfoDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, element);
      }
      if (hasExitApplyId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, getExitApplyId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.gameRoleData_ != java.util.Collections.EMPTY_LIST) {
          result.gameRoleData_ =
            java.util.Collections.unmodifiableList(result.gameRoleData_);
        }
        if (result.roleCardData_ != java.util.Collections.EMPTY_LIST) {
          result.roleCardData_ =
            java.util.Collections.unmodifiableList(result.roleCardData_);
        }
        if (result.tableChips_ != java.util.Collections.EMPTY_LIST) {
          result.tableChips_ =
            java.util.Collections.unmodifiableList(result.tableChips_);
        }
        if (result.roleChips_ != java.util.Collections.EMPTY_LIST) {
          result.roleChips_ =
            java.util.Collections.unmodifiableList(result.roleChips_);
        }
        if (result.callTypes_ != java.util.Collections.EMPTY_LIST) {
          result.callTypes_ =
            java.util.Collections.unmodifiableList(result.callTypes_);
        }
        if (result.giveUpSeat_ != java.util.Collections.EMPTY_LIST) {
          result.giveUpSeat_ =
            java.util.Collections.unmodifiableList(result.giveUpSeat_);
        }
        if (result.ficeGiveUpSeat_ != java.util.Collections.EMPTY_LIST) {
          result.ficeGiveUpSeat_ =
            java.util.Collections.unmodifiableList(result.ficeGiveUpSeat_);
        }
        if (result.lookCardsSeat_ != java.util.Collections.EMPTY_LIST) {
          result.lookCardsSeat_ =
            java.util.Collections.unmodifiableList(result.lookCardsSeat_);
        }
        if (result.rejectSeat_ != java.util.Collections.EMPTY_LIST) {
          result.rejectSeat_ =
            java.util.Collections.unmodifiableList(result.rejectSeat_);
        }
        if (result.agreeSeat_ != java.util.Collections.EMPTY_LIST) {
          result.agreeSeat_ =
            java.util.Collections.unmodifiableList(result.agreeSeat_);
        }
        if (result.roleRoundOverInfoData_ != java.util.Collections.EMPTY_LIST) {
          result.roleRoundOverInfoData_ =
            java.util.Collections.unmodifiableList(result.roleRoundOverInfoData_);
        }
        com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData.getDefaultInstance()) return this;
        if (other.hasMySeat()) {
          setMySeat(other.getMySeat());
        }
        if (!other.gameRoleData_.isEmpty()) {
          if (result.gameRoleData_.isEmpty()) {
            result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
          }
          result.gameRoleData_.addAll(other.gameRoleData_);
        }
        if (!other.roleCardData_.isEmpty()) {
          if (result.roleCardData_.isEmpty()) {
            result.roleCardData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleCardData>();
          }
          result.roleCardData_.addAll(other.roleCardData_);
        }
        if (!other.tableChips_.isEmpty()) {
          if (result.tableChips_.isEmpty()) {
            result.tableChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
          }
          result.tableChips_.addAll(other.tableChips_);
        }
        if (!other.roleChips_.isEmpty()) {
          if (result.roleChips_.isEmpty()) {
            result.roleChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
          }
          result.roleChips_.addAll(other.roleChips_);
        }
        if (!other.callTypes_.isEmpty()) {
          if (result.callTypes_.isEmpty()) {
            result.callTypes_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.callTypes_.addAll(other.callTypes_);
        }
        if (other.hasCallSeat()) {
          setCallSeat(other.getCallSeat());
        }
        if (other.hasGameConfigData()) {
          mergeGameConfigData(other.getGameConfigData());
        }
        if (other.hasFinishRoundCount()) {
          setFinishRoundCount(other.getFinishRoundCount());
        }
        if (other.hasResultGameOverData()) {
          mergeResultGameOverData(other.getResultGameOverData());
        }
        if (!other.giveUpSeat_.isEmpty()) {
          if (result.giveUpSeat_.isEmpty()) {
            result.giveUpSeat_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.giveUpSeat_.addAll(other.giveUpSeat_);
        }
        if (!other.ficeGiveUpSeat_.isEmpty()) {
          if (result.ficeGiveUpSeat_.isEmpty()) {
            result.ficeGiveUpSeat_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.ficeGiveUpSeat_.addAll(other.ficeGiveUpSeat_);
        }
        if (!other.lookCardsSeat_.isEmpty()) {
          if (result.lookCardsSeat_.isEmpty()) {
            result.lookCardsSeat_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.lookCardsSeat_.addAll(other.lookCardsSeat_);
        }
        if (other.hasStepState()) {
          setStepState(other.getStepState());
        }
        if (other.hasBasePool()) {
          setBasePool(other.getBasePool());
        }
        if (other.hasApplyExitSeat()) {
          setApplyExitSeat(other.getApplyExitSeat());
        }
        if (!other.rejectSeat_.isEmpty()) {
          if (result.rejectSeat_.isEmpty()) {
            result.rejectSeat_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.rejectSeat_.addAll(other.rejectSeat_);
        }
        if (!other.agreeSeat_.isEmpty()) {
          if (result.agreeSeat_.isEmpty()) {
            result.agreeSeat_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.agreeSeat_.addAll(other.agreeSeat_);
        }
        if (!other.roleRoundOverInfoData_.isEmpty()) {
          if (result.roleRoundOverInfoData_.isEmpty()) {
            result.roleRoundOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData>();
          }
          result.roleRoundOverInfoData_.addAll(other.roleRoundOverInfoData_);
        }
        if (other.hasExitApplyId()) {
          setExitApplyId(other.getExitApplyId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setMySeat(input.readInt32());
              break;
            }
            case 18: {
              com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.GameRoleData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGameRoleData(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.randioo.compare_collections_server.protocol.Entity.RoleCardData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.RoleCardData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoleCardData(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.ScoreData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTableChips(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.ScoreData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoleChips(subBuilder.buildPartial());
              break;
            }
            case 48: {
              addCallTypes(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCallTypes(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              setCallSeat(input.readInt32());
              break;
            }
            case 66: {
              com.randioo.compare_collections_server.protocol.Entity.GameConfigData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.GameConfigData.newBuilder();
              if (hasGameConfigData()) {
                subBuilder.mergeFrom(getGameConfigData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameConfigData(subBuilder.buildPartial());
              break;
            }
            case 72: {
              setFinishRoundCount(input.readInt32());
              break;
            }
            case 82: {
              com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.newBuilder();
              if (hasResultGameOverData()) {
                subBuilder.mergeFrom(getResultGameOverData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResultGameOverData(subBuilder.buildPartial());
              break;
            }
            case 88: {
              addGiveUpSeat(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addGiveUpSeat(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              addFiceGiveUpSeat(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFiceGiveUpSeat(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              addLookCardsSeat(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addLookCardsSeat(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              setStepState(input.readInt32());
              break;
            }
            case 120: {
              setBasePool(input.readInt32());
              break;
            }
            case 128: {
              setApplyExitSeat(input.readInt32());
              break;
            }
            case 136: {
              addRejectSeat(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRejectSeat(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 144: {
              addAgreeSeat(input.readInt32());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addAgreeSeat(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 154: {
              com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoleRoundOverInfoData(subBuilder.buildPartial());
              break;
            }
            case 160: {
              setExitApplyId(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 mySeat = 1;
      public boolean hasMySeat() {
        return result.hasMySeat();
      }
      public int getMySeat() {
        return result.getMySeat();
      }
      public Builder setMySeat(int value) {
        result.hasMySeat = true;
        result.mySeat_ = value;
        return this;
      }
      public Builder clearMySeat() {
        result.hasMySeat = false;
        result.mySeat_ = 0;
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.GameRoleData gameRoleData = 2;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.GameRoleData> getGameRoleDataList() {
        return java.util.Collections.unmodifiableList(result.gameRoleData_);
      }
      public int getGameRoleDataCount() {
        return result.getGameRoleDataCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.GameRoleData getGameRoleData(int index) {
        return result.getGameRoleData(index);
      }
      public Builder setGameRoleData(int index, com.randioo.compare_collections_server.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.gameRoleData_.set(index, value);
        return this;
      }
      public Builder setGameRoleData(int index, com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder builderForValue) {
        result.gameRoleData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addGameRoleData(com.randioo.compare_collections_server.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
        }
        result.gameRoleData_.add(value);
        return this;
      }
      public Builder addGameRoleData(com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder builderForValue) {
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
        }
        result.gameRoleData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllGameRoleData(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.GameRoleData> values) {
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
        }
        super.addAll(values, result.gameRoleData_);
        return this;
      }
      public Builder clearGameRoleData() {
        result.gameRoleData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.RoleCardData roleCardData = 3;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleCardData> getRoleCardDataList() {
        return java.util.Collections.unmodifiableList(result.roleCardData_);
      }
      public int getRoleCardDataCount() {
        return result.getRoleCardDataCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.RoleCardData getRoleCardData(int index) {
        return result.getRoleCardData(index);
      }
      public Builder setRoleCardData(int index, com.randioo.compare_collections_server.protocol.Entity.RoleCardData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.roleCardData_.set(index, value);
        return this;
      }
      public Builder setRoleCardData(int index, com.randioo.compare_collections_server.protocol.Entity.RoleCardData.Builder builderForValue) {
        result.roleCardData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRoleCardData(com.randioo.compare_collections_server.protocol.Entity.RoleCardData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.roleCardData_.isEmpty()) {
          result.roleCardData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleCardData>();
        }
        result.roleCardData_.add(value);
        return this;
      }
      public Builder addRoleCardData(com.randioo.compare_collections_server.protocol.Entity.RoleCardData.Builder builderForValue) {
        if (result.roleCardData_.isEmpty()) {
          result.roleCardData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleCardData>();
        }
        result.roleCardData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRoleCardData(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.RoleCardData> values) {
        if (result.roleCardData_.isEmpty()) {
          result.roleCardData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleCardData>();
        }
        super.addAll(values, result.roleCardData_);
        return this;
      }
      public Builder clearRoleCardData() {
        result.roleCardData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.ScoreData tableChips = 4;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> getTableChipsList() {
        return java.util.Collections.unmodifiableList(result.tableChips_);
      }
      public int getTableChipsCount() {
        return result.getTableChipsCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.ScoreData getTableChips(int index) {
        return result.getTableChips(index);
      }
      public Builder setTableChips(int index, com.randioo.compare_collections_server.protocol.Entity.ScoreData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.tableChips_.set(index, value);
        return this;
      }
      public Builder setTableChips(int index, com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder builderForValue) {
        result.tableChips_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTableChips(com.randioo.compare_collections_server.protocol.Entity.ScoreData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.tableChips_.isEmpty()) {
          result.tableChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        result.tableChips_.add(value);
        return this;
      }
      public Builder addTableChips(com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder builderForValue) {
        if (result.tableChips_.isEmpty()) {
          result.tableChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        result.tableChips_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTableChips(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.ScoreData> values) {
        if (result.tableChips_.isEmpty()) {
          result.tableChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        super.addAll(values, result.tableChips_);
        return this;
      }
      public Builder clearTableChips() {
        result.tableChips_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.ScoreData roleChips = 5;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> getRoleChipsList() {
        return java.util.Collections.unmodifiableList(result.roleChips_);
      }
      public int getRoleChipsCount() {
        return result.getRoleChipsCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.ScoreData getRoleChips(int index) {
        return result.getRoleChips(index);
      }
      public Builder setRoleChips(int index, com.randioo.compare_collections_server.protocol.Entity.ScoreData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.roleChips_.set(index, value);
        return this;
      }
      public Builder setRoleChips(int index, com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder builderForValue) {
        result.roleChips_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRoleChips(com.randioo.compare_collections_server.protocol.Entity.ScoreData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.roleChips_.isEmpty()) {
          result.roleChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        result.roleChips_.add(value);
        return this;
      }
      public Builder addRoleChips(com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder builderForValue) {
        if (result.roleChips_.isEmpty()) {
          result.roleChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        result.roleChips_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRoleChips(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.ScoreData> values) {
        if (result.roleChips_.isEmpty()) {
          result.roleChips_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        super.addAll(values, result.roleChips_);
        return this;
      }
      public Builder clearRoleChips() {
        result.roleChips_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 callTypes = 6;
      public java.util.List<java.lang.Integer> getCallTypesList() {
        return java.util.Collections.unmodifiableList(result.callTypes_);
      }
      public int getCallTypesCount() {
        return result.getCallTypesCount();
      }
      public int getCallTypes(int index) {
        return result.getCallTypes(index);
      }
      public Builder setCallTypes(int index, int value) {
        result.callTypes_.set(index, value);
        return this;
      }
      public Builder addCallTypes(int value) {
        if (result.callTypes_.isEmpty()) {
          result.callTypes_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.callTypes_.add(value);
        return this;
      }
      public Builder addAllCallTypes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.callTypes_.isEmpty()) {
          result.callTypes_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.callTypes_);
        return this;
      }
      public Builder clearCallTypes() {
        result.callTypes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 callSeat = 7;
      public boolean hasCallSeat() {
        return result.hasCallSeat();
      }
      public int getCallSeat() {
        return result.getCallSeat();
      }
      public Builder setCallSeat(int value) {
        result.hasCallSeat = true;
        result.callSeat_ = value;
        return this;
      }
      public Builder clearCallSeat() {
        result.hasCallSeat = false;
        result.callSeat_ = 0;
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.GameConfigData gameConfigData = 8;
      public boolean hasGameConfigData() {
        return result.hasGameConfigData();
      }
      public com.randioo.compare_collections_server.protocol.Entity.GameConfigData getGameConfigData() {
        return result.getGameConfigData();
      }
      public Builder setGameConfigData(com.randioo.compare_collections_server.protocol.Entity.GameConfigData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameConfigData = true;
        result.gameConfigData_ = value;
        return this;
      }
      public Builder setGameConfigData(com.randioo.compare_collections_server.protocol.Entity.GameConfigData.Builder builderForValue) {
        result.hasGameConfigData = true;
        result.gameConfigData_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameConfigData(com.randioo.compare_collections_server.protocol.Entity.GameConfigData value) {
        if (result.hasGameConfigData() &&
            result.gameConfigData_ != com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDefaultInstance()) {
          result.gameConfigData_ =
            com.randioo.compare_collections_server.protocol.Entity.GameConfigData.newBuilder(result.gameConfigData_).mergeFrom(value).buildPartial();
        } else {
          result.gameConfigData_ = value;
        }
        result.hasGameConfigData = true;
        return this;
      }
      public Builder clearGameConfigData() {
        result.hasGameConfigData = false;
        result.gameConfigData_ = com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDefaultInstance();
        return this;
      }
      
      // optional int32 finishRoundCount = 9;
      public boolean hasFinishRoundCount() {
        return result.hasFinishRoundCount();
      }
      public int getFinishRoundCount() {
        return result.getFinishRoundCount();
      }
      public Builder setFinishRoundCount(int value) {
        result.hasFinishRoundCount = true;
        result.finishRoundCount_ = value;
        return this;
      }
      public Builder clearFinishRoundCount() {
        result.hasFinishRoundCount = false;
        result.finishRoundCount_ = 0;
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.ResultGameOverData ResultGameOverData = 10;
      public boolean hasResultGameOverData() {
        return result.hasResultGameOverData();
      }
      public com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData getResultGameOverData() {
        return result.getResultGameOverData();
      }
      public Builder setResultGameOverData(com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResultGameOverData = true;
        result.resultGameOverData_ = value;
        return this;
      }
      public Builder setResultGameOverData(com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.Builder builderForValue) {
        result.hasResultGameOverData = true;
        result.resultGameOverData_ = builderForValue.build();
        return this;
      }
      public Builder mergeResultGameOverData(com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData value) {
        if (result.hasResultGameOverData() &&
            result.resultGameOverData_ != com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.getDefaultInstance()) {
          result.resultGameOverData_ =
            com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.newBuilder(result.resultGameOverData_).mergeFrom(value).buildPartial();
        } else {
          result.resultGameOverData_ = value;
        }
        result.hasResultGameOverData = true;
        return this;
      }
      public Builder clearResultGameOverData() {
        result.hasResultGameOverData = false;
        result.resultGameOverData_ = com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.getDefaultInstance();
        return this;
      }
      
      // repeated int32 giveUpSeat = 11;
      public java.util.List<java.lang.Integer> getGiveUpSeatList() {
        return java.util.Collections.unmodifiableList(result.giveUpSeat_);
      }
      public int getGiveUpSeatCount() {
        return result.getGiveUpSeatCount();
      }
      public int getGiveUpSeat(int index) {
        return result.getGiveUpSeat(index);
      }
      public Builder setGiveUpSeat(int index, int value) {
        result.giveUpSeat_.set(index, value);
        return this;
      }
      public Builder addGiveUpSeat(int value) {
        if (result.giveUpSeat_.isEmpty()) {
          result.giveUpSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.giveUpSeat_.add(value);
        return this;
      }
      public Builder addAllGiveUpSeat(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.giveUpSeat_.isEmpty()) {
          result.giveUpSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.giveUpSeat_);
        return this;
      }
      public Builder clearGiveUpSeat() {
        result.giveUpSeat_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 ficeGiveUpSeat = 12;
      public java.util.List<java.lang.Integer> getFiceGiveUpSeatList() {
        return java.util.Collections.unmodifiableList(result.ficeGiveUpSeat_);
      }
      public int getFiceGiveUpSeatCount() {
        return result.getFiceGiveUpSeatCount();
      }
      public int getFiceGiveUpSeat(int index) {
        return result.getFiceGiveUpSeat(index);
      }
      public Builder setFiceGiveUpSeat(int index, int value) {
        result.ficeGiveUpSeat_.set(index, value);
        return this;
      }
      public Builder addFiceGiveUpSeat(int value) {
        if (result.ficeGiveUpSeat_.isEmpty()) {
          result.ficeGiveUpSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.ficeGiveUpSeat_.add(value);
        return this;
      }
      public Builder addAllFiceGiveUpSeat(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.ficeGiveUpSeat_.isEmpty()) {
          result.ficeGiveUpSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.ficeGiveUpSeat_);
        return this;
      }
      public Builder clearFiceGiveUpSeat() {
        result.ficeGiveUpSeat_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 LookCardsSeat = 13;
      public java.util.List<java.lang.Integer> getLookCardsSeatList() {
        return java.util.Collections.unmodifiableList(result.lookCardsSeat_);
      }
      public int getLookCardsSeatCount() {
        return result.getLookCardsSeatCount();
      }
      public int getLookCardsSeat(int index) {
        return result.getLookCardsSeat(index);
      }
      public Builder setLookCardsSeat(int index, int value) {
        result.lookCardsSeat_.set(index, value);
        return this;
      }
      public Builder addLookCardsSeat(int value) {
        if (result.lookCardsSeat_.isEmpty()) {
          result.lookCardsSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.lookCardsSeat_.add(value);
        return this;
      }
      public Builder addAllLookCardsSeat(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.lookCardsSeat_.isEmpty()) {
          result.lookCardsSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.lookCardsSeat_);
        return this;
      }
      public Builder clearLookCardsSeat() {
        result.lookCardsSeat_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 stepState = 14;
      public boolean hasStepState() {
        return result.hasStepState();
      }
      public int getStepState() {
        return result.getStepState();
      }
      public Builder setStepState(int value) {
        result.hasStepState = true;
        result.stepState_ = value;
        return this;
      }
      public Builder clearStepState() {
        result.hasStepState = false;
        result.stepState_ = 0;
        return this;
      }
      
      // optional int32 basePool = 15;
      public boolean hasBasePool() {
        return result.hasBasePool();
      }
      public int getBasePool() {
        return result.getBasePool();
      }
      public Builder setBasePool(int value) {
        result.hasBasePool = true;
        result.basePool_ = value;
        return this;
      }
      public Builder clearBasePool() {
        result.hasBasePool = false;
        result.basePool_ = 0;
        return this;
      }
      
      // optional int32 applyExitSeat = 16;
      public boolean hasApplyExitSeat() {
        return result.hasApplyExitSeat();
      }
      public int getApplyExitSeat() {
        return result.getApplyExitSeat();
      }
      public Builder setApplyExitSeat(int value) {
        result.hasApplyExitSeat = true;
        result.applyExitSeat_ = value;
        return this;
      }
      public Builder clearApplyExitSeat() {
        result.hasApplyExitSeat = false;
        result.applyExitSeat_ = 0;
        return this;
      }
      
      // repeated int32 rejectSeat = 17;
      public java.util.List<java.lang.Integer> getRejectSeatList() {
        return java.util.Collections.unmodifiableList(result.rejectSeat_);
      }
      public int getRejectSeatCount() {
        return result.getRejectSeatCount();
      }
      public int getRejectSeat(int index) {
        return result.getRejectSeat(index);
      }
      public Builder setRejectSeat(int index, int value) {
        result.rejectSeat_.set(index, value);
        return this;
      }
      public Builder addRejectSeat(int value) {
        if (result.rejectSeat_.isEmpty()) {
          result.rejectSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.rejectSeat_.add(value);
        return this;
      }
      public Builder addAllRejectSeat(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.rejectSeat_.isEmpty()) {
          result.rejectSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.rejectSeat_);
        return this;
      }
      public Builder clearRejectSeat() {
        result.rejectSeat_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 agreeSeat = 18;
      public java.util.List<java.lang.Integer> getAgreeSeatList() {
        return java.util.Collections.unmodifiableList(result.agreeSeat_);
      }
      public int getAgreeSeatCount() {
        return result.getAgreeSeatCount();
      }
      public int getAgreeSeat(int index) {
        return result.getAgreeSeat(index);
      }
      public Builder setAgreeSeat(int index, int value) {
        result.agreeSeat_.set(index, value);
        return this;
      }
      public Builder addAgreeSeat(int value) {
        if (result.agreeSeat_.isEmpty()) {
          result.agreeSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.agreeSeat_.add(value);
        return this;
      }
      public Builder addAllAgreeSeat(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.agreeSeat_.isEmpty()) {
          result.agreeSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.agreeSeat_);
        return this;
      }
      public Builder clearAgreeSeat() {
        result.agreeSeat_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.RoleRoundOverInfoData roleRoundOverInfoData = 19;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData> getRoleRoundOverInfoDataList() {
        return java.util.Collections.unmodifiableList(result.roleRoundOverInfoData_);
      }
      public int getRoleRoundOverInfoDataCount() {
        return result.getRoleRoundOverInfoDataCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData getRoleRoundOverInfoData(int index) {
        return result.getRoleRoundOverInfoData(index);
      }
      public Builder setRoleRoundOverInfoData(int index, com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.roleRoundOverInfoData_.set(index, value);
        return this;
      }
      public Builder setRoleRoundOverInfoData(int index, com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.Builder builderForValue) {
        result.roleRoundOverInfoData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRoleRoundOverInfoData(com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.roleRoundOverInfoData_.isEmpty()) {
          result.roleRoundOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData>();
        }
        result.roleRoundOverInfoData_.add(value);
        return this;
      }
      public Builder addRoleRoundOverInfoData(com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.Builder builderForValue) {
        if (result.roleRoundOverInfoData_.isEmpty()) {
          result.roleRoundOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData>();
        }
        result.roleRoundOverInfoData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRoleRoundOverInfoData(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData> values) {
        if (result.roleRoundOverInfoData_.isEmpty()) {
          result.roleRoundOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData>();
        }
        super.addAll(values, result.roleRoundOverInfoData_);
        return this;
      }
      public Builder clearRoleRoundOverInfoData() {
        result.roleRoundOverInfoData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 exitApplyId = 20;
      public boolean hasExitApplyId() {
        return result.hasExitApplyId();
      }
      public int getExitApplyId() {
        return result.getExitApplyId();
      }
      public Builder setExitApplyId(int value) {
        result.hasExitApplyId = true;
        result.exitApplyId_ = value;
        return this;
      }
      public Builder clearExitApplyId() {
        result.hasExitApplyId = false;
        result.exitApplyId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.ZjhReconnectedData)
    }
    
    static {
      defaultInstance = new ZjhReconnectedData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.ZjhReconnectedData)
  }
  
  public static final class SdbReconnectedData extends
      com.google.protobuf.GeneratedMessage {
    // Use SdbReconnectedData.newBuilder() to construct.
    private SdbReconnectedData() {
      initFields();
    }
    private SdbReconnectedData(boolean noInit) {}
    
    private static final SdbReconnectedData defaultInstance;
    public static SdbReconnectedData getDefaultInstance() {
      return defaultInstance;
    }
    
    public SdbReconnectedData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_SdbReconnectedData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.compare_collections_server.protocol.Entity.internal_static_com_randioo_compare_collections_server_protocol_SdbReconnectedData_fieldAccessorTable;
    }
    
    // optional int32 mySeat = 1;
    public static final int MYSEAT_FIELD_NUMBER = 1;
    private boolean hasMySeat;
    private int mySeat_ = 0;
    public boolean hasMySeat() { return hasMySeat; }
    public int getMySeat() { return mySeat_; }
    
    // repeated .com.randioo.compare_collections_server.protocol.GameRoleData gameRoleData = 2;
    public static final int GAMEROLEDATA_FIELD_NUMBER = 2;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.GameRoleData> gameRoleData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.GameRoleData> getGameRoleDataList() {
      return gameRoleData_;
    }
    public int getGameRoleDataCount() { return gameRoleData_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.GameRoleData getGameRoleData(int index) {
      return gameRoleData_.get(index);
    }
    
    // repeated .com.randioo.compare_collections_server.protocol.RoleCardData roleCardData = 3;
    public static final int ROLECARDDATA_FIELD_NUMBER = 3;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleCardData> roleCardData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleCardData> getRoleCardDataList() {
      return roleCardData_;
    }
    public int getRoleCardDataCount() { return roleCardData_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.RoleCardData getRoleCardData(int index) {
      return roleCardData_.get(index);
    }
    
    // repeated .com.randioo.compare_collections_server.protocol.ScoreData scoreData = 4;
    public static final int SCOREDATA_FIELD_NUMBER = 4;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> scoreData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> getScoreDataList() {
      return scoreData_;
    }
    public int getScoreDataCount() { return scoreData_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.ScoreData getScoreData(int index) {
      return scoreData_.get(index);
    }
    
    // optional int32 currentSeat = 5;
    public static final int CURRENTSEAT_FIELD_NUMBER = 5;
    private boolean hasCurrentSeat;
    private int currentSeat_ = 0;
    public boolean hasCurrentSeat() { return hasCurrentSeat; }
    public int getCurrentSeat() { return currentSeat_; }
    
    // optional .com.randioo.compare_collections_server.protocol.ResultGameOverData ResultGameOverData = 6;
    public static final int RESULTGAMEOVERDATA_FIELD_NUMBER = 6;
    private boolean hasResultGameOverData;
    private com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData resultGameOverData_;
    public boolean hasResultGameOverData() { return hasResultGameOverData; }
    public com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData getResultGameOverData() { return resultGameOverData_; }
    
    // optional int32 finishRoundCount = 7;
    public static final int FINISHROUNDCOUNT_FIELD_NUMBER = 7;
    private boolean hasFinishRoundCount;
    private int finishRoundCount_ = 0;
    public boolean hasFinishRoundCount() { return hasFinishRoundCount; }
    public int getFinishRoundCount() { return finishRoundCount_; }
    
    // optional .com.randioo.compare_collections_server.protocol.GameConfigData gameConfigData = 8;
    public static final int GAMECONFIGDATA_FIELD_NUMBER = 8;
    private boolean hasGameConfigData;
    private com.randioo.compare_collections_server.protocol.Entity.GameConfigData gameConfigData_;
    public boolean hasGameConfigData() { return hasGameConfigData; }
    public com.randioo.compare_collections_server.protocol.Entity.GameConfigData getGameConfigData() { return gameConfigData_; }
    
    // optional int32 callType = 9;
    public static final int CALLTYPE_FIELD_NUMBER = 9;
    private boolean hasCallType;
    private int callType_ = 0;
    public boolean hasCallType() { return hasCallType; }
    public int getCallType() { return callType_; }
    
    // optional int32 zhuangSeat = 10;
    public static final int ZHUANGSEAT_FIELD_NUMBER = 10;
    private boolean hasZhuangSeat;
    private int zhuangSeat_ = 0;
    public boolean hasZhuangSeat() { return hasZhuangSeat; }
    public int getZhuangSeat() { return zhuangSeat_; }
    
    // optional int32 applyExitSeat = 16;
    public static final int APPLYEXITSEAT_FIELD_NUMBER = 16;
    private boolean hasApplyExitSeat;
    private int applyExitSeat_ = 0;
    public boolean hasApplyExitSeat() { return hasApplyExitSeat; }
    public int getApplyExitSeat() { return applyExitSeat_; }
    
    // repeated int32 rejectSeat = 17;
    public static final int REJECTSEAT_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> rejectSeat_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getRejectSeatList() {
      return rejectSeat_;
    }
    public int getRejectSeatCount() { return rejectSeat_.size(); }
    public int getRejectSeat(int index) {
      return rejectSeat_.get(index);
    }
    
    // repeated int32 agreeSeat = 18;
    public static final int AGREESEAT_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Integer> agreeSeat_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getAgreeSeatList() {
      return agreeSeat_;
    }
    public int getAgreeSeatCount() { return agreeSeat_.size(); }
    public int getAgreeSeat(int index) {
      return agreeSeat_.get(index);
    }
    
    // repeated .com.randioo.compare_collections_server.protocol.RoleRoundOverInfoData roleRoundOverInfoData = 19;
    public static final int ROLEROUNDOVERINFODATA_FIELD_NUMBER = 19;
    private java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData> roleRoundOverInfoData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData> getRoleRoundOverInfoDataList() {
      return roleRoundOverInfoData_;
    }
    public int getRoleRoundOverInfoDataCount() { return roleRoundOverInfoData_.size(); }
    public com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData getRoleRoundOverInfoData(int index) {
      return roleRoundOverInfoData_.get(index);
    }
    
    // optional int32 exitApplyId = 20;
    public static final int EXITAPPLYID_FIELD_NUMBER = 20;
    private boolean hasExitApplyId;
    private int exitApplyId_ = 0;
    public boolean hasExitApplyId() { return hasExitApplyId; }
    public int getExitApplyId() { return exitApplyId_; }
    
    private void initFields() {
      resultGameOverData_ = com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.getDefaultInstance();
      gameConfigData_ = com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasMySeat()) {
        output.writeInt32(1, getMySeat());
      }
      for (com.randioo.compare_collections_server.protocol.Entity.GameRoleData element : getGameRoleDataList()) {
        output.writeMessage(2, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.RoleCardData element : getRoleCardDataList()) {
        output.writeMessage(3, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.ScoreData element : getScoreDataList()) {
        output.writeMessage(4, element);
      }
      if (hasCurrentSeat()) {
        output.writeInt32(5, getCurrentSeat());
      }
      if (hasResultGameOverData()) {
        output.writeMessage(6, getResultGameOverData());
      }
      if (hasFinishRoundCount()) {
        output.writeInt32(7, getFinishRoundCount());
      }
      if (hasGameConfigData()) {
        output.writeMessage(8, getGameConfigData());
      }
      if (hasCallType()) {
        output.writeInt32(9, getCallType());
      }
      if (hasZhuangSeat()) {
        output.writeInt32(10, getZhuangSeat());
      }
      if (hasApplyExitSeat()) {
        output.writeInt32(16, getApplyExitSeat());
      }
      for (int element : getRejectSeatList()) {
        output.writeInt32(17, element);
      }
      for (int element : getAgreeSeatList()) {
        output.writeInt32(18, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData element : getRoleRoundOverInfoDataList()) {
        output.writeMessage(19, element);
      }
      if (hasExitApplyId()) {
        output.writeInt32(20, getExitApplyId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMySeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getMySeat());
      }
      for (com.randioo.compare_collections_server.protocol.Entity.GameRoleData element : getGameRoleDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.RoleCardData element : getRoleCardDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (com.randioo.compare_collections_server.protocol.Entity.ScoreData element : getScoreDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      if (hasCurrentSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getCurrentSeat());
      }
      if (hasResultGameOverData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getResultGameOverData());
      }
      if (hasFinishRoundCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getFinishRoundCount());
      }
      if (hasGameConfigData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getGameConfigData());
      }
      if (hasCallType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, getCallType());
      }
      if (hasZhuangSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, getZhuangSeat());
      }
      if (hasApplyExitSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, getApplyExitSeat());
      }
      {
        int dataSize = 0;
        for (int element : getRejectSeatList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 2 * getRejectSeatList().size();
      }
      {
        int dataSize = 0;
        for (int element : getAgreeSeatList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 2 * getAgreeSeatList().size();
      }
      for (com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData element : getRoleRoundOverInfoDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, element);
      }
      if (hasExitApplyId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, getExitApplyId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData result;
      
      // Construct using com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData();
        return builder;
      }
      
      protected com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData.getDescriptor();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData getDefaultInstanceForType() {
        return com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.gameRoleData_ != java.util.Collections.EMPTY_LIST) {
          result.gameRoleData_ =
            java.util.Collections.unmodifiableList(result.gameRoleData_);
        }
        if (result.roleCardData_ != java.util.Collections.EMPTY_LIST) {
          result.roleCardData_ =
            java.util.Collections.unmodifiableList(result.roleCardData_);
        }
        if (result.scoreData_ != java.util.Collections.EMPTY_LIST) {
          result.scoreData_ =
            java.util.Collections.unmodifiableList(result.scoreData_);
        }
        if (result.rejectSeat_ != java.util.Collections.EMPTY_LIST) {
          result.rejectSeat_ =
            java.util.Collections.unmodifiableList(result.rejectSeat_);
        }
        if (result.agreeSeat_ != java.util.Collections.EMPTY_LIST) {
          result.agreeSeat_ =
            java.util.Collections.unmodifiableList(result.agreeSeat_);
        }
        if (result.roleRoundOverInfoData_ != java.util.Collections.EMPTY_LIST) {
          result.roleRoundOverInfoData_ =
            java.util.Collections.unmodifiableList(result.roleRoundOverInfoData_);
        }
        com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData) {
          return mergeFrom((com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData other) {
        if (other == com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData.getDefaultInstance()) return this;
        if (other.hasMySeat()) {
          setMySeat(other.getMySeat());
        }
        if (!other.gameRoleData_.isEmpty()) {
          if (result.gameRoleData_.isEmpty()) {
            result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
          }
          result.gameRoleData_.addAll(other.gameRoleData_);
        }
        if (!other.roleCardData_.isEmpty()) {
          if (result.roleCardData_.isEmpty()) {
            result.roleCardData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleCardData>();
          }
          result.roleCardData_.addAll(other.roleCardData_);
        }
        if (!other.scoreData_.isEmpty()) {
          if (result.scoreData_.isEmpty()) {
            result.scoreData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
          }
          result.scoreData_.addAll(other.scoreData_);
        }
        if (other.hasCurrentSeat()) {
          setCurrentSeat(other.getCurrentSeat());
        }
        if (other.hasResultGameOverData()) {
          mergeResultGameOverData(other.getResultGameOverData());
        }
        if (other.hasFinishRoundCount()) {
          setFinishRoundCount(other.getFinishRoundCount());
        }
        if (other.hasGameConfigData()) {
          mergeGameConfigData(other.getGameConfigData());
        }
        if (other.hasCallType()) {
          setCallType(other.getCallType());
        }
        if (other.hasZhuangSeat()) {
          setZhuangSeat(other.getZhuangSeat());
        }
        if (other.hasApplyExitSeat()) {
          setApplyExitSeat(other.getApplyExitSeat());
        }
        if (!other.rejectSeat_.isEmpty()) {
          if (result.rejectSeat_.isEmpty()) {
            result.rejectSeat_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.rejectSeat_.addAll(other.rejectSeat_);
        }
        if (!other.agreeSeat_.isEmpty()) {
          if (result.agreeSeat_.isEmpty()) {
            result.agreeSeat_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.agreeSeat_.addAll(other.agreeSeat_);
        }
        if (!other.roleRoundOverInfoData_.isEmpty()) {
          if (result.roleRoundOverInfoData_.isEmpty()) {
            result.roleRoundOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData>();
          }
          result.roleRoundOverInfoData_.addAll(other.roleRoundOverInfoData_);
        }
        if (other.hasExitApplyId()) {
          setExitApplyId(other.getExitApplyId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setMySeat(input.readInt32());
              break;
            }
            case 18: {
              com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.GameRoleData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGameRoleData(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.randioo.compare_collections_server.protocol.Entity.RoleCardData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.RoleCardData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoleCardData(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.ScoreData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addScoreData(subBuilder.buildPartial());
              break;
            }
            case 40: {
              setCurrentSeat(input.readInt32());
              break;
            }
            case 50: {
              com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.newBuilder();
              if (hasResultGameOverData()) {
                subBuilder.mergeFrom(getResultGameOverData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResultGameOverData(subBuilder.buildPartial());
              break;
            }
            case 56: {
              setFinishRoundCount(input.readInt32());
              break;
            }
            case 66: {
              com.randioo.compare_collections_server.protocol.Entity.GameConfigData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.GameConfigData.newBuilder();
              if (hasGameConfigData()) {
                subBuilder.mergeFrom(getGameConfigData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameConfigData(subBuilder.buildPartial());
              break;
            }
            case 72: {
              setCallType(input.readInt32());
              break;
            }
            case 80: {
              setZhuangSeat(input.readInt32());
              break;
            }
            case 128: {
              setApplyExitSeat(input.readInt32());
              break;
            }
            case 136: {
              addRejectSeat(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRejectSeat(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 144: {
              addAgreeSeat(input.readInt32());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addAgreeSeat(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 154: {
              com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.Builder subBuilder = com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoleRoundOverInfoData(subBuilder.buildPartial());
              break;
            }
            case 160: {
              setExitApplyId(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 mySeat = 1;
      public boolean hasMySeat() {
        return result.hasMySeat();
      }
      public int getMySeat() {
        return result.getMySeat();
      }
      public Builder setMySeat(int value) {
        result.hasMySeat = true;
        result.mySeat_ = value;
        return this;
      }
      public Builder clearMySeat() {
        result.hasMySeat = false;
        result.mySeat_ = 0;
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.GameRoleData gameRoleData = 2;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.GameRoleData> getGameRoleDataList() {
        return java.util.Collections.unmodifiableList(result.gameRoleData_);
      }
      public int getGameRoleDataCount() {
        return result.getGameRoleDataCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.GameRoleData getGameRoleData(int index) {
        return result.getGameRoleData(index);
      }
      public Builder setGameRoleData(int index, com.randioo.compare_collections_server.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.gameRoleData_.set(index, value);
        return this;
      }
      public Builder setGameRoleData(int index, com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder builderForValue) {
        result.gameRoleData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addGameRoleData(com.randioo.compare_collections_server.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
        }
        result.gameRoleData_.add(value);
        return this;
      }
      public Builder addGameRoleData(com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder builderForValue) {
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
        }
        result.gameRoleData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllGameRoleData(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.GameRoleData> values) {
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.GameRoleData>();
        }
        super.addAll(values, result.gameRoleData_);
        return this;
      }
      public Builder clearGameRoleData() {
        result.gameRoleData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.RoleCardData roleCardData = 3;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleCardData> getRoleCardDataList() {
        return java.util.Collections.unmodifiableList(result.roleCardData_);
      }
      public int getRoleCardDataCount() {
        return result.getRoleCardDataCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.RoleCardData getRoleCardData(int index) {
        return result.getRoleCardData(index);
      }
      public Builder setRoleCardData(int index, com.randioo.compare_collections_server.protocol.Entity.RoleCardData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.roleCardData_.set(index, value);
        return this;
      }
      public Builder setRoleCardData(int index, com.randioo.compare_collections_server.protocol.Entity.RoleCardData.Builder builderForValue) {
        result.roleCardData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRoleCardData(com.randioo.compare_collections_server.protocol.Entity.RoleCardData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.roleCardData_.isEmpty()) {
          result.roleCardData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleCardData>();
        }
        result.roleCardData_.add(value);
        return this;
      }
      public Builder addRoleCardData(com.randioo.compare_collections_server.protocol.Entity.RoleCardData.Builder builderForValue) {
        if (result.roleCardData_.isEmpty()) {
          result.roleCardData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleCardData>();
        }
        result.roleCardData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRoleCardData(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.RoleCardData> values) {
        if (result.roleCardData_.isEmpty()) {
          result.roleCardData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleCardData>();
        }
        super.addAll(values, result.roleCardData_);
        return this;
      }
      public Builder clearRoleCardData() {
        result.roleCardData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.ScoreData scoreData = 4;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.ScoreData> getScoreDataList() {
        return java.util.Collections.unmodifiableList(result.scoreData_);
      }
      public int getScoreDataCount() {
        return result.getScoreDataCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.ScoreData getScoreData(int index) {
        return result.getScoreData(index);
      }
      public Builder setScoreData(int index, com.randioo.compare_collections_server.protocol.Entity.ScoreData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.scoreData_.set(index, value);
        return this;
      }
      public Builder setScoreData(int index, com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder builderForValue) {
        result.scoreData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addScoreData(com.randioo.compare_collections_server.protocol.Entity.ScoreData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.scoreData_.isEmpty()) {
          result.scoreData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        result.scoreData_.add(value);
        return this;
      }
      public Builder addScoreData(com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder builderForValue) {
        if (result.scoreData_.isEmpty()) {
          result.scoreData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        result.scoreData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllScoreData(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.ScoreData> values) {
        if (result.scoreData_.isEmpty()) {
          result.scoreData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.ScoreData>();
        }
        super.addAll(values, result.scoreData_);
        return this;
      }
      public Builder clearScoreData() {
        result.scoreData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 currentSeat = 5;
      public boolean hasCurrentSeat() {
        return result.hasCurrentSeat();
      }
      public int getCurrentSeat() {
        return result.getCurrentSeat();
      }
      public Builder setCurrentSeat(int value) {
        result.hasCurrentSeat = true;
        result.currentSeat_ = value;
        return this;
      }
      public Builder clearCurrentSeat() {
        result.hasCurrentSeat = false;
        result.currentSeat_ = 0;
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.ResultGameOverData ResultGameOverData = 6;
      public boolean hasResultGameOverData() {
        return result.hasResultGameOverData();
      }
      public com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData getResultGameOverData() {
        return result.getResultGameOverData();
      }
      public Builder setResultGameOverData(com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResultGameOverData = true;
        result.resultGameOverData_ = value;
        return this;
      }
      public Builder setResultGameOverData(com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.Builder builderForValue) {
        result.hasResultGameOverData = true;
        result.resultGameOverData_ = builderForValue.build();
        return this;
      }
      public Builder mergeResultGameOverData(com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData value) {
        if (result.hasResultGameOverData() &&
            result.resultGameOverData_ != com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.getDefaultInstance()) {
          result.resultGameOverData_ =
            com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.newBuilder(result.resultGameOverData_).mergeFrom(value).buildPartial();
        } else {
          result.resultGameOverData_ = value;
        }
        result.hasResultGameOverData = true;
        return this;
      }
      public Builder clearResultGameOverData() {
        result.hasResultGameOverData = false;
        result.resultGameOverData_ = com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.getDefaultInstance();
        return this;
      }
      
      // optional int32 finishRoundCount = 7;
      public boolean hasFinishRoundCount() {
        return result.hasFinishRoundCount();
      }
      public int getFinishRoundCount() {
        return result.getFinishRoundCount();
      }
      public Builder setFinishRoundCount(int value) {
        result.hasFinishRoundCount = true;
        result.finishRoundCount_ = value;
        return this;
      }
      public Builder clearFinishRoundCount() {
        result.hasFinishRoundCount = false;
        result.finishRoundCount_ = 0;
        return this;
      }
      
      // optional .com.randioo.compare_collections_server.protocol.GameConfigData gameConfigData = 8;
      public boolean hasGameConfigData() {
        return result.hasGameConfigData();
      }
      public com.randioo.compare_collections_server.protocol.Entity.GameConfigData getGameConfigData() {
        return result.getGameConfigData();
      }
      public Builder setGameConfigData(com.randioo.compare_collections_server.protocol.Entity.GameConfigData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameConfigData = true;
        result.gameConfigData_ = value;
        return this;
      }
      public Builder setGameConfigData(com.randioo.compare_collections_server.protocol.Entity.GameConfigData.Builder builderForValue) {
        result.hasGameConfigData = true;
        result.gameConfigData_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameConfigData(com.randioo.compare_collections_server.protocol.Entity.GameConfigData value) {
        if (result.hasGameConfigData() &&
            result.gameConfigData_ != com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDefaultInstance()) {
          result.gameConfigData_ =
            com.randioo.compare_collections_server.protocol.Entity.GameConfigData.newBuilder(result.gameConfigData_).mergeFrom(value).buildPartial();
        } else {
          result.gameConfigData_ = value;
        }
        result.hasGameConfigData = true;
        return this;
      }
      public Builder clearGameConfigData() {
        result.hasGameConfigData = false;
        result.gameConfigData_ = com.randioo.compare_collections_server.protocol.Entity.GameConfigData.getDefaultInstance();
        return this;
      }
      
      // optional int32 callType = 9;
      public boolean hasCallType() {
        return result.hasCallType();
      }
      public int getCallType() {
        return result.getCallType();
      }
      public Builder setCallType(int value) {
        result.hasCallType = true;
        result.callType_ = value;
        return this;
      }
      public Builder clearCallType() {
        result.hasCallType = false;
        result.callType_ = 0;
        return this;
      }
      
      // optional int32 zhuangSeat = 10;
      public boolean hasZhuangSeat() {
        return result.hasZhuangSeat();
      }
      public int getZhuangSeat() {
        return result.getZhuangSeat();
      }
      public Builder setZhuangSeat(int value) {
        result.hasZhuangSeat = true;
        result.zhuangSeat_ = value;
        return this;
      }
      public Builder clearZhuangSeat() {
        result.hasZhuangSeat = false;
        result.zhuangSeat_ = 0;
        return this;
      }
      
      // optional int32 applyExitSeat = 16;
      public boolean hasApplyExitSeat() {
        return result.hasApplyExitSeat();
      }
      public int getApplyExitSeat() {
        return result.getApplyExitSeat();
      }
      public Builder setApplyExitSeat(int value) {
        result.hasApplyExitSeat = true;
        result.applyExitSeat_ = value;
        return this;
      }
      public Builder clearApplyExitSeat() {
        result.hasApplyExitSeat = false;
        result.applyExitSeat_ = 0;
        return this;
      }
      
      // repeated int32 rejectSeat = 17;
      public java.util.List<java.lang.Integer> getRejectSeatList() {
        return java.util.Collections.unmodifiableList(result.rejectSeat_);
      }
      public int getRejectSeatCount() {
        return result.getRejectSeatCount();
      }
      public int getRejectSeat(int index) {
        return result.getRejectSeat(index);
      }
      public Builder setRejectSeat(int index, int value) {
        result.rejectSeat_.set(index, value);
        return this;
      }
      public Builder addRejectSeat(int value) {
        if (result.rejectSeat_.isEmpty()) {
          result.rejectSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.rejectSeat_.add(value);
        return this;
      }
      public Builder addAllRejectSeat(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.rejectSeat_.isEmpty()) {
          result.rejectSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.rejectSeat_);
        return this;
      }
      public Builder clearRejectSeat() {
        result.rejectSeat_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 agreeSeat = 18;
      public java.util.List<java.lang.Integer> getAgreeSeatList() {
        return java.util.Collections.unmodifiableList(result.agreeSeat_);
      }
      public int getAgreeSeatCount() {
        return result.getAgreeSeatCount();
      }
      public int getAgreeSeat(int index) {
        return result.getAgreeSeat(index);
      }
      public Builder setAgreeSeat(int index, int value) {
        result.agreeSeat_.set(index, value);
        return this;
      }
      public Builder addAgreeSeat(int value) {
        if (result.agreeSeat_.isEmpty()) {
          result.agreeSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.agreeSeat_.add(value);
        return this;
      }
      public Builder addAllAgreeSeat(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.agreeSeat_.isEmpty()) {
          result.agreeSeat_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.agreeSeat_);
        return this;
      }
      public Builder clearAgreeSeat() {
        result.agreeSeat_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.randioo.compare_collections_server.protocol.RoleRoundOverInfoData roleRoundOverInfoData = 19;
      public java.util.List<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData> getRoleRoundOverInfoDataList() {
        return java.util.Collections.unmodifiableList(result.roleRoundOverInfoData_);
      }
      public int getRoleRoundOverInfoDataCount() {
        return result.getRoleRoundOverInfoDataCount();
      }
      public com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData getRoleRoundOverInfoData(int index) {
        return result.getRoleRoundOverInfoData(index);
      }
      public Builder setRoleRoundOverInfoData(int index, com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.roleRoundOverInfoData_.set(index, value);
        return this;
      }
      public Builder setRoleRoundOverInfoData(int index, com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.Builder builderForValue) {
        result.roleRoundOverInfoData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRoleRoundOverInfoData(com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.roleRoundOverInfoData_.isEmpty()) {
          result.roleRoundOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData>();
        }
        result.roleRoundOverInfoData_.add(value);
        return this;
      }
      public Builder addRoleRoundOverInfoData(com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.Builder builderForValue) {
        if (result.roleRoundOverInfoData_.isEmpty()) {
          result.roleRoundOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData>();
        }
        result.roleRoundOverInfoData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRoleRoundOverInfoData(
          java.lang.Iterable<? extends com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData> values) {
        if (result.roleRoundOverInfoData_.isEmpty()) {
          result.roleRoundOverInfoData_ = new java.util.ArrayList<com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData>();
        }
        super.addAll(values, result.roleRoundOverInfoData_);
        return this;
      }
      public Builder clearRoleRoundOverInfoData() {
        result.roleRoundOverInfoData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 exitApplyId = 20;
      public boolean hasExitApplyId() {
        return result.hasExitApplyId();
      }
      public int getExitApplyId() {
        return result.getExitApplyId();
      }
      public Builder setExitApplyId(int value) {
        result.hasExitApplyId = true;
        result.exitApplyId_ = value;
        return this;
      }
      public Builder clearExitApplyId() {
        result.hasExitApplyId = false;
        result.exitApplyId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.compare_collections_server.protocol.SdbReconnectedData)
    }
    
    static {
      defaultInstance = new SdbReconnectedData(true);
      com.randioo.compare_collections_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.compare_collections_server.protocol.SdbReconnectedData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_RoleData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_RoleData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_GameConfigData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_GameConfigData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_PaiNum_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_PaiNum_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_ScoreData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_ScoreData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_Record_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_Record_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_GameRoleData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_GameRoleData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_RoleRoundOverInfoData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_RoleRoundOverInfoData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_CardData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_CardData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_RoleCardData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_RoleCardData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_GameData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_GameData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_AudienceData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_AudienceData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_RoundVideoData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_RoundVideoData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_GameVideoData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_GameVideoData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_ClientCard_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_ClientCard_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_EnvVarsData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_EnvVarsData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_RoleGameOverInfoData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_RoleGameOverInfoData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_ResultGameOverData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_ResultGameOverData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_CxReconnectedData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_CxReconnectedData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_ZjhReconnectedData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_ZjhReconnectedData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_compare_collections_server_protocol_SdbReconnectedData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_compare_collections_server_protocol_SdbReconnectedData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Entity.proto\022/com.randioo.compare_coll" +
      "ections_server.protocol\"\307\001\n\010RoleData\022\016\n\006" +
      "roleId\030\001 \001(\005\022\016\n\006roomId\030\002 \001(\t\022\r\n\005point\030\003 " +
      "\001(\005\022\013\n\003sex\030\004 \001(\005\022\022\n\nserverTime\030\005 \001(\005\022\014\n\004" +
      "name\030\006 \001(\t\022\024\n\014headImageUrl\030\007 \001(\t\022\022\n\ngame" +
      "OverSC\030\010 \001(\014\022\023\n\013randiooCoin\030\t \001(\005\022\014\n\004gol" +
      "d\030\n \001(\005\022\020\n\010roomCard\030\013 \001(\005\"\260\002\n\016GameConfig" +
      "Data\022\022\n\nroundCount\030\001 \001(\005\022\020\n\010maxCount\030\002 \001" +
      "(\005\022\020\n\010roomCard\030\003 \001(\005\022\016\n\006roomId\030\004 \001(\t\022\022\n\n" +
      "zhuangType\030\005 \001(\005\022\024\n\014outLookCount\030\006 \001(\005\022\020",
      "\n\010topCount\030\007 \001(\005\022\022\n\nfightRound\030\010 \001(\005\022\013\n\003" +
      "bet\030\t \001(\005\022\016\n\006betMax\030\n \001(\005\022\020\n\010minCount\030\013 " +
      "\001(\005\022\020\n\010cardsPay\030\014 \001(\005\022\017\n\007payMode\030\r \001(\005\022\020" +
      "\n\010gameType\030\016 \001(\005\022\016\n\006goldId\030\017 \001(\005\022\022\n\nbatt" +
      "leList\030\020 \003(\005\"#\n\006PaiNum\022\014\n\004seat\030\001 \001(\005\022\013\n\003" +
      "num\030\003 \001(\005\";\n\tScoreData\022\014\n\004seat\030\001 \001(\005\022\r\n\005" +
      "score\030\002 \001(\005\022\021\n\tchipMoney\030\003 \001(\005\"#\n\006Record" +
      "\022\014\n\004seat\030\001 \001(\005\022\013\n\003pai\030\002 \003(\005\"\304\001\n\014GameRole" +
      "Data\022\022\n\ngameRoleId\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\014" +
      "\n\004seat\030\003 \001(\005\022\r\n\005ready\030\004 \001(\010\022\022\n\nheadImgUr",
      "l\030\005 \001(\t\022\r\n\005money\030\006 \001(\005\022\r\n\005point\030\007 \001(\005\022\013\n" +
      "\003sex\030\010 \001(\005\022\016\n\006online\030\t \001(\010\022\026\n\016platformRo" +
      "leId\030\n \001(\t\022\016\n\006master\030\013 \001(\010\"\246\002\n\025RoleRound" +
      "OverInfoData\022S\n\014gameRoleData\030\001 \001(\0132=.com" +
      ".randioo.compare_collections_server.prot" +
      "ocol.GameRoleData\022K\n\010cardData\030\002 \001(\01329.co" +
      "m.randioo.compare_collections_server.pro" +
      "tocol.CardData\022\022\n\noverMethod\030\003 \001(\005\022\022\n\nro" +
      "undScore\030\004 \001(\005\022\021\n\tchipMoney\030\005 \001(\005\022\016\n\006zhu" +
      "ang\030\006 \001(\010\022\020\n\010betMoney\030\007 \001(\005\022\016\n\006roleId\030\010 ",
      "\001(\005\"+\n\010CardData\022\r\n\005cards\030\001 \003(\005\022\020\n\010cardTy" +
      "pe\030\002 \001(\005\"*\n\014RoleCardData\022\014\n\004card\030\001 \003(\005\022\014" +
      "\n\004seat\030\002 \001(\005\"o\n\010GameData\022\016\n\006roomId\030\001 \001(\t" +
      "\022S\n\014gameRoleData\030\002 \003(\0132=.com.randioo.com" +
      "pare_collections_server.protocol.GameRol" +
      "eData\"+\n\014AudienceData\022\014\n\004name\030\001 \001(\t\022\r\n\005s" +
      "core\030\002 \001(\005\"\034\n\016RoundVideoData\022\n\n\002sc\030\001 \003(\014" +
      "\"h\n\rGameVideoData\022W\n\016roundVideoData\030\001 \003(" +
      "\0132?.com.randioo.compare_collections_serv" +
      "er.protocol.RoundVideoData\"\033\n\nClientCard",
      "\022\r\n\005cards\030\001 \003(\005\"7\n\013EnvVarsData\022\013\n\003key\030\001 " +
      "\001(\t\022\r\n\005value\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\"\322\001\n\024Rol" +
      "eGameOverInfoData\022S\n\014gameRoleData\030\001 \001(\0132" +
      "=.com.randioo.compare_collections_server" +
      ".protocol.GameRoleData\022\r\n\005score\030\002 \001(\005\022\021\n" +
      "\tchipMoney\030\003 \001(\005\022\020\n\010winCount\030\004 \001(\005\022\021\n\tlo" +
      "ssCount\030\005 \001(\005\022\016\n\006master\030\006 \001(\010\022\016\n\006roleId\030" +
      "\007 \001(\005\"\355\001\n\022ResultGameOverData\022c\n\024roleGame" +
      "OverInfoData\030\001 \003(\0132E.com.randioo.compare" +
      "_collections_server.protocol.RoleGameOve",
      "rInfoData\022W\n\016gameConfigData\030\002 \001(\0132?.com." +
      "randioo.compare_collections_server.proto" +
      "col.GameConfigData\022\031\n\021gameOverTimestamp\030" +
      "\003 \001(\t\"\334\006\n\021CxReconnectedData\022\016\n\006mySeat\030\001 " +
      "\001(\005\022S\n\014gameRoleData\030\002 \003(\0132=.com.randioo." +
      "compare_collections_server.protocol.Game" +
      "RoleData\022S\n\014roleCardData\030\003 \003(\0132=.com.ran" +
      "dioo.compare_collections_server.protocol" +
      ".RoleCardData\022N\n\ntableChips\030\004 \003(\0132:.com." +
      "randioo.compare_collections_server.proto",
      "col.ScoreData\022M\n\troleChips\030\005 \003(\0132:.com.r" +
      "andioo.compare_collections_server.protoc" +
      "ol.ScoreData\022\021\n\tcallTypes\030\006 \003(\005\022\020\n\010callS" +
      "eat\030\007 \001(\005\022W\n\016gameConfigData\030\010 \001(\0132?.com." +
      "randioo.compare_collections_server.proto" +
      "col.GameConfigData\022\030\n\020finishRoundCount\030\t" +
      " \001(\005\022_\n\022ResultGameOverData\030\n \001(\0132C.com.r" +
      "andioo.compare_collections_server.protoc" +
      "ol.ResultGameOverData\022\022\n\ngiveUpSeat\030\013 \003(" +
      "\005\022\025\n\rcutCardsState\030\014 \001(\005\022\020\n\010basePool\030\r \001",
      "(\005\022\025\n\rapplyExitSeat\030\016 \001(\005\022\022\n\nrejectSeat\030" +
      "\017 \003(\005\022\021\n\tagreeSeat\030\020 \003(\005\022e\n\025roleRoundOve" +
      "rInfoData\030\021 \003(\0132F.com.randioo.compare_co" +
      "llections_server.protocol.RoleRoundOverI" +
      "nfoData\022\023\n\013exitApplyId\030\022 \001(\005\"\210\007\n\022ZjhReco" +
      "nnectedData\022\016\n\006mySeat\030\001 \001(\005\022S\n\014gameRoleD" +
      "ata\030\002 \003(\0132=.com.randioo.compare_collecti" +
      "ons_server.protocol.GameRoleData\022S\n\014role" +
      "CardData\030\003 \003(\0132=.com.randioo.compare_col" +
      "lections_server.protocol.RoleCardData\022N\n",
      "\ntableChips\030\004 \003(\0132:.com.randioo.compare_" +
      "collections_server.protocol.ScoreData\022M\n" +
      "\troleChips\030\005 \003(\0132:.com.randioo.compare_c" +
      "ollections_server.protocol.ScoreData\022\021\n\t" +
      "callTypes\030\006 \003(\005\022\020\n\010callSeat\030\007 \001(\005\022W\n\016gam" +
      "eConfigData\030\010 \001(\0132?.com.randioo.compare_" +
      "collections_server.protocol.GameConfigDa" +
      "ta\022\030\n\020finishRoundCount\030\t \001(\005\022_\n\022ResultGa" +
      "meOverData\030\n \001(\0132C.com.randioo.compare_c" +
      "ollections_server.protocol.ResultGameOve",
      "rData\022\022\n\ngiveUpSeat\030\013 \003(\005\022\026\n\016ficeGiveUpS" +
      "eat\030\014 \003(\005\022\025\n\rLookCardsSeat\030\r \003(\005\022\021\n\tstep" +
      "State\030\016 \001(\005\022\020\n\010basePool\030\017 \001(\005\022\025\n\rapplyEx" +
      "itSeat\030\020 \001(\005\022\022\n\nrejectSeat\030\021 \003(\005\022\021\n\tagre" +
      "eSeat\030\022 \003(\005\022e\n\025roleRoundOverInfoData\030\023 \003" +
      "(\0132F.com.randioo.compare_collections_ser" +
      "ver.protocol.RoleRoundOverInfoData\022\023\n\013ex" +
      "itApplyId\030\024 \001(\005\"\346\005\n\022SdbReconnectedData\022\016" +
      "\n\006mySeat\030\001 \001(\005\022S\n\014gameRoleData\030\002 \003(\0132=.c" +
      "om.randioo.compare_collections_server.pr",
      "otocol.GameRoleData\022S\n\014roleCardData\030\003 \003(" +
      "\0132=.com.randioo.compare_collections_serv" +
      "er.protocol.RoleCardData\022M\n\tscoreData\030\004 " +
      "\003(\0132:.com.randioo.compare_collections_se" +
      "rver.protocol.ScoreData\022\023\n\013currentSeat\030\005" +
      " \001(\005\022_\n\022ResultGameOverData\030\006 \001(\0132C.com.r" +
      "andioo.compare_collections_server.protoc" +
      "ol.ResultGameOverData\022\030\n\020finishRoundCoun" +
      "t\030\007 \001(\005\022W\n\016gameConfigData\030\010 \001(\0132?.com.ra" +
      "ndioo.compare_collections_server.protoco",
      "l.GameConfigData\022\020\n\010callType\030\t \001(\005\022\022\n\nzh" +
      "uangSeat\030\n \001(\005\022\025\n\rapplyExitSeat\030\020 \001(\005\022\022\n" +
      "\nrejectSeat\030\021 \003(\005\022\021\n\tagreeSeat\030\022 \003(\005\022e\n\025" +
      "roleRoundOverInfoData\030\023 \003(\0132F.com.randio" +
      "o.compare_collections_server.protocol.Ro" +
      "leRoundOverInfoData\022\023\n\013exitApplyId\030\024 \001(\005" +
      "*\'\n\007PayMode\022\017\n\013MASTER_MODE\020\001\022\013\n\007AA_MODE\020" +
      "\002*I\n\nZhuangType\022\022\n\016ZHUANG_FREEDOM\020\001\022\025\n\021Z" +
      "HUANG_ROOM_OWNER\020\002\022\020\n\014ZHUANG_ORDER\020\003*K\n\017" +
      "SpecialCardType\022\n\n\006SHUNZI\020\001\022\t\n\005WUHUA\020\002\022\013",
      "\n\007TONGHUA\020\003\022\010\n\004HULU\020\004\022\n\n\006ZHADAN\020\005*9\n\016Gam" +
      "eOverMethod\022\022\n\016GAME_OVER_TIME\020\001\022\023\n\017GAME_" +
      "OVER_ROUND\020\002*I\n\010GameType\022\023\n\017GAME_TYPE_MA" +
      "TCH\020\001\022\024\n\020GAME_TYPE_FRIEND\020\002\022\022\n\016GAME_TYPE" +
      "_GOLD\020\003*b\n\tGameState\022\026\n\022GAME_STATE_PREPA" +
      "RE\020\001\022\024\n\020GAME_STATE_START\020\002\022\022\n\016GAME_STATE" +
      "_END\020\003\022\023\n\017GAME_STATE_WAIT\020\004*B\n\nKickReaso" +
      "n\022\023\n\017GOLD_NOT_ENOUGH\020\001\022\017\n\013NOT_IN_GAME\020\002\022" +
      "\016\n\nNOT_ONLINE\020\003*\037\n\nOverMethod\022\010\n\004LOSS\020\000\022" +
      "\007\n\003WIN\020\001*D\n\022FightVoteApplyExit\022\r\n\tVOTE_I",
      "DLE\020\000\022\016\n\nVOTE_AGREE\020\001\022\017\n\013VOTE_REJECT\020\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_randioo_compare_collections_server_protocol_RoleData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_randioo_compare_collections_server_protocol_RoleData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_RoleData_descriptor,
              new java.lang.String[] { "RoleId", "RoomId", "Point", "Sex", "ServerTime", "Name", "HeadImageUrl", "GameOverSC", "RandiooCoin", "Gold", "RoomCard", },
              com.randioo.compare_collections_server.protocol.Entity.RoleData.class,
              com.randioo.compare_collections_server.protocol.Entity.RoleData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_GameConfigData_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_randioo_compare_collections_server_protocol_GameConfigData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_GameConfigData_descriptor,
              new java.lang.String[] { "RoundCount", "MaxCount", "RoomCard", "RoomId", "ZhuangType", "OutLookCount", "TopCount", "FightRound", "Bet", "BetMax", "MinCount", "CardsPay", "PayMode", "GameType", "GoldId", "BattleList", },
              com.randioo.compare_collections_server.protocol.Entity.GameConfigData.class,
              com.randioo.compare_collections_server.protocol.Entity.GameConfigData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_PaiNum_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_randioo_compare_collections_server_protocol_PaiNum_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_PaiNum_descriptor,
              new java.lang.String[] { "Seat", "Num", },
              com.randioo.compare_collections_server.protocol.Entity.PaiNum.class,
              com.randioo.compare_collections_server.protocol.Entity.PaiNum.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_ScoreData_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_randioo_compare_collections_server_protocol_ScoreData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_ScoreData_descriptor,
              new java.lang.String[] { "Seat", "Score", "ChipMoney", },
              com.randioo.compare_collections_server.protocol.Entity.ScoreData.class,
              com.randioo.compare_collections_server.protocol.Entity.ScoreData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_Record_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_randioo_compare_collections_server_protocol_Record_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_Record_descriptor,
              new java.lang.String[] { "Seat", "Pai", },
              com.randioo.compare_collections_server.protocol.Entity.Record.class,
              com.randioo.compare_collections_server.protocol.Entity.Record.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_GameRoleData_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_randioo_compare_collections_server_protocol_GameRoleData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_GameRoleData_descriptor,
              new java.lang.String[] { "GameRoleId", "Name", "Seat", "Ready", "HeadImgUrl", "Money", "Point", "Sex", "Online", "PlatformRoleId", "Master", },
              com.randioo.compare_collections_server.protocol.Entity.GameRoleData.class,
              com.randioo.compare_collections_server.protocol.Entity.GameRoleData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_RoleRoundOverInfoData_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_randioo_compare_collections_server_protocol_RoleRoundOverInfoData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_RoleRoundOverInfoData_descriptor,
              new java.lang.String[] { "GameRoleData", "CardData", "OverMethod", "RoundScore", "ChipMoney", "Zhuang", "BetMoney", "RoleId", },
              com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.class,
              com.randioo.compare_collections_server.protocol.Entity.RoleRoundOverInfoData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_CardData_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_randioo_compare_collections_server_protocol_CardData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_CardData_descriptor,
              new java.lang.String[] { "Cards", "CardType", },
              com.randioo.compare_collections_server.protocol.Entity.CardData.class,
              com.randioo.compare_collections_server.protocol.Entity.CardData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_RoleCardData_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_randioo_compare_collections_server_protocol_RoleCardData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_RoleCardData_descriptor,
              new java.lang.String[] { "Card", "Seat", },
              com.randioo.compare_collections_server.protocol.Entity.RoleCardData.class,
              com.randioo.compare_collections_server.protocol.Entity.RoleCardData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_GameData_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_randioo_compare_collections_server_protocol_GameData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_GameData_descriptor,
              new java.lang.String[] { "RoomId", "GameRoleData", },
              com.randioo.compare_collections_server.protocol.Entity.GameData.class,
              com.randioo.compare_collections_server.protocol.Entity.GameData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_AudienceData_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_com_randioo_compare_collections_server_protocol_AudienceData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_AudienceData_descriptor,
              new java.lang.String[] { "Name", "Score", },
              com.randioo.compare_collections_server.protocol.Entity.AudienceData.class,
              com.randioo.compare_collections_server.protocol.Entity.AudienceData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_RoundVideoData_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_com_randioo_compare_collections_server_protocol_RoundVideoData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_RoundVideoData_descriptor,
              new java.lang.String[] { "Sc", },
              com.randioo.compare_collections_server.protocol.Entity.RoundVideoData.class,
              com.randioo.compare_collections_server.protocol.Entity.RoundVideoData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_GameVideoData_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_com_randioo_compare_collections_server_protocol_GameVideoData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_GameVideoData_descriptor,
              new java.lang.String[] { "RoundVideoData", },
              com.randioo.compare_collections_server.protocol.Entity.GameVideoData.class,
              com.randioo.compare_collections_server.protocol.Entity.GameVideoData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_ClientCard_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_com_randioo_compare_collections_server_protocol_ClientCard_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_ClientCard_descriptor,
              new java.lang.String[] { "Cards", },
              com.randioo.compare_collections_server.protocol.Entity.ClientCard.class,
              com.randioo.compare_collections_server.protocol.Entity.ClientCard.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_EnvVarsData_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_com_randioo_compare_collections_server_protocol_EnvVarsData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_EnvVarsData_descriptor,
              new java.lang.String[] { "Key", "Value", "Type", },
              com.randioo.compare_collections_server.protocol.Entity.EnvVarsData.class,
              com.randioo.compare_collections_server.protocol.Entity.EnvVarsData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_RoleGameOverInfoData_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_com_randioo_compare_collections_server_protocol_RoleGameOverInfoData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_RoleGameOverInfoData_descriptor,
              new java.lang.String[] { "GameRoleData", "Score", "ChipMoney", "WinCount", "LossCount", "Master", "RoleId", },
              com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData.class,
              com.randioo.compare_collections_server.protocol.Entity.RoleGameOverInfoData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_ResultGameOverData_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_com_randioo_compare_collections_server_protocol_ResultGameOverData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_ResultGameOverData_descriptor,
              new java.lang.String[] { "RoleGameOverInfoData", "GameConfigData", "GameOverTimestamp", },
              com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.class,
              com.randioo.compare_collections_server.protocol.Entity.ResultGameOverData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_CxReconnectedData_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_com_randioo_compare_collections_server_protocol_CxReconnectedData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_CxReconnectedData_descriptor,
              new java.lang.String[] { "MySeat", "GameRoleData", "RoleCardData", "TableChips", "RoleChips", "CallTypes", "CallSeat", "GameConfigData", "FinishRoundCount", "ResultGameOverData", "GiveUpSeat", "CutCardsState", "BasePool", "ApplyExitSeat", "RejectSeat", "AgreeSeat", "RoleRoundOverInfoData", "ExitApplyId", },
              com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData.class,
              com.randioo.compare_collections_server.protocol.Entity.CxReconnectedData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_ZjhReconnectedData_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_com_randioo_compare_collections_server_protocol_ZjhReconnectedData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_ZjhReconnectedData_descriptor,
              new java.lang.String[] { "MySeat", "GameRoleData", "RoleCardData", "TableChips", "RoleChips", "CallTypes", "CallSeat", "GameConfigData", "FinishRoundCount", "ResultGameOverData", "GiveUpSeat", "FiceGiveUpSeat", "LookCardsSeat", "StepState", "BasePool", "ApplyExitSeat", "RejectSeat", "AgreeSeat", "RoleRoundOverInfoData", "ExitApplyId", },
              com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData.class,
              com.randioo.compare_collections_server.protocol.Entity.ZjhReconnectedData.Builder.class);
          internal_static_com_randioo_compare_collections_server_protocol_SdbReconnectedData_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_com_randioo_compare_collections_server_protocol_SdbReconnectedData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_compare_collections_server_protocol_SdbReconnectedData_descriptor,
              new java.lang.String[] { "MySeat", "GameRoleData", "RoleCardData", "ScoreData", "CurrentSeat", "ResultGameOverData", "FinishRoundCount", "GameConfigData", "CallType", "ZhuangSeat", "ApplyExitSeat", "RejectSeat", "AgreeSeat", "RoleRoundOverInfoData", "ExitApplyId", },
              com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData.class,
              com.randioo.compare_collections_server.protocol.Entity.SdbReconnectedData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
